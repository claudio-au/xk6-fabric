/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2019 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 * 
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 * 
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Fabric.proto

package fabric

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuditLogEntryProto_Operation int32

const (
	// Do not use this default value.
	AuditLogEntryProto_OPERATION_UNSPECIFIED AuditLogEntryProto_Operation = 0
	AuditLogEntryProto_REMOVED_CHILD         AuditLogEntryProto_Operation = 1
	AuditLogEntryProto_FILTERED_CHILDREN     AuditLogEntryProto_Operation = 2
	AuditLogEntryProto_CREATED               AuditLogEntryProto_Operation = 3
	AuditLogEntryProto_MODIFIED              AuditLogEntryProto_Operation = 4
	AuditLogEntryProto_AGGREGATED            AuditLogEntryProto_Operation = 5
	AuditLogEntryProto_TAPPED                AuditLogEntryProto_Operation = 6
)

var AuditLogEntryProto_Operation_name = map[int32]string{
	0: "OPERATION_UNSPECIFIED",
	1: "REMOVED_CHILD",
	2: "FILTERED_CHILDREN",
	3: "CREATED",
	4: "MODIFIED",
	5: "AGGREGATED",
	6: "TAPPED",
}

var AuditLogEntryProto_Operation_value = map[string]int32{
	"OPERATION_UNSPECIFIED": 0,
	"REMOVED_CHILD":         1,
	"FILTERED_CHILDREN":     2,
	"CREATED":               3,
	"MODIFIED":              4,
	"AGGREGATED":            5,
	"TAPPED":                6,
}

func (x AuditLogEntryProto_Operation) String() string {
	return proto.EnumName(AuditLogEntryProto_Operation_name, int32(x))
}

func (AuditLogEntryProto_Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{8, 0}
}

// The fabric Envelope encompasses all telemetry and event data.
//
// The internal protobuf format is designed to be interacted with through the Fabric Library
// which provides and abstracted API for working with fabric envelopes and the many types of
// data they carry.
//
// The FabricEnvelopeProto and its child types are designed to allow for rapid routing, filtering
// and data selection without a full deserializaton of all data.   The Fabric API provides for
// on-demand deserialization and is not something the user has to do manually.
type FabricEnvelopeProto struct {
	// Id of the asset, this can be a vehicle_id, driver_id, etc...
	// aui:asset:vehicle:<uuid>
	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// Service which created the envelope
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// By default the envelope time will track the data_min_time (earliest time of all DataElements)
	// The Fabric API allows this to be overridden.
	EnvelopeTime         *timestamp.Timestamp `protobuf:"bytes,3,opt,name=envelope_time,json=envelopeTime,proto3" json:"envelope_time,omitempty"`
	EnvelopeCreationTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=envelope_creation_time,json=envelopeCreationTime,proto3" json:"envelope_creation_time,omitempty"`
	// NOTE:  The Fabric API automatically updates the min/max times based on dataelements contained
	//        within the envelope.
	// Earliest time of all DataElements in the data field.
	DataMinTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=data_min_time,json=dataMinTime,proto3" json:"data_min_time,omitempty"`
	// Latest time of all DataElements in the data field.
	DataMaxTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=data_max_time,json=dataMaxTime,proto3" json:"data_max_time,omitempty"`
	// Simple Tags: string name, string value, one value per name.
	Tags map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The primary payload of the envelope.  DataElements can contain different types of data such as
	// signal measurements and events.  An envelope can contain any number of elements and will often
	// have dozens or hundreds of entries.
	Data []*DataElementProto `protobuf:"bytes,15,rep,name=data,proto3" json:"data,omitempty"`
	// Contains options driving the tracking and auditing behavior of this envelope and the data it
	// carries.
	TrackingOptions *TrackingOptionsProto `protobuf:"bytes,20,opt,name=tracking_options,json=trackingOptions,proto3" json:"tracking_options,omitempty"`
	// Audit log containing audit entries for the envelope itself.
	Audit *AuditLogProto `protobuf:"bytes,21,opt,name=audit,proto3" json:"audit,omitempty"`
	// Envelope tracing data
	Trace *TraceProto `protobuf:"bytes,22,opt,name=trace,proto3" json:"trace,omitempty"`
	// Expanded Tags: string-or-integer name; single value of various types.
	Itags                map[int64]*FabricEnvelopeTagDataProto  `protobuf:"bytes,24,rep,name=itags,proto3" json:"itags,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Stags                map[string]*FabricEnvelopeTagDataProto `protobuf:"bytes,25,rep,name=stags,proto3" json:"stags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *FabricEnvelopeProto) Reset()         { *m = FabricEnvelopeProto{} }
func (m *FabricEnvelopeProto) String() string { return proto.CompactTextString(m) }
func (*FabricEnvelopeProto) ProtoMessage()    {}
func (*FabricEnvelopeProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{0}
}

func (m *FabricEnvelopeProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FabricEnvelopeProto.Unmarshal(m, b)
}
func (m *FabricEnvelopeProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FabricEnvelopeProto.Marshal(b, m, deterministic)
}
func (m *FabricEnvelopeProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FabricEnvelopeProto.Merge(m, src)
}
func (m *FabricEnvelopeProto) XXX_Size() int {
	return xxx_messageInfo_FabricEnvelopeProto.Size(m)
}
func (m *FabricEnvelopeProto) XXX_DiscardUnknown() {
	xxx_messageInfo_FabricEnvelopeProto.DiscardUnknown(m)
}

var xxx_messageInfo_FabricEnvelopeProto proto.InternalMessageInfo

func (m *FabricEnvelopeProto) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *FabricEnvelopeProto) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *FabricEnvelopeProto) GetEnvelopeTime() *timestamp.Timestamp {
	if m != nil {
		return m.EnvelopeTime
	}
	return nil
}

func (m *FabricEnvelopeProto) GetEnvelopeCreationTime() *timestamp.Timestamp {
	if m != nil {
		return m.EnvelopeCreationTime
	}
	return nil
}

func (m *FabricEnvelopeProto) GetDataMinTime() *timestamp.Timestamp {
	if m != nil {
		return m.DataMinTime
	}
	return nil
}

func (m *FabricEnvelopeProto) GetDataMaxTime() *timestamp.Timestamp {
	if m != nil {
		return m.DataMaxTime
	}
	return nil
}

func (m *FabricEnvelopeProto) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *FabricEnvelopeProto) GetData() []*DataElementProto {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FabricEnvelopeProto) GetTrackingOptions() *TrackingOptionsProto {
	if m != nil {
		return m.TrackingOptions
	}
	return nil
}

func (m *FabricEnvelopeProto) GetAudit() *AuditLogProto {
	if m != nil {
		return m.Audit
	}
	return nil
}

func (m *FabricEnvelopeProto) GetTrace() *TraceProto {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *FabricEnvelopeProto) GetItags() map[int64]*FabricEnvelopeTagDataProto {
	if m != nil {
		return m.Itags
	}
	return nil
}

func (m *FabricEnvelopeProto) GetStags() map[string]*FabricEnvelopeTagDataProto {
	if m != nil {
		return m.Stags
	}
	return nil
}

type FabricEnvelopeTagDataProto struct {
	// Types that are valid to be assigned to TagValue:
	//	*FabricEnvelopeTagDataProto_BytesValue
	//	*FabricEnvelopeTagDataProto_StringValue
	//	*FabricEnvelopeTagDataProto_BoolValue
	//	*FabricEnvelopeTagDataProto_IntegerValue
	//	*FabricEnvelopeTagDataProto_DoubleValue
	TagValue             isFabricEnvelopeTagDataProto_TagValue `protobuf_oneof:"tag_value"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *FabricEnvelopeTagDataProto) Reset()         { *m = FabricEnvelopeTagDataProto{} }
func (m *FabricEnvelopeTagDataProto) String() string { return proto.CompactTextString(m) }
func (*FabricEnvelopeTagDataProto) ProtoMessage()    {}
func (*FabricEnvelopeTagDataProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{1}
}

func (m *FabricEnvelopeTagDataProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FabricEnvelopeTagDataProto.Unmarshal(m, b)
}
func (m *FabricEnvelopeTagDataProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FabricEnvelopeTagDataProto.Marshal(b, m, deterministic)
}
func (m *FabricEnvelopeTagDataProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FabricEnvelopeTagDataProto.Merge(m, src)
}
func (m *FabricEnvelopeTagDataProto) XXX_Size() int {
	return xxx_messageInfo_FabricEnvelopeTagDataProto.Size(m)
}
func (m *FabricEnvelopeTagDataProto) XXX_DiscardUnknown() {
	xxx_messageInfo_FabricEnvelopeTagDataProto.DiscardUnknown(m)
}

var xxx_messageInfo_FabricEnvelopeTagDataProto proto.InternalMessageInfo

type isFabricEnvelopeTagDataProto_TagValue interface {
	isFabricEnvelopeTagDataProto_TagValue()
}

type FabricEnvelopeTagDataProto_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,1,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type FabricEnvelopeTagDataProto_StringValue struct {
	StringValue string `protobuf:"bytes,2,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type FabricEnvelopeTagDataProto_BoolValue struct {
	BoolValue bool `protobuf:"varint,3,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type FabricEnvelopeTagDataProto_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,4,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type FabricEnvelopeTagDataProto_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,5,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

func (*FabricEnvelopeTagDataProto_BytesValue) isFabricEnvelopeTagDataProto_TagValue() {}

func (*FabricEnvelopeTagDataProto_StringValue) isFabricEnvelopeTagDataProto_TagValue() {}

func (*FabricEnvelopeTagDataProto_BoolValue) isFabricEnvelopeTagDataProto_TagValue() {}

func (*FabricEnvelopeTagDataProto_IntegerValue) isFabricEnvelopeTagDataProto_TagValue() {}

func (*FabricEnvelopeTagDataProto_DoubleValue) isFabricEnvelopeTagDataProto_TagValue() {}

func (m *FabricEnvelopeTagDataProto) GetTagValue() isFabricEnvelopeTagDataProto_TagValue {
	if m != nil {
		return m.TagValue
	}
	return nil
}

func (m *FabricEnvelopeTagDataProto) GetBytesValue() []byte {
	if x, ok := m.GetTagValue().(*FabricEnvelopeTagDataProto_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *FabricEnvelopeTagDataProto) GetStringValue() string {
	if x, ok := m.GetTagValue().(*FabricEnvelopeTagDataProto_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *FabricEnvelopeTagDataProto) GetBoolValue() bool {
	if x, ok := m.GetTagValue().(*FabricEnvelopeTagDataProto_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *FabricEnvelopeTagDataProto) GetIntegerValue() int64 {
	if x, ok := m.GetTagValue().(*FabricEnvelopeTagDataProto_IntegerValue); ok {
		return x.IntegerValue
	}
	return 0
}

func (m *FabricEnvelopeTagDataProto) GetDoubleValue() float64 {
	if x, ok := m.GetTagValue().(*FabricEnvelopeTagDataProto_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FabricEnvelopeTagDataProto) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FabricEnvelopeTagDataProto_BytesValue)(nil),
		(*FabricEnvelopeTagDataProto_StringValue)(nil),
		(*FabricEnvelopeTagDataProto_BoolValue)(nil),
		(*FabricEnvelopeTagDataProto_IntegerValue)(nil),
		(*FabricEnvelopeTagDataProto_DoubleValue)(nil),
	}
}

// Data elements carry the payload of the envelope.
// The actual data is represent as an 'Any' which only deserializes when it is explicitly unpacked.
// This allows for efficient routing and filtering of signal measurements, events, etc via uri
// without deserializing all of the data. (which could be a nested structure or contain hundreds of
// elements)
//
// Initially element will carry Measurements (Held within a new version of Metric) and/or Events
//
// Context carries Measurements and Events related to this data element.   For example, the derived
// measurment 'aui:signal:au:speed_delta_over_limit' would be derived from speed_limit and speed.
// speed_limit and speed could optionally be stored as context so a down-stream processor could
// understand what data contributed to the calculation of the derived metric.
//
// Some payload element types, such as Event, also carry internal context, which could also be exposed
// through the same API.
type DataElementProto struct {
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	// Generation timestamp of Data Element defined by source (e.g processor, devices.)
	TimeStamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	// Timestamp capturing the arrival time of the DataElement into the TMC (if exists.)
	TmcArrivalTimeStamp  *timestamp.Timestamp `protobuf:"bytes,7,opt,name=tmc_arrival_time_stamp,json=tmcArrivalTimeStamp,proto3" json:"tmc_arrival_time_stamp,omitempty"`
	Element              *any.Any             `protobuf:"bytes,3,opt,name=element,proto3" json:"element,omitempty"`
	Context              []*any.Any           `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty"`
	Audit                *AuditLogProto       `protobuf:"bytes,5,opt,name=audit,proto3" json:"audit,omitempty"`
	ElementStats         *ElementStats        `protobuf:"bytes,6,opt,name=element_stats,json=elementStats,proto3" json:"element_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DataElementProto) Reset()         { *m = DataElementProto{} }
func (m *DataElementProto) String() string { return proto.CompactTextString(m) }
func (*DataElementProto) ProtoMessage()    {}
func (*DataElementProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{2}
}

func (m *DataElementProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataElementProto.Unmarshal(m, b)
}
func (m *DataElementProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataElementProto.Marshal(b, m, deterministic)
}
func (m *DataElementProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataElementProto.Merge(m, src)
}
func (m *DataElementProto) XXX_Size() int {
	return xxx_messageInfo_DataElementProto.Size(m)
}
func (m *DataElementProto) XXX_DiscardUnknown() {
	xxx_messageInfo_DataElementProto.DiscardUnknown(m)
}

var xxx_messageInfo_DataElementProto proto.InternalMessageInfo

func (m *DataElementProto) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *DataElementProto) GetTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStamp
	}
	return nil
}

func (m *DataElementProto) GetTmcArrivalTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.TmcArrivalTimeStamp
	}
	return nil
}

func (m *DataElementProto) GetElement() *any.Any {
	if m != nil {
		return m.Element
	}
	return nil
}

func (m *DataElementProto) GetContext() []*any.Any {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *DataElementProto) GetAudit() *AuditLogProto {
	if m != nil {
		return m.Audit
	}
	return nil
}

func (m *DataElementProto) GetElementStats() *ElementStats {
	if m != nil {
		return m.ElementStats
	}
	return nil
}

// Statistics about the contents of a data element
//     well_known:  The number of well-known signals / events contained within
//         custom:  The number of custome signals / events
//                  custom is a signal/event that is not well known
//          other:  Count of all DataElements that are not well_known or custom signals/events
//      raw_bytes:  Total number of raw bytes carried in the DataElement.  This includes
//                  explicit raw data and opaque / additional data
type ElementStats struct {
	WellKnown            int32    `protobuf:"varint,1,opt,name=well_known,json=wellKnown,proto3" json:"well_known,omitempty"`
	Custom               int32    `protobuf:"varint,2,opt,name=custom,proto3" json:"custom,omitempty"`
	Other                int32    `protobuf:"varint,3,opt,name=other,proto3" json:"other,omitempty"`
	RawBytes             int64    `protobuf:"varint,4,opt,name=raw_bytes,json=rawBytes,proto3" json:"raw_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElementStats) Reset()         { *m = ElementStats{} }
func (m *ElementStats) String() string { return proto.CompactTextString(m) }
func (*ElementStats) ProtoMessage()    {}
func (*ElementStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{3}
}

func (m *ElementStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElementStats.Unmarshal(m, b)
}
func (m *ElementStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElementStats.Marshal(b, m, deterministic)
}
func (m *ElementStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElementStats.Merge(m, src)
}
func (m *ElementStats) XXX_Size() int {
	return xxx_messageInfo_ElementStats.Size(m)
}
func (m *ElementStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ElementStats.DiscardUnknown(m)
}

var xxx_messageInfo_ElementStats proto.InternalMessageInfo

func (m *ElementStats) GetWellKnown() int32 {
	if m != nil {
		return m.WellKnown
	}
	return 0
}

func (m *ElementStats) GetCustom() int32 {
	if m != nil {
		return m.Custom
	}
	return 0
}

func (m *ElementStats) GetOther() int32 {
	if m != nil {
		return m.Other
	}
	return 0
}

func (m *ElementStats) GetRawBytes() int64 {
	if m != nil {
		return m.RawBytes
	}
	return 0
}

type TrackingOptionsProto struct {
	AuditEnabled         bool     `protobuf:"varint,1,opt,name=auditEnabled,proto3" json:"auditEnabled,omitempty"`
	TracingEnabled       bool     `protobuf:"varint,2,opt,name=tracingEnabled,proto3" json:"tracingEnabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackingOptionsProto) Reset()         { *m = TrackingOptionsProto{} }
func (m *TrackingOptionsProto) String() string { return proto.CompactTextString(m) }
func (*TrackingOptionsProto) ProtoMessage()    {}
func (*TrackingOptionsProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{4}
}

func (m *TrackingOptionsProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackingOptionsProto.Unmarshal(m, b)
}
func (m *TrackingOptionsProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackingOptionsProto.Marshal(b, m, deterministic)
}
func (m *TrackingOptionsProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackingOptionsProto.Merge(m, src)
}
func (m *TrackingOptionsProto) XXX_Size() int {
	return xxx_messageInfo_TrackingOptionsProto.Size(m)
}
func (m *TrackingOptionsProto) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackingOptionsProto.DiscardUnknown(m)
}

var xxx_messageInfo_TrackingOptionsProto proto.InternalMessageInfo

func (m *TrackingOptionsProto) GetAuditEnabled() bool {
	if m != nil {
		return m.AuditEnabled
	}
	return false
}

func (m *TrackingOptionsProto) GetTracingEnabled() bool {
	if m != nil {
		return m.TracingEnabled
	}
	return false
}

type TraceProto struct {
	TraceData            []*any.Any `protobuf:"bytes,1,rep,name=trace_data,json=traceData,proto3" json:"trace_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TraceProto) Reset()         { *m = TraceProto{} }
func (m *TraceProto) String() string { return proto.CompactTextString(m) }
func (*TraceProto) ProtoMessage()    {}
func (*TraceProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{5}
}

func (m *TraceProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceProto.Unmarshal(m, b)
}
func (m *TraceProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceProto.Marshal(b, m, deterministic)
}
func (m *TraceProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceProto.Merge(m, src)
}
func (m *TraceProto) XXX_Size() int {
	return xxx_messageInfo_TraceProto.Size(m)
}
func (m *TraceProto) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceProto.DiscardUnknown(m)
}

var xxx_messageInfo_TraceProto proto.InternalMessageInfo

func (m *TraceProto) GetTraceData() []*any.Any {
	if m != nil {
		return m.TraceData
	}
	return nil
}

type OpenTracingTraceProto struct {
	TraceData            []byte   `protobuf:"bytes,1,opt,name=trace_data,json=traceData,proto3" json:"trace_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenTracingTraceProto) Reset()         { *m = OpenTracingTraceProto{} }
func (m *OpenTracingTraceProto) String() string { return proto.CompactTextString(m) }
func (*OpenTracingTraceProto) ProtoMessage()    {}
func (*OpenTracingTraceProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{6}
}

func (m *OpenTracingTraceProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenTracingTraceProto.Unmarshal(m, b)
}
func (m *OpenTracingTraceProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenTracingTraceProto.Marshal(b, m, deterministic)
}
func (m *OpenTracingTraceProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenTracingTraceProto.Merge(m, src)
}
func (m *OpenTracingTraceProto) XXX_Size() int {
	return xxx_messageInfo_OpenTracingTraceProto.Size(m)
}
func (m *OpenTracingTraceProto) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenTracingTraceProto.DiscardUnknown(m)
}

var xxx_messageInfo_OpenTracingTraceProto proto.InternalMessageInfo

func (m *OpenTracingTraceProto) GetTraceData() []byte {
	if m != nil {
		return m.TraceData
	}
	return nil
}

type AuditLogProto struct {
	AuditLogs            []*any.Any `protobuf:"bytes,1,rep,name=audit_logs,json=auditLogs,proto3" json:"audit_logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AuditLogProto) Reset()         { *m = AuditLogProto{} }
func (m *AuditLogProto) String() string { return proto.CompactTextString(m) }
func (*AuditLogProto) ProtoMessage()    {}
func (*AuditLogProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{7}
}

func (m *AuditLogProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditLogProto.Unmarshal(m, b)
}
func (m *AuditLogProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditLogProto.Marshal(b, m, deterministic)
}
func (m *AuditLogProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditLogProto.Merge(m, src)
}
func (m *AuditLogProto) XXX_Size() int {
	return xxx_messageInfo_AuditLogProto.Size(m)
}
func (m *AuditLogProto) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditLogProto.DiscardUnknown(m)
}

var xxx_messageInfo_AuditLogProto proto.InternalMessageInfo

func (m *AuditLogProto) GetAuditLogs() []*any.Any {
	if m != nil {
		return m.AuditLogs
	}
	return nil
}

type AuditLogEntryProto struct {
	Actor                string                       `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	Operation            AuditLogEntryProto_Operation `protobuf:"varint,2,opt,name=operation,proto3,enum=com.autonomic.fabric.AuditLogEntryProto_Operation" json:"operation,omitempty"`
	OperationTime        *timestamp.Timestamp         `protobuf:"bytes,3,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
	Tags                 map[string]string            `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SubjectUris          []string                     `protobuf:"bytes,5,rep,name=subject_uris,json=subjectUris,proto3" json:"subject_uris,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *AuditLogEntryProto) Reset()         { *m = AuditLogEntryProto{} }
func (m *AuditLogEntryProto) String() string { return proto.CompactTextString(m) }
func (*AuditLogEntryProto) ProtoMessage()    {}
func (*AuditLogEntryProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f6ec47264df78, []int{8}
}

func (m *AuditLogEntryProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditLogEntryProto.Unmarshal(m, b)
}
func (m *AuditLogEntryProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditLogEntryProto.Marshal(b, m, deterministic)
}
func (m *AuditLogEntryProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditLogEntryProto.Merge(m, src)
}
func (m *AuditLogEntryProto) XXX_Size() int {
	return xxx_messageInfo_AuditLogEntryProto.Size(m)
}
func (m *AuditLogEntryProto) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditLogEntryProto.DiscardUnknown(m)
}

var xxx_messageInfo_AuditLogEntryProto proto.InternalMessageInfo

func (m *AuditLogEntryProto) GetActor() string {
	if m != nil {
		return m.Actor
	}
	return ""
}

func (m *AuditLogEntryProto) GetOperation() AuditLogEntryProto_Operation {
	if m != nil {
		return m.Operation
	}
	return AuditLogEntryProto_OPERATION_UNSPECIFIED
}

func (m *AuditLogEntryProto) GetOperationTime() *timestamp.Timestamp {
	if m != nil {
		return m.OperationTime
	}
	return nil
}

func (m *AuditLogEntryProto) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AuditLogEntryProto) GetSubjectUris() []string {
	if m != nil {
		return m.SubjectUris
	}
	return nil
}

func init() {
	proto.RegisterEnum("com.autonomic.fabric.AuditLogEntryProto_Operation", AuditLogEntryProto_Operation_name, AuditLogEntryProto_Operation_value)
	proto.RegisterType((*FabricEnvelopeProto)(nil), "com.autonomic.fabric.FabricEnvelopeProto")
	proto.RegisterMapType((map[int64]*FabricEnvelopeTagDataProto)(nil), "com.autonomic.fabric.FabricEnvelopeProto.ItagsEntry")
	proto.RegisterMapType((map[string]*FabricEnvelopeTagDataProto)(nil), "com.autonomic.fabric.FabricEnvelopeProto.StagsEntry")
	proto.RegisterMapType((map[string]string)(nil), "com.autonomic.fabric.FabricEnvelopeProto.TagsEntry")
	proto.RegisterType((*FabricEnvelopeTagDataProto)(nil), "com.autonomic.fabric.FabricEnvelopeTagDataProto")
	proto.RegisterType((*DataElementProto)(nil), "com.autonomic.fabric.DataElementProto")
	proto.RegisterType((*ElementStats)(nil), "com.autonomic.fabric.ElementStats")
	proto.RegisterType((*TrackingOptionsProto)(nil), "com.autonomic.fabric.TrackingOptionsProto")
	proto.RegisterType((*TraceProto)(nil), "com.autonomic.fabric.TraceProto")
	proto.RegisterType((*OpenTracingTraceProto)(nil), "com.autonomic.fabric.OpenTracingTraceProto")
	proto.RegisterType((*AuditLogProto)(nil), "com.autonomic.fabric.AuditLogProto")
	proto.RegisterType((*AuditLogEntryProto)(nil), "com.autonomic.fabric.AuditLogEntryProto")
	proto.RegisterMapType((map[string]string)(nil), "com.autonomic.fabric.AuditLogEntryProto.TagsEntry")
}

func init() { proto.RegisterFile("Fabric.proto", fileDescriptor_e67f6ec47264df78) }

var fileDescriptor_e67f6ec47264df78 = []byte{
	// 1111 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x36, 0x2d, 0xd3, 0x96, 0x46, 0x92, 0xa3, 0x6c, 0x64, 0x83, 0x56, 0x11, 0xc4, 0x61, 0xd0,
	0xc0, 0x28, 0x10, 0xaa, 0x70, 0x8a, 0xb4, 0xc9, 0xa1, 0x85, 0x6c, 0xd1, 0xb6, 0xda, 0xd8, 0x12,
	0xd6, 0x72, 0x0e, 0xbd, 0x10, 0x2b, 0x7a, 0xc3, 0x30, 0x26, 0xb9, 0x02, 0xb9, 0xf4, 0xcf, 0x13,
	0xf4, 0x05, 0xfa, 0x66, 0xbd, 0xf7, 0x0d, 0x7a, 0xef, 0xb1, 0xd8, 0x1f, 0xca, 0xb2, 0x2a, 0xff,
	0xa4, 0xe8, 0x8d, 0x33, 0xfb, 0x7d, 0xdf, 0xcc, 0xce, 0xee, 0xce, 0x10, 0x6a, 0x7b, 0x64, 0x94,
	0x86, 0xbe, 0x33, 0x4e, 0x19, 0x67, 0xa8, 0xe9, 0xb3, 0xd8, 0x21, 0x39, 0x67, 0x09, 0x8b, 0x43,
	0xdf, 0xf9, 0x28, 0xd7, 0x5a, 0xcf, 0x02, 0xc6, 0x82, 0x88, 0xb6, 0x25, 0x66, 0x94, 0x7f, 0x6c,
	0xf3, 0x30, 0xa6, 0x19, 0x27, 0xf1, 0x58, 0xd1, 0x5a, 0x1b, 0xb3, 0x00, 0x92, 0x5c, 0xa9, 0x25,
	0xfb, 0x8f, 0x32, 0x3c, 0x51, 0x21, 0xdc, 0xe4, 0x9c, 0x46, 0x6c, 0x4c, 0x07, 0x32, 0xd2, 0x06,
	0x94, 0x49, 0x96, 0x51, 0xee, 0x85, 0xa7, 0x96, 0xb1, 0x69, 0x6c, 0x55, 0xf0, 0x8a, 0xb4, 0x7b,
	0xa7, 0x68, 0x1d, 0x96, 0x33, 0x96, 0xa7, 0x3e, 0xb5, 0x16, 0xe5, 0x82, 0xb6, 0xd0, 0x4f, 0x50,
	0xa7, 0x5a, 0xc3, 0x13, 0x19, 0x58, 0xa5, 0x4d, 0x63, 0xab, 0xba, 0xdd, 0x72, 0x54, 0x74, 0xa7,
	0x88, 0xee, 0x0c, 0x8b, 0xf4, 0x70, 0xad, 0x20, 0x08, 0x17, 0x1a, 0xc0, 0xfa, 0x44, 0xc0, 0x4f,
	0x29, 0xe1, 0x21, 0x4b, 0x94, 0xd2, 0xd2, 0xbd, 0x4a, 0xcd, 0x82, 0xb9, 0xab, 0x89, 0x52, 0xf1,
	0x47, 0xa8, 0x9f, 0x12, 0x4e, 0xbc, 0x38, 0xd4, 0x42, 0xe6, 0xbd, 0x42, 0x55, 0x41, 0x38, 0x0c,
	0x67, 0xf8, 0xe4, 0x52, 0xf1, 0x97, 0x1f, 0xc8, 0x27, 0x97, 0x92, 0xbf, 0x0f, 0x4b, 0x9c, 0x04,
	0x99, 0xb5, 0xb2, 0x59, 0xda, 0xaa, 0x6e, 0xbf, 0x76, 0xe6, 0x1d, 0x9f, 0x33, 0xa7, 0xfc, 0xce,
	0x90, 0x04, 0x99, 0x9b, 0xf0, 0xf4, 0x0a, 0x4b, 0x01, 0xf4, 0x0e, 0x96, 0x84, 0xae, 0xf5, 0x48,
	0x0a, 0xbd, 0x9c, 0x2f, 0xd4, 0x25, 0x9c, 0xb8, 0x11, 0x8d, 0x69, 0xc2, 0xa5, 0x0a, 0x96, 0x1c,
	0x74, 0x02, 0x0d, 0x9e, 0x12, 0xff, 0x2c, 0x4c, 0x02, 0x8f, 0x8d, 0x45, 0x6d, 0x32, 0xab, 0x29,
	0xf7, 0xf1, 0xcd, 0x7c, 0x9d, 0xa1, 0x46, 0xf7, 0x15, 0x58, 0x69, 0x3d, 0xe2, 0x37, 0xbd, 0xe8,
	0x2d, 0x98, 0x24, 0x3f, 0x0d, 0xb9, 0xb5, 0x26, 0xb5, 0x5e, 0xcc, 0xd7, 0xea, 0x08, 0xc8, 0x7b,
	0x16, 0x28, 0x11, 0xc5, 0x40, 0x6f, 0xc0, 0x14, 0x6a, 0xd4, 0x5a, 0x97, 0xd4, 0xcd, 0xdb, 0xd3,
	0xa0, 0x9a, 0x27, 0xe1, 0xe8, 0x67, 0x30, 0x43, 0x59, 0x4f, 0x4b, 0x96, 0xe1, 0xbb, 0x87, 0xd7,
	0xb3, 0xc7, 0x27, 0x05, 0x55, 0x12, 0x42, 0x2b, 0x93, 0x5a, 0x1b, 0x5f, 0xaa, 0x75, 0x3c, 0xa5,
	0x25, 0x25, 0x5a, 0xdf, 0x43, 0x65, 0x72, 0x60, 0xa8, 0x01, 0xa5, 0x33, 0x7a, 0xa5, 0x1f, 0x8d,
	0xf8, 0x44, 0x4d, 0x30, 0xcf, 0x49, 0x94, 0x17, 0xef, 0x45, 0x19, 0xef, 0x16, 0x7f, 0x30, 0x5a,
	0x9f, 0x01, 0xae, 0x33, 0x9b, 0x66, 0x96, 0x14, 0x73, 0x6f, 0x9a, 0x59, 0xdd, 0xfe, 0xf6, 0x21,
	0x49, 0x0e, 0x49, 0x20, 0x2e, 0x82, 0x2e, 0xdc, 0x8d, 0x58, 0xc7, 0xfc, 0x8e, 0x2c, 0xff, 0xc7,
	0x58, 0xf6, 0x9f, 0x06, 0xb4, 0x6e, 0x47, 0xa2, 0xe7, 0x50, 0x1d, 0x5d, 0x71, 0x9a, 0x79, 0x2a,
	0xa0, 0x48, 0xa2, 0x76, 0xb0, 0x80, 0x41, 0x3a, 0x3f, 0x08, 0x1f, 0x7a, 0x01, 0xb5, 0x8c, 0xa7,
	0xe2, 0xca, 0x4e, 0x95, 0xee, 0x60, 0x01, 0x57, 0x95, 0x57, 0x81, 0x9e, 0x01, 0x8c, 0x18, 0x8b,
	0x34, 0x44, 0xb4, 0x9b, 0xf2, 0xc1, 0x02, 0xae, 0x08, 0x9f, 0x02, 0x7c, 0x0d, 0xf5, 0x30, 0xe1,
	0x34, 0xa0, 0xa9, 0xc6, 0x88, 0x46, 0x52, 0x3a, 0x58, 0xc0, 0x35, 0xed, 0x9e, 0x04, 0x3b, 0x65,
	0xf9, 0x28, 0xa2, 0x1a, 0x25, 0xba, 0x84, 0x21, 0x82, 0x29, 0xaf, 0x04, 0xed, 0x54, 0xa1, 0xc2,
	0x89, 0x4e, 0xc7, 0xfe, 0xbd, 0x04, 0x8d, 0xd9, 0xe7, 0x26, 0x6a, 0x9a, 0xa7, 0x61, 0x51, 0xd3,
	0x3c, 0x0d, 0xd1, 0x5b, 0x00, 0xd1, 0x36, 0x3c, 0xd9, 0x1a, 0x74, 0x61, 0xef, 0x6a, 0x1e, 0x15,
	0x81, 0x3e, 0x16, 0x9f, 0xa8, 0x0f, 0xeb, 0x3c, 0xf6, 0x3d, 0x92, 0xa6, 0xe1, 0x39, 0x89, 0xbc,
	0x29, 0x99, 0x95, 0x7b, 0x65, 0x9e, 0xf0, 0xd8, 0xef, 0x28, 0xe2, 0x70, 0x22, 0xe8, 0xc0, 0x0a,
	0x55, 0xd9, 0xea, 0xc6, 0xdc, 0xfc, 0x97, 0x42, 0x27, 0xb9, 0xc2, 0x05, 0x48, 0xe0, 0x7d, 0x96,
	0x70, 0x7a, 0xc9, 0xad, 0x25, 0xf9, 0x44, 0x6e, 0xc1, 0x6b, 0xd0, 0x75, 0x3f, 0x30, 0xbf, 0xb8,
	0x1f, 0xec, 0x43, 0x5d, 0x47, 0x15, 0x5b, 0xe4, 0x99, 0x6e, 0xb3, 0xf6, 0x7c, 0x09, 0x5d, 0xf3,
	0x63, 0x81, 0xc4, 0x35, 0x3a, 0x65, 0xd9, 0x97, 0x50, 0x9b, 0x5e, 0x45, 0x4f, 0x01, 0x2e, 0x68,
	0x14, 0x79, 0x67, 0x09, 0xbb, 0x48, 0xe4, 0xc1, 0x98, 0xb8, 0x22, 0x3c, 0xbf, 0x08, 0x87, 0x98,
	0x64, 0x7e, 0x9e, 0x71, 0x16, 0xcb, 0xa3, 0x31, 0xb1, 0xb6, 0xc4, 0x83, 0x65, 0xfc, 0x13, 0x4d,
	0x65, 0xa1, 0x4c, 0xac, 0x0c, 0xf4, 0x15, 0x54, 0x52, 0x72, 0xe1, 0xc9, 0x4b, 0xaa, 0x2e, 0x12,
	0x2e, 0xa7, 0xe4, 0x62, 0x47, 0xd8, 0xf6, 0x08, 0x9a, 0xf3, 0xda, 0x26, 0xb2, 0xa1, 0x26, 0xf7,
	0xe8, 0x26, 0x64, 0x14, 0x51, 0x35, 0x4b, 0xcb, 0xf8, 0x86, 0x0f, 0xbd, 0x84, 0x55, 0xd1, 0xdf,
	0xc2, 0x24, 0x28, 0x50, 0x8b, 0x12, 0x35, 0xe3, 0xb5, 0x3b, 0x00, 0xd7, 0x3d, 0x11, 0xbd, 0x06,
	0x90, 0x5d, 0xd1, 0x93, 0x83, 0xc1, 0xb8, 0xe3, 0x88, 0x2a, 0x12, 0x27, 0xae, 0xab, 0xfd, 0x06,
	0xd6, 0xfa, 0x63, 0x9a, 0x0c, 0x95, 0xf0, 0x94, 0xda, 0xd3, 0x19, 0x35, 0x63, 0xab, 0x36, 0xcd,
	0xeb, 0x42, 0xfd, 0xc6, 0xc9, 0x89, 0xe8, 0x72, 0x0f, 0x5e, 0xc4, 0x82, 0xec, 0xee, 0xe8, 0x44,
	0x13, 0x33, 0xfb, 0xaf, 0x12, 0xa0, 0x42, 0x46, 0xb6, 0x21, 0xa5, 0xd5, 0x04, 0x93, 0xf8, 0x9c,
	0xa5, 0xfa, 0xe5, 0x28, 0x03, 0x0d, 0xa0, 0xc2, 0xc6, 0x34, 0x95, 0xc3, 0x5c, 0x16, 0x64, 0x75,
	0x7b, 0xfb, 0xee, 0x3b, 0x75, 0x2d, 0xe9, 0xf4, 0x0b, 0x26, 0xbe, 0x16, 0x41, 0x1d, 0x58, 0x9d,
	0x18, 0x0f, 0xfd, 0x43, 0xa9, 0x4f, 0x18, 0x72, 0xa0, 0xef, 0xe9, 0x81, 0xae, 0x5e, 0xc4, 0xc3,
	0xf3, 0x99, 0x9d, 0xe7, 0xcf, 0xa1, 0x96, 0xe5, 0xa3, 0xcf, 0xd4, 0xe7, 0x5e, 0x9e, 0x86, 0x99,
	0x65, 0x6e, 0x96, 0xb6, 0x2a, 0xb8, 0xaa, 0x7d, 0x27, 0x69, 0xf8, 0xdf, 0x87, 0x8a, 0xfd, 0x9b,
	0x01, 0x95, 0xc9, 0xfe, 0xd1, 0x06, 0xac, 0xf5, 0x07, 0x2e, 0xee, 0x0c, 0x7b, 0xfd, 0x23, 0xef,
	0xe4, 0xe8, 0x78, 0xe0, 0xee, 0xf6, 0xf6, 0x7a, 0x6e, 0xb7, 0xb1, 0x80, 0x1e, 0x43, 0x1d, 0xbb,
	0x87, 0xfd, 0x0f, 0x6e, 0xd7, 0xdb, 0x3d, 0xe8, 0xbd, 0xef, 0x36, 0x0c, 0xb4, 0x06, 0x8f, 0xf7,
	0x7a, 0xef, 0x87, 0x2e, 0x2e, 0x7c, 0xd8, 0x3d, 0x6a, 0x2c, 0xa2, 0x2a, 0xac, 0xec, 0x62, 0xb7,
	0x33, 0x74, 0xbb, 0x8d, 0x12, 0xaa, 0x41, 0xf9, 0xb0, 0xdf, 0x55, 0x22, 0x4b, 0x68, 0x15, 0xa0,
	0xb3, 0xbf, 0x8f, 0xdd, 0x7d, 0xb9, 0x6a, 0x22, 0x80, 0xe5, 0x61, 0x67, 0x30, 0x70, 0xbb, 0x8d,
	0xe5, 0x9d, 0x0c, 0xe6, 0xfe, 0xb0, 0xee, 0x54, 0xd5, 0x6c, 0x90, 0xa5, 0x19, 0x18, 0xbf, 0xf6,
	0x82, 0x90, 0x7f, 0xca, 0x47, 0xa2, 0x98, 0xed, 0x09, 0xf6, 0x15, 0x09, 0xdb, 0x0a, 0xfe, 0xca,
	0x67, 0x71, 0xcc, 0x92, 0x76, 0x96, 0xfa, 0xed, 0x98, 0x84, 0x89, 0xfa, 0x8d, 0x6d, 0xdf, 0x40,
	0x6b, 0xe8, 0xdf, 0x86, 0x31, 0x5a, 0x96, 0xcb, 0xaf, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x6e,
	0xe7, 0xad, 0xd6, 0x3a, 0x0b, 0x00, 0x00,
}