/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/raw/raw.proto

package raw

import (
	fmt "fmt"
	common "xk6-fabric/proto/autonomic/ext/common"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_UNKNOWN_MESSAGE_TYPE      MessageType = 0
	MessageType_PUBLISH_REQUEST           MessageType = 1
	MessageType_ENCRYPTED_PUBLISH_REQUEST MessageType = 2
	MessageType_REPORT                    MessageType = 3
	// OEM Specific message types
	MessageType_FTCP       MessageType = 100
	MessageType_FNV2_MMOTA MessageType = 101
)

var MessageType_name = map[int32]string{
	0:   "UNKNOWN_MESSAGE_TYPE",
	1:   "PUBLISH_REQUEST",
	2:   "ENCRYPTED_PUBLISH_REQUEST",
	3:   "REPORT",
	100: "FTCP",
	101: "FNV2_MMOTA",
}

var MessageType_value = map[string]int32{
	"UNKNOWN_MESSAGE_TYPE":      0,
	"PUBLISH_REQUEST":           1,
	"ENCRYPTED_PUBLISH_REQUEST": 2,
	"REPORT":                    3,
	"FTCP":                      100,
	"FNV2_MMOTA":                101,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_45f543ef5debaf5f, []int{0}
}

// A Raw message contains the raw data, as sent, to/from a specific asset_id.
// For example if a raw data packet arrives and contains data for multiple vehicles,
// then multiple RawTelemetry messages will be generated, each containing the raw
// data for a single vehicle.
type Raw struct {
	// Type of the raw data
	MessageType MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=autonomic.ext.raw.MessageType" json:"message_type,omitempty"`
	// Type specific version information
	MessageVersion string `protobuf:"bytes,2,opt,name=message_version,json=messageVersion,proto3" json:"message_version,omitempty"`
	// The time this raw message was created. For purposes of raw message ordering, this timestamp can be used.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The correlation id is a 128-bit v4 UUID.
	//
	// The correlation id allows related messages to be connected.
	// The meaning of the correlation id is specific to the scenario of
	// message: for deployments, it is the deployment id; for control it
	// is the command id.
	//
	// Messages for scenarios that do not require correlation must not set
	// the correlation id and services should ignore the correlation id
	// on such messages.
	CorrelationId string `protobuf:"bytes,10,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Raw_BytesData
	//	*Raw_JsonData
	Data isRaw_Data `protobuf_oneof:"data"`
	// oem parameters for this telemetry. Opaque to Au.
	OemData              *common.OemData `protobuf:"bytes,30,opt,name=oem_data,json=oemData,proto3" json:"oem_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Raw) Reset()         { *m = Raw{} }
func (m *Raw) String() string { return proto.CompactTextString(m) }
func (*Raw) ProtoMessage()    {}
func (*Raw) Descriptor() ([]byte, []int) {
	return fileDescriptor_45f543ef5debaf5f, []int{0}
}

func (m *Raw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Raw.Unmarshal(m, b)
}
func (m *Raw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Raw.Marshal(b, m, deterministic)
}
func (m *Raw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Raw.Merge(m, src)
}
func (m *Raw) XXX_Size() int {
	return xxx_messageInfo_Raw.Size(m)
}
func (m *Raw) XXX_DiscardUnknown() {
	xxx_messageInfo_Raw.DiscardUnknown(m)
}

var xxx_messageInfo_Raw proto.InternalMessageInfo

func (m *Raw) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_UNKNOWN_MESSAGE_TYPE
}

func (m *Raw) GetMessageVersion() string {
	if m != nil {
		return m.MessageVersion
	}
	return ""
}

func (m *Raw) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Raw) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

type isRaw_Data interface {
	isRaw_Data()
}

type Raw_BytesData struct {
	BytesData []byte `protobuf:"bytes,20,opt,name=bytes_data,json=bytesData,proto3,oneof"`
}

type Raw_JsonData struct {
	JsonData string `protobuf:"bytes,21,opt,name=json_data,json=jsonData,proto3,oneof"`
}

func (*Raw_BytesData) isRaw_Data() {}

func (*Raw_JsonData) isRaw_Data() {}

func (m *Raw) GetData() isRaw_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Raw) GetBytesData() []byte {
	if x, ok := m.GetData().(*Raw_BytesData); ok {
		return x.BytesData
	}
	return nil
}

func (m *Raw) GetJsonData() string {
	if x, ok := m.GetData().(*Raw_JsonData); ok {
		return x.JsonData
	}
	return ""
}

func (m *Raw) GetOemData() *common.OemData {
	if m != nil {
		return m.OemData
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Raw) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Raw_BytesData)(nil),
		(*Raw_JsonData)(nil),
	}
}

func init() {
	proto.RegisterEnum("autonomic.ext.raw.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*Raw)(nil), "autonomic.ext.raw.Raw")
}

func init() { proto.RegisterFile("autonomic/ext/raw/raw.proto", fileDescriptor_45f543ef5debaf5f) }

var fileDescriptor_45f543ef5debaf5f = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0x51, 0x6f, 0xd2, 0x50,
	0x14, 0xe6, 0xc2, 0x82, 0x70, 0x98, 0xac, 0x5e, 0xb7, 0xa4, 0x62, 0xb6, 0x11, 0xcd, 0x22, 0x31,
	0x59, 0x9b, 0xe0, 0x93, 0x6f, 0x96, 0xad, 0x93, 0x45, 0x29, 0xf5, 0x52, 0x66, 0xe6, 0x4b, 0x73,
	0x69, 0x8f, 0x58, 0xc3, 0xed, 0x25, 0xed, 0x65, 0x8c, 0x47, 0xff, 0x8a, 0xff, 0xcb, 0xff, 0xe1,
	0xa3, 0x69, 0x3b, 0xe6, 0x06, 0x0f, 0x4d, 0xda, 0xef, 0xfb, 0xce, 0x39, 0xfd, 0xbe, 0x73, 0xe0,
	0x25, 0x5f, 0x28, 0x19, 0x4b, 0x11, 0x05, 0x26, 0xde, 0x2a, 0x33, 0xe1, 0xcb, 0xec, 0x31, 0xe6,
	0x89, 0x54, 0x92, 0x3e, 0xbb, 0x27, 0x0d, 0xbc, 0x55, 0x46, 0xc2, 0x97, 0xad, 0xe3, 0xa9, 0x94,
	0xd3, 0x19, 0x9a, 0xb9, 0x60, 0xb2, 0xf8, 0x6e, 0xaa, 0x48, 0x60, 0xaa, 0xb8, 0x98, 0x17, 0x35,
	0xad, 0xd7, 0x8f, 0x1b, 0x06, 0x52, 0x08, 0x19, 0x9b, 0x12, 0x85, 0x1f, 0x72, 0xc5, 0x0b, 0xd1,
	0xab, 0x3f, 0x65, 0xa8, 0x30, 0xbe, 0xa4, 0x16, 0xec, 0x0a, 0x4c, 0x53, 0x3e, 0x45, 0x5f, 0xad,
	0xe6, 0xa8, 0x93, 0x36, 0xe9, 0x34, 0xbb, 0x47, 0xc6, 0xd6, 0x5c, 0x63, 0x50, 0xc8, 0xbc, 0xd5,
	0x1c, 0x59, 0x43, 0xfc, 0xff, 0xa0, 0x6f, 0x60, 0x6f, 0xdd, 0xe2, 0x06, 0x93, 0x34, 0x92, 0xb1,
	0x5e, 0x6e, 0x93, 0x4e, 0x9d, 0x35, 0xef, 0xe0, 0xab, 0x02, 0xa5, 0xef, 0x01, 0x82, 0x04, 0xb9,
	0xc2, 0xd0, 0xe7, 0x4a, 0xaf, 0xb4, 0x49, 0xa7, 0xd1, 0x6d, 0x19, 0x85, 0x1d, 0x63, 0x6d, 0xc7,
	0xf0, 0xd6, 0x76, 0x58, 0xfd, 0x4e, 0x6d, 0x29, 0x7a, 0x02, 0xcd, 0x40, 0x26, 0x09, 0xce, 0xb8,
	0x8a, 0x64, 0xec, 0x47, 0xa1, 0x0e, 0xf9, 0x88, 0xa7, 0x0f, 0xd0, 0xcb, 0x90, 0x1e, 0x03, 0x4c,
	0x56, 0x0a, 0xd3, 0xdc, 0xa9, 0xbe, 0xdf, 0x26, 0x9d, 0xdd, 0x7e, 0x89, 0xd5, 0x73, 0xec, 0x9c,
	0x2b, 0x4e, 0x0f, 0xa1, 0xfe, 0x33, 0x95, 0x71, 0xc1, 0x1f, 0x64, 0x2d, 0xfa, 0x25, 0x56, 0xcb,
	0xa0, 0x9c, 0xfe, 0x00, 0xb5, 0x75, 0x4e, 0xfa, 0x51, 0xfe, 0x7f, 0x27, 0x1b, 0x49, 0x14, 0x69,
	0x1a, 0x12, 0x45, 0x1e, 0xe6, 0x10, 0x45, 0x56, 0xc8, 0x9e, 0xc8, 0xe2, 0xa5, 0x57, 0x85, 0x9d,
	0x8c, 0x78, 0xfb, 0x8b, 0x40, 0xe3, 0x41, 0x62, 0x54, 0x87, 0xfd, 0xb1, 0xf3, 0xc9, 0x19, 0x7e,
	0x75, 0xfc, 0x81, 0x3d, 0x1a, 0x59, 0x1f, 0x6d, 0xdf, 0xbb, 0x76, 0x6d, 0xad, 0x44, 0x9f, 0xc3,
	0x9e, 0x3b, 0xee, 0x7d, 0xbe, 0x1c, 0xf5, 0x7d, 0x66, 0x7f, 0x19, 0xdb, 0x23, 0x4f, 0x23, 0xf4,
	0x10, 0x5e, 0xd8, 0xce, 0x19, 0xbb, 0x76, 0x3d, 0xfb, 0xdc, 0xdf, 0xa4, 0xcb, 0x14, 0xa0, 0xca,
	0x6c, 0x77, 0xc8, 0x3c, 0xad, 0x42, 0x6b, 0xb0, 0x73, 0xe1, 0x9d, 0xb9, 0x5a, 0x48, 0x9b, 0x00,
	0x17, 0xce, 0x55, 0xd7, 0x1f, 0x0c, 0x86, 0x9e, 0xa5, 0x61, 0xef, 0x06, 0x0e, 0x02, 0x29, 0xb6,
	0x57, 0xd9, 0xab, 0x31, 0xbe, 0x74, 0xb3, 0xbc, 0x5d, 0xf2, 0xad, 0x3f, 0x8d, 0xd4, 0x8f, 0xc5,
	0x24, 0x33, 0x66, 0xde, 0x2b, 0x4f, 0x79, 0x94, 0xdd, 0x0e, 0x26, 0x31, 0x9f, 0x9d, 0xe6, 0x9b,
	0x49, 0xcd, 0x34, 0x09, 0x4c, 0xc1, 0xa3, 0xb8, 0x38, 0x3c, 0x73, 0xeb, 0x6a, 0xff, 0x12, 0xf2,
	0xbb, 0x5c, 0xb1, 0xc6, 0xde, 0xa4, 0x9a, 0x2b, 0xde, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x7d,
	0xa3, 0x1c, 0xa7, 0xda, 0x02, 0x00, 0x00,
}
