/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */

syntax = "proto3";

package autonomic.ext.cloud.command;

option go_package = "xk6-fabric/proto/autonomic/ext/cloud";
option java_package = "com.autonomic.ext.cloud.command";
option java_outer_classname = "CommandRequestProto";
option java_multiple_files = true;
option cc_enable_arenas = true;
option objc_class_prefix = "AUT";

import "google/protobuf/timestamp.proto";
import "autonomic/ext/command/command.proto";
import "autonomic/ext/validation/validation_options.proto";
import "google/protobuf/descriptor.proto";

///////////////////////////////////////////////////////////////////////////////////////////////////
// This file contains the models used to request that a cloud platform deliver a command to a
// connectivity device. It is the request model that external clouds use to request the delivery of
// a command to a device connected to the TMC. It is also the request model that the TMC will submit
// to external clouds in order to request that a command be delivered to a device connected to
// the receiving cloud.
//
// Glossary of terms used in this file:
// 1) Originating Cloud: The cloud in which a command was originally requested. For example,
//    if a client issues a request via a TMC REST API, yet the target device is connected to
//    an external cloud, the TMC is the originating cloud, and will deliver the request to
//    the external cloud.
///
// 2) Destination Cloud: The cloud that maintains an active connection to the target device. This
//    cloud receives the command request from the originating cloud, and is responsible for
//    the lifecycle management of the command request.
///////////////////////////////////////////////////////////////////////////////////////////////////

// These options will be used by edge-processor when validating the CommandRequest
extend google.protobuf.MessageOptions {
  // specify the permitted device types that can send command requests
  repeated string permitted_device_types = 1001;
}
extend google.protobuf.FieldOptions {
  // specify the field is required.
  bool required = 1001;
  // specify the type of bound edge-processor should apply
  autonomic.ext.validation.TimestampBoundType timestamp_bound_type = 1002;
}

// A CommandRequest is a request that the receiving cloud manage the delivery of a command to a
// target device. It is a request for the receiving cloud to queue the request, translate it into
// a form that is appropriate for the target device, and submit progress information back to the
// originating cloud.
message CommandRequest {
  option (permitted_device_types) = "assets/devices/ecg";

  // The CommandTrigger contains all of the command-specific configuration and context needed
  // to translate this request into a foreign representation.
  autonomic.ext.command.CommandTrigger command_trigger = 1 [(required)=true];

  // The expiration timestamp represents when the destination cloud must give up delivering this
  // command to the target connectivity device. It is _not_ a deadline to submit progress
  // information to the originating cloud. The originating cloud must accept command progress
  // information for commands that have exceeded their delivery expiration. This ensures that
  // devices are empowered to communicate progress information about the commands that are being
  // executed, regardless of when that execution completes.
  google.protobuf.Timestamp expiration = 2 [
    (required)=true,
    (timestamp_bound_type)=EXPIRATION
  ];

  // The creation timestamp represents the time at which the originating cloud first received the
  // request to perform this command.
  google.protobuf.Timestamp creation = 3 [
    (required)=true,
    (timestamp_bound_type)=CREATION
  ];

  // This field specifies whether the destination cloud must fail the command immediately if
  // the target device is in a state where it is precluded from executing commands. Common
  // causes of command preclusion include low-power modes (i.e. deep sleep) or when an OTA
  // is in progress.
  bool fail_if_commands_precluded = 5;

  // This option specifies whether the destination cloud is requested to attempt a wakeup *if* the
  // target device is in a state where a wakeup may induce a device connection. The originating
  // cloud is not required to know whether a wakeup is necessary or possible at the time this
  // request is submitted, simply whether a wakeup is desired if necessary and possible.
  bool wakeup_if_necessary = 6;
}
