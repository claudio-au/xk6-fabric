/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/cloud/command_request.proto

package cloud

import (
	fmt "fmt"
	command "xk6-fabric/proto/autonomic/ext/command"
	validation "xk6-fabric/proto/autonomic/ext/validation"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A CommandRequest is a request that the receiving cloud manage the delivery of a command to a
// target device. It is a request for the receiving cloud to queue the request, translate it into
// a form that is appropriate for the target device, and submit progress information back to the
// originating cloud.
type CommandRequest struct {
	// The CommandTrigger contains all of the command-specific configuration and context needed
	// to translate this request into a foreign representation.
	CommandTrigger *command.CommandTrigger `protobuf:"bytes,1,opt,name=command_trigger,json=commandTrigger,proto3" json:"command_trigger,omitempty"`
	// The expiration timestamp represents when the destination cloud must give up delivering this
	// command to the target connectivity device. It is _not_ a deadline to submit progress
	// information to the originating cloud. The originating cloud must accept command progress
	// information for commands that have exceeded their delivery expiration. This ensures that
	// devices are empowered to communicate progress information about the commands that are being
	// executed, regardless of when that execution completes.
	Expiration *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// The creation timestamp represents the time at which the originating cloud first received the
	// request to perform this command.
	Creation *timestamp.Timestamp `protobuf:"bytes,3,opt,name=creation,proto3" json:"creation,omitempty"`
	// This field specifies whether the destination cloud must fail the command immediately if
	// the target device is in a state where it is precluded from executing commands. Common
	// causes of command preclusion include low-power modes (i.e. deep sleep) or when an OTA
	// is in progress.
	FailIfCommandsPrecluded bool `protobuf:"varint,5,opt,name=fail_if_commands_precluded,json=failIfCommandsPrecluded,proto3" json:"fail_if_commands_precluded,omitempty"`
	// This option specifies whether the destination cloud is requested to attempt a wakeup *if* the
	// target device is in a state where a wakeup may induce a device connection. The originating
	// cloud is not required to know whether a wakeup is necessary or possible at the time this
	// request is submitted, simply whether a wakeup is desired if necessary and possible.
	WakeupIfNecessary    bool     `protobuf:"varint,6,opt,name=wakeup_if_necessary,json=wakeupIfNecessary,proto3" json:"wakeup_if_necessary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d06700284ccb88ce, []int{0}
}

func (m *CommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRequest.Unmarshal(m, b)
}
func (m *CommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRequest.Marshal(b, m, deterministic)
}
func (m *CommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRequest.Merge(m, src)
}
func (m *CommandRequest) XXX_Size() int {
	return xxx_messageInfo_CommandRequest.Size(m)
}
func (m *CommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRequest proto.InternalMessageInfo

func (m *CommandRequest) GetCommandTrigger() *command.CommandTrigger {
	if m != nil {
		return m.CommandTrigger
	}
	return nil
}

func (m *CommandRequest) GetExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func (m *CommandRequest) GetCreation() *timestamp.Timestamp {
	if m != nil {
		return m.Creation
	}
	return nil
}

func (m *CommandRequest) GetFailIfCommandsPrecluded() bool {
	if m != nil {
		return m.FailIfCommandsPrecluded
	}
	return false
}

func (m *CommandRequest) GetWakeupIfNecessary() bool {
	if m != nil {
		return m.WakeupIfNecessary
	}
	return false
}

var E_PermittedDeviceTypes = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: ([]string)(nil),
	Field:         1001,
	Name:          "autonomic.ext.cloud.command.permitted_device_types",
	Tag:           "bytes,1001,rep,name=permitted_device_types",
	Filename:      "autonomic/ext/cloud/command_request.proto",
}

var E_Required = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         1001,
	Name:          "autonomic.ext.cloud.command.required",
	Tag:           "varint,1001,opt,name=required",
	Filename:      "autonomic/ext/cloud/command_request.proto",
}

var E_TimestampBoundType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*validation.TimestampBoundType)(nil),
	Field:         1002,
	Name:          "autonomic.ext.cloud.command.timestamp_bound_type",
	Tag:           "varint,1002,opt,name=timestamp_bound_type,enum=autonomic.ext.validation.TimestampBoundType",
	Filename:      "autonomic/ext/cloud/command_request.proto",
}

func init() {
	proto.RegisterType((*CommandRequest)(nil), "autonomic.ext.cloud.command.CommandRequest")
	proto.RegisterExtension(E_PermittedDeviceTypes)
	proto.RegisterExtension(E_Required)
	proto.RegisterExtension(E_TimestampBoundType)
}

func init() {
	proto.RegisterFile("autonomic/ext/cloud/command_request.proto", fileDescriptor_d06700284ccb88ce)
}

var fileDescriptor_d06700284ccb88ce = []byte{
	// 523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0xaa, 0xd3, 0x40,
	0x14, 0xc6, 0x49, 0x8b, 0xb5, 0x8e, 0x50, 0x31, 0xf7, 0xaa, 0xa5, 0x22, 0x2d, 0x8a, 0x50, 0xc1,
	0x9b, 0xc1, 0xeb, 0xae, 0x42, 0xc1, 0x2a, 0xc2, 0x15, 0xd4, 0x12, 0xab, 0x0b, 0x37, 0x61, 0x3a,
	0x73, 0x12, 0x07, 0x93, 0xcc, 0x38, 0x33, 0xb9, 0xb6, 0x1b, 0xdf, 0xc0, 0x97, 0xf0, 0x69, 0x2e,
	0xae, 0x7c, 0x0d, 0x05, 0xf7, 0x2e, 0x65, 0x32, 0x49, 0xec, 0x1f, 0x51, 0x57, 0x29, 0x73, 0xbe,
	0xdf, 0x37, 0xdf, 0xe9, 0x9c, 0x83, 0xee, 0x90, 0xc2, 0x88, 0x5c, 0x64, 0x9c, 0x62, 0x58, 0x19,
	0x4c, 0x53, 0x51, 0x30, 0x4c, 0x45, 0x96, 0x91, 0x9c, 0x45, 0x0a, 0xde, 0x17, 0xa0, 0x4d, 0x20,
	0x95, 0x30, 0xc2, 0xbf, 0xde, 0x48, 0x03, 0x58, 0x99, 0xa0, 0x94, 0x06, 0x95, 0x74, 0x30, 0x4c,
	0x84, 0x48, 0x52, 0xc0, 0xa5, 0x74, 0x59, 0xc4, 0xd8, 0xf0, 0x0c, 0xb4, 0x21, 0x99, 0x74, 0xf4,
	0xe0, 0xd6, 0xce, 0x45, 0x8e, 0xab, 0xbf, 0x95, 0xe8, 0xde, 0xb6, 0xe8, 0x94, 0xa4, 0x9c, 0x11,
	0xc3, 0x45, 0xbe, 0xf1, 0x33, 0x12, 0xd2, 0x7e, 0x74, 0x85, 0x8c, 0x76, 0x2f, 0x66, 0xa0, 0xa9,
	0xe2, 0xd2, 0x08, 0xe5, 0x14, 0x37, 0x7f, 0xb4, 0x50, 0xef, 0x91, 0xbb, 0x26, 0x74, 0x0d, 0xf9,
	0x2f, 0xd1, 0xa5, 0xba, 0x47, 0xa3, 0x78, 0x92, 0x80, 0xea, 0x7b, 0x23, 0x6f, 0x7c, 0xf1, 0xf8,
	0x76, 0xb0, 0xd3, 0x64, 0x15, 0xaf, 0xe2, 0x17, 0x4e, 0x3c, 0x6b, 0x9f, 0x4d, 0xbd, 0xb0, 0x47,
	0xb7, 0x0e, 0xfd, 0x19, 0x42, 0xb0, 0x92, 0x5c, 0x95, 0x29, 0xfb, 0xad, 0xd2, 0x6f, 0x10, 0xb8,
	0x78, 0x41, 0x1d, 0x2f, 0x58, 0xd4, 0xff, 0xcb, 0xac, 0x73, 0x36, 0xf5, 0xbe, 0x4e, 0x5b, 0xe1,
	0x06, 0xe5, 0x4f, 0x51, 0x97, 0x2a, 0x70, 0x0e, 0xed, 0xff, 0x74, 0xf0, 0xc2, 0x86, 0xf1, 0x1f,
	0xa0, 0x41, 0x4c, 0x78, 0x1a, 0xf1, 0x38, 0xaa, 0xd2, 0xe9, 0x48, 0x2a, 0xa0, 0x69, 0xc1, 0x80,
	0xf5, 0xcf, 0x8d, 0xbc, 0x71, 0x37, 0xbc, 0x66, 0x15, 0x27, 0x71, 0xd5, 0x92, 0x9e, 0xd7, 0x65,
	0x3f, 0x40, 0x07, 0x1f, 0xc8, 0x3b, 0x28, 0xa4, 0xc5, 0x73, 0xa0, 0xa0, 0x35, 0x51, 0xeb, 0x7e,
	0xa7, 0xa4, 0x2e, 0xbb, 0xd2, 0x49, 0xfc, 0xbc, 0x2e, 0x4c, 0xae, 0x7c, 0x99, 0xfa, 0x44, 0x6b,
	0x30, 0x1a, 0x33, 0x38, 0xe5, 0x14, 0x34, 0x06, 0x9a, 0x4c, 0x5e, 0xa3, 0xab, 0x12, 0x54, 0xc6,
	0x8d, 0x01, 0x16, 0xb9, 0x42, 0x64, 0xd6, 0x12, 0xb4, 0x3f, 0xdc, 0xeb, 0xe5, 0x99, 0xb5, 0x4a,
	0xe0, 0x85, 0x7b, 0xd2, 0xfe, 0xb7, 0xf3, 0xa3, 0xf6, 0xf8, 0x42, 0x78, 0xd8, 0xf0, 0x8f, 0x4b,
	0x7c, 0x61, 0xe9, 0xc9, 0x04, 0x75, 0xed, 0x40, 0x72, 0x05, 0xcc, 0xbf, 0xb1, 0xe7, 0xf4, 0x84,
	0x43, 0xca, 0x36, 0x7c, 0x6c, 0xe6, 0x46, 0x3f, 0xf9, 0x88, 0x0e, 0x9b, 0x81, 0x8c, 0x96, 0xa2,
	0xb0, 0x0f, 0xbf, 0x96, 0xf0, 0x2f, 0x9f, 0xef, 0xd6, 0xa7, 0x77, 0x7c, 0x77, 0x67, 0x2a, 0x7e,
	0x0f, 0xe3, 0xc6, 0x63, 0x58, 0x53, 0x1b, 0x34, 0xf4, 0xcd, 0xde, 0xd9, 0xec, 0x93, 0x87, 0x86,
	0x54, 0x64, 0xc1, 0x5f, 0x56, 0x68, 0x76, 0xb0, 0x3d, 0xa4, 0x73, 0x9b, 0x68, 0xee, 0xbd, 0x79,
	0x9a, 0x70, 0xf3, 0xb6, 0x58, 0x5a, 0x19, 0x6e, 0xf0, 0x23, 0xc2, 0xed, 0x86, 0x80, 0xca, 0x49,
	0x7a, 0x54, 0x66, 0xd7, 0x58, 0x2b, 0x8a, 0x33, 0xc2, 0x73, 0xb7, 0x0a, 0xf8, 0x0f, 0x8b, 0xfd,
	0xd3, 0xf3, 0x3e, 0xb7, 0xda, 0x0f, 0x5f, 0x2d, 0x96, 0x9d, 0x52, 0x73, 0xff, 0x57, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xf4, 0x71, 0x21, 0x37, 0xff, 0x03, 0x00, 0x00,
}
