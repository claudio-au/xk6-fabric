/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/command/wifi/report_wifi_usage.proto

package wifi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataPlanUnits int32

const (
	DataPlanUnits_UNKNOWN_PLAN_UNITS DataPlanUnits = 0
	DataPlanUnits_KB                 DataPlanUnits = 1
	DataPlanUnits_MB                 DataPlanUnits = 2
	DataPlanUnits_GB                 DataPlanUnits = 3
)

var DataPlanUnits_name = map[int32]string{
	0: "UNKNOWN_PLAN_UNITS",
	1: "KB",
	2: "MB",
	3: "GB",
}

var DataPlanUnits_value = map[string]int32{
	"UNKNOWN_PLAN_UNITS": 0,
	"KB":                 1,
	"MB":                 2,
	"GB":                 3,
}

func (x DataPlanUnits) String() string {
	return proto.EnumName(DataPlanUnits_name, int32(x))
}

func (DataPlanUnits) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{0}
}

type DataPlan_SubscriptionType int32

const (
	DataPlan_UNKNOWN_SUBSCRIPTION_TYPE DataPlan_SubscriptionType = 0
	DataPlan_TRIAL                     DataPlan_SubscriptionType = 1
	DataPlan_PAID_SESSION              DataPlan_SubscriptionType = 2
	DataPlan_PAID_SHARED               DataPlan_SubscriptionType = 3
)

var DataPlan_SubscriptionType_name = map[int32]string{
	0: "UNKNOWN_SUBSCRIPTION_TYPE",
	1: "TRIAL",
	2: "PAID_SESSION",
	3: "PAID_SHARED",
}

var DataPlan_SubscriptionType_value = map[string]int32{
	"UNKNOWN_SUBSCRIPTION_TYPE": 0,
	"TRIAL":                     1,
	"PAID_SESSION":              2,
	"PAID_SHARED":               3,
}

func (x DataPlan_SubscriptionType) String() string {
	return proto.EnumName(DataPlan_SubscriptionType_name, int32(x))
}

func (DataPlan_SubscriptionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{2, 0}
}

type DataPlan_PlanStatus int32

const (
	DataPlan_UNKNOWN_PLAN_STATUS DataPlan_PlanStatus = 0
	DataPlan_PENDING             DataPlan_PlanStatus = 1
	DataPlan_ACTIVE              DataPlan_PlanStatus = 2
	DataPlan_EXPIRED             DataPlan_PlanStatus = 3
	DataPlan_INACTIVE            DataPlan_PlanStatus = 4
)

var DataPlan_PlanStatus_name = map[int32]string{
	0: "UNKNOWN_PLAN_STATUS",
	1: "PENDING",
	2: "ACTIVE",
	3: "EXPIRED",
	4: "INACTIVE",
}

var DataPlan_PlanStatus_value = map[string]int32{
	"UNKNOWN_PLAN_STATUS": 0,
	"PENDING":             1,
	"ACTIVE":              2,
	"EXPIRED":             3,
	"INACTIVE":            4,
}

func (x DataPlan_PlanStatus) String() string {
	return proto.EnumName(DataPlan_PlanStatus_name, int32(x))
}

func (DataPlan_PlanStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{2, 1}
}

type DataPlanUsage_OverageStatus int32

const (
	DataPlanUsage_UNKNOWN_OVERAGE_STATUS DataPlanUsage_OverageStatus = 0
	DataPlanUsage_NOT_OVERAGE            DataPlanUsage_OverageStatus = 1
	DataPlanUsage_OVERAGE                DataPlanUsage_OverageStatus = 2
)

var DataPlanUsage_OverageStatus_name = map[int32]string{
	0: "UNKNOWN_OVERAGE_STATUS",
	1: "NOT_OVERAGE",
	2: "OVERAGE",
}

var DataPlanUsage_OverageStatus_value = map[string]int32{
	"UNKNOWN_OVERAGE_STATUS": 0,
	"NOT_OVERAGE":            1,
	"OVERAGE":                2,
}

func (x DataPlanUsage_OverageStatus) String() string {
	return proto.EnumName(DataPlanUsage_OverageStatus_name, int32(x))
}

func (DataPlanUsage_OverageStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{4, 0}
}

// Request to receive the various wifi usage report data. Any extra OEM specific parameters should be sent as part of
// the CommandTrigger's oem_params. see: test/java/com/autonomic/ext/event/state/ReportWifiUsageStateExamples.java
type ReportWifiUsageRequest struct {
	WifiUsage            *WifiUsage `protobuf:"bytes,1,opt,name=wifi_usage,json=wifiUsage,proto3" json:"wifi_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReportWifiUsageRequest) Reset()         { *m = ReportWifiUsageRequest{} }
func (m *ReportWifiUsageRequest) String() string { return proto.CompactTextString(m) }
func (*ReportWifiUsageRequest) ProtoMessage()    {}
func (*ReportWifiUsageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{0}
}

func (m *ReportWifiUsageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportWifiUsageRequest.Unmarshal(m, b)
}
func (m *ReportWifiUsageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportWifiUsageRequest.Marshal(b, m, deterministic)
}
func (m *ReportWifiUsageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportWifiUsageRequest.Merge(m, src)
}
func (m *ReportWifiUsageRequest) XXX_Size() int {
	return xxx_messageInfo_ReportWifiUsageRequest.Size(m)
}
func (m *ReportWifiUsageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportWifiUsageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportWifiUsageRequest proto.InternalMessageInfo

func (m *ReportWifiUsageRequest) GetWifiUsage() *WifiUsage {
	if m != nil {
		return m.WifiUsage
	}
	return nil
}

type WifiUsage struct {
	DataPlan      *DataPlan      `protobuf:"bytes,1,opt,name=data_plan,json=dataPlan,proto3" json:"data_plan,omitempty"`
	DataPlanUsage *DataPlanUsage `protobuf:"bytes,2,opt,name=data_plan_usage,json=dataPlanUsage,proto3" json:"data_plan_usage,omitempty"`
	// Last updated date from carrier in UTC
	LastUpdatedDate      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_updated_date,json=lastUpdatedDate,proto3" json:"last_updated_date,omitempty"`
	CarrierAccountInfo   *CarrierAccountInfo  `protobuf:"bytes,4,opt,name=carrier_account_info,json=carrierAccountInfo,proto3" json:"carrier_account_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WifiUsage) Reset()         { *m = WifiUsage{} }
func (m *WifiUsage) String() string { return proto.CompactTextString(m) }
func (*WifiUsage) ProtoMessage()    {}
func (*WifiUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{1}
}

func (m *WifiUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WifiUsage.Unmarshal(m, b)
}
func (m *WifiUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WifiUsage.Marshal(b, m, deterministic)
}
func (m *WifiUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WifiUsage.Merge(m, src)
}
func (m *WifiUsage) XXX_Size() int {
	return xxx_messageInfo_WifiUsage.Size(m)
}
func (m *WifiUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_WifiUsage.DiscardUnknown(m)
}

var xxx_messageInfo_WifiUsage proto.InternalMessageInfo

func (m *WifiUsage) GetDataPlan() *DataPlan {
	if m != nil {
		return m.DataPlan
	}
	return nil
}

func (m *WifiUsage) GetDataPlanUsage() *DataPlanUsage {
	if m != nil {
		return m.DataPlanUsage
	}
	return nil
}

func (m *WifiUsage) GetLastUpdatedDate() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdatedDate
	}
	return nil
}

func (m *WifiUsage) GetCarrierAccountInfo() *CarrierAccountInfo {
	if m != nil {
		return m.CarrierAccountInfo
	}
	return nil
}

type DataPlan struct {
	SubscriptionType DataPlan_SubscriptionType `protobuf:"varint,1,opt,name=subscription_type,json=subscriptionType,proto3,enum=autonomic.ext.command.wifi.DataPlan_SubscriptionType" json:"subscription_type,omitempty"`
	DataPlanLimit    *DataPlanLimit            `protobuf:"bytes,2,opt,name=data_plan_limit,json=dataPlanLimit,proto3" json:"data_plan_limit,omitempty"`
	PlanStatus       DataPlan_PlanStatus       `protobuf:"varint,3,opt,name=plan_status,json=planStatus,proto3,enum=autonomic.ext.command.wifi.DataPlan_PlanStatus" json:"plan_status,omitempty"`
	// Data plan expiry date in UTC
	ExpiryDate *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	// Data plan cycle renewal date in UTC
	CycleRenewalDate     *timestamp.Timestamp `protobuf:"bytes,5,opt,name=cycle_renewal_date,json=cycleRenewalDate,proto3" json:"cycle_renewal_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DataPlan) Reset()         { *m = DataPlan{} }
func (m *DataPlan) String() string { return proto.CompactTextString(m) }
func (*DataPlan) ProtoMessage()    {}
func (*DataPlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{2}
}

func (m *DataPlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlan.Unmarshal(m, b)
}
func (m *DataPlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlan.Marshal(b, m, deterministic)
}
func (m *DataPlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlan.Merge(m, src)
}
func (m *DataPlan) XXX_Size() int {
	return xxx_messageInfo_DataPlan.Size(m)
}
func (m *DataPlan) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlan.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlan proto.InternalMessageInfo

func (m *DataPlan) GetSubscriptionType() DataPlan_SubscriptionType {
	if m != nil {
		return m.SubscriptionType
	}
	return DataPlan_UNKNOWN_SUBSCRIPTION_TYPE
}

func (m *DataPlan) GetDataPlanLimit() *DataPlanLimit {
	if m != nil {
		return m.DataPlanLimit
	}
	return nil
}

func (m *DataPlan) GetPlanStatus() DataPlan_PlanStatus {
	if m != nil {
		return m.PlanStatus
	}
	return DataPlan_UNKNOWN_PLAN_STATUS
}

func (m *DataPlan) GetExpiryDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryDate
	}
	return nil
}

func (m *DataPlan) GetCycleRenewalDate() *timestamp.Timestamp {
	if m != nil {
		return m.CycleRenewalDate
	}
	return nil
}

type DataPlanLimit struct {
	HasLimit             bool          `protobuf:"varint,1,opt,name=has_limit,json=hasLimit,proto3" json:"has_limit,omitempty"`
	DataLimit            float64       `protobuf:"fixed64,2,opt,name=data_limit,json=dataLimit,proto3" json:"data_limit,omitempty"`
	DataLimitUnits       DataPlanUnits `protobuf:"varint,3,opt,name=data_limit_units,json=dataLimitUnits,proto3,enum=autonomic.ext.command.wifi.DataPlanUnits" json:"data_limit_units,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DataPlanLimit) Reset()         { *m = DataPlanLimit{} }
func (m *DataPlanLimit) String() string { return proto.CompactTextString(m) }
func (*DataPlanLimit) ProtoMessage()    {}
func (*DataPlanLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{3}
}

func (m *DataPlanLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlanLimit.Unmarshal(m, b)
}
func (m *DataPlanLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlanLimit.Marshal(b, m, deterministic)
}
func (m *DataPlanLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlanLimit.Merge(m, src)
}
func (m *DataPlanLimit) XXX_Size() int {
	return xxx_messageInfo_DataPlanLimit.Size(m)
}
func (m *DataPlanLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlanLimit.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlanLimit proto.InternalMessageInfo

func (m *DataPlanLimit) GetHasLimit() bool {
	if m != nil {
		return m.HasLimit
	}
	return false
}

func (m *DataPlanLimit) GetDataLimit() float64 {
	if m != nil {
		return m.DataLimit
	}
	return 0
}

func (m *DataPlanLimit) GetDataLimitUnits() DataPlanUnits {
	if m != nil {
		return m.DataLimitUnits
	}
	return DataPlanUnits_UNKNOWN_PLAN_UNITS
}

type DataPlanUsage struct {
	DataUsed             float64                     `protobuf:"fixed64,1,opt,name=data_used,json=dataUsed,proto3" json:"data_used,omitempty"`
	DataUsedPercentage   float64                     `protobuf:"fixed64,2,opt,name=data_used_percentage,json=dataUsedPercentage,proto3" json:"data_used_percentage,omitempty"`
	OverageStatus        DataPlanUsage_OverageStatus `protobuf:"varint,3,opt,name=overage_status,json=overageStatus,proto3,enum=autonomic.ext.command.wifi.DataPlanUsage_OverageStatus" json:"overage_status,omitempty"`
	DataUsageUnits       DataPlanUnits               `protobuf:"varint,4,opt,name=data_usage_units,json=dataUsageUnits,proto3,enum=autonomic.ext.command.wifi.DataPlanUnits" json:"data_usage_units,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DataPlanUsage) Reset()         { *m = DataPlanUsage{} }
func (m *DataPlanUsage) String() string { return proto.CompactTextString(m) }
func (*DataPlanUsage) ProtoMessage()    {}
func (*DataPlanUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{4}
}

func (m *DataPlanUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlanUsage.Unmarshal(m, b)
}
func (m *DataPlanUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlanUsage.Marshal(b, m, deterministic)
}
func (m *DataPlanUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlanUsage.Merge(m, src)
}
func (m *DataPlanUsage) XXX_Size() int {
	return xxx_messageInfo_DataPlanUsage.Size(m)
}
func (m *DataPlanUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlanUsage.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlanUsage proto.InternalMessageInfo

func (m *DataPlanUsage) GetDataUsed() float64 {
	if m != nil {
		return m.DataUsed
	}
	return 0
}

func (m *DataPlanUsage) GetDataUsedPercentage() float64 {
	if m != nil {
		return m.DataUsedPercentage
	}
	return 0
}

func (m *DataPlanUsage) GetOverageStatus() DataPlanUsage_OverageStatus {
	if m != nil {
		return m.OverageStatus
	}
	return DataPlanUsage_UNKNOWN_OVERAGE_STATUS
}

func (m *DataPlanUsage) GetDataUsageUnits() DataPlanUnits {
	if m != nil {
		return m.DataUsageUnits
	}
	return DataPlanUnits_UNKNOWN_PLAN_UNITS
}

type CarrierAccountInfo struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarrierAccountInfo) Reset()         { *m = CarrierAccountInfo{} }
func (m *CarrierAccountInfo) String() string { return proto.CompactTextString(m) }
func (*CarrierAccountInfo) ProtoMessage()    {}
func (*CarrierAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbd984bc8f00e032, []int{5}
}

func (m *CarrierAccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarrierAccountInfo.Unmarshal(m, b)
}
func (m *CarrierAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarrierAccountInfo.Marshal(b, m, deterministic)
}
func (m *CarrierAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarrierAccountInfo.Merge(m, src)
}
func (m *CarrierAccountInfo) XXX_Size() int {
	return xxx_messageInfo_CarrierAccountInfo.Size(m)
}
func (m *CarrierAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CarrierAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CarrierAccountInfo proto.InternalMessageInfo

func (m *CarrierAccountInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterEnum("autonomic.ext.command.wifi.DataPlanUnits", DataPlanUnits_name, DataPlanUnits_value)
	proto.RegisterEnum("autonomic.ext.command.wifi.DataPlan_SubscriptionType", DataPlan_SubscriptionType_name, DataPlan_SubscriptionType_value)
	proto.RegisterEnum("autonomic.ext.command.wifi.DataPlan_PlanStatus", DataPlan_PlanStatus_name, DataPlan_PlanStatus_value)
	proto.RegisterEnum("autonomic.ext.command.wifi.DataPlanUsage_OverageStatus", DataPlanUsage_OverageStatus_name, DataPlanUsage_OverageStatus_value)
	proto.RegisterType((*ReportWifiUsageRequest)(nil), "autonomic.ext.command.wifi.ReportWifiUsageRequest")
	proto.RegisterType((*WifiUsage)(nil), "autonomic.ext.command.wifi.WifiUsage")
	proto.RegisterType((*DataPlan)(nil), "autonomic.ext.command.wifi.DataPlan")
	proto.RegisterType((*DataPlanLimit)(nil), "autonomic.ext.command.wifi.DataPlanLimit")
	proto.RegisterType((*DataPlanUsage)(nil), "autonomic.ext.command.wifi.DataPlanUsage")
	proto.RegisterType((*CarrierAccountInfo)(nil), "autonomic.ext.command.wifi.CarrierAccountInfo")
}

func init() {
	proto.RegisterFile("autonomic/ext/command/wifi/report_wifi_usage.proto", fileDescriptor_cbd984bc8f00e032)
}

var fileDescriptor_cbd984bc8f00e032 = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x51, 0x73, 0xdb, 0x44,
	0x10, 0xae, 0x14, 0x37, 0xb5, 0xd7, 0x4d, 0xa2, 0x1e, 0x99, 0x34, 0xa4, 0x53, 0x60, 0x3c, 0x30,
	0x03, 0xcc, 0x44, 0x62, 0xc2, 0x30, 0x3c, 0xf0, 0xc0, 0xc8, 0xb1, 0x49, 0x35, 0x0d, 0xb2, 0x2a,
	0xc9, 0x2d, 0xe5, 0xa1, 0xc7, 0x59, 0x3a, 0x3b, 0x37, 0x63, 0x4b, 0x42, 0x3a, 0x91, 0xe4, 0x7f,
	0xf0, 0x03, 0x18, 0xfe, 0x0e, 0xef, 0x3c, 0xf2, 0x3b, 0x78, 0x64, 0xee, 0x4e, 0x92, 0xed, 0x74,
	0x9a, 0x98, 0xbe, 0xd8, 0xb7, 0xb7, 0xfb, 0x7d, 0xb7, 0xfa, 0x76, 0x6f, 0x0f, 0x4e, 0x48, 0xc9,
	0xd3, 0x24, 0x5d, 0xb0, 0xc8, 0xa2, 0x57, 0xdc, 0x8a, 0xd2, 0xc5, 0x82, 0x24, 0xb1, 0x75, 0xc9,
	0xa6, 0xcc, 0xca, 0x69, 0x96, 0xe6, 0x1c, 0x8b, 0x35, 0x2e, 0x0b, 0x32, 0xa3, 0x66, 0x96, 0xa7,
	0x3c, 0x45, 0x47, 0x0d, 0xc6, 0xa4, 0x57, 0xdc, 0xac, 0x30, 0xa6, 0x88, 0x3b, 0xfa, 0x78, 0x96,
	0xa6, 0xb3, 0x39, 0xb5, 0x64, 0xe4, 0xa4, 0x9c, 0x5a, 0x9c, 0x2d, 0x68, 0xc1, 0xc9, 0x22, 0x53,
	0xe0, 0xde, 0x1b, 0x38, 0xf0, 0x25, 0xef, 0x2b, 0x36, 0x65, 0x63, 0xc1, 0xea, 0xd3, 0x5f, 0x4b,
	0x5a, 0x70, 0x34, 0x00, 0x58, 0x1e, 0x75, 0xa8, 0x7d, 0xa2, 0x7d, 0xde, 0x3d, 0xf9, 0xcc, 0x7c,
	0xf7, 0x59, 0xe6, 0x92, 0xa1, 0x73, 0x59, 0x2f, 0x7b, 0x7f, 0xe9, 0xd0, 0x69, 0x1c, 0xc8, 0x86,
	0x4e, 0x4c, 0x38, 0xc1, 0xd9, 0x9c, 0x24, 0x15, 0xe5, 0xa7, 0xb7, 0x51, 0x0e, 0x08, 0x27, 0xde,
	0x9c, 0x24, 0x7e, 0x3b, 0xae, 0x56, 0xe8, 0x05, 0xec, 0x35, 0x14, 0x55, 0x6e, 0xba, 0x24, 0xfa,
	0x62, 0x13, 0x22, 0x95, 0xdf, 0x4e, 0xbc, 0x6a, 0xa2, 0x1f, 0xe0, 0xd1, 0x9c, 0x14, 0x1c, 0x97,
	0x59, 0x4c, 0x38, 0x8d, 0xb1, 0xf8, 0x3d, 0xdc, 0x92, 0xa4, 0x47, 0xa6, 0x12, 0xd0, 0xac, 0x05,
	0x34, 0xc3, 0x5a, 0x40, 0x7f, 0x4f, 0x80, 0xc6, 0x0a, 0x33, 0x20, 0x9c, 0xa2, 0x5f, 0x60, 0x3f,
	0x22, 0x79, 0xce, 0x68, 0x8e, 0x49, 0x14, 0xa5, 0x65, 0xc2, 0x31, 0x4b, 0xa6, 0xe9, 0x61, 0x4b,
	0x52, 0x99, 0xb7, 0xe5, 0x77, 0xaa, 0x70, 0xb6, 0x82, 0x39, 0xc9, 0x34, 0xf5, 0x51, 0xf4, 0xd6,
	0x5e, 0xef, 0xef, 0x16, 0xb4, 0xeb, 0x4f, 0x41, 0x13, 0x78, 0x54, 0x94, 0x93, 0x22, 0xca, 0x59,
	0xc6, 0x59, 0x9a, 0x60, 0x7e, 0x9d, 0xa9, 0x3a, 0xed, 0x9e, 0x7c, 0xb3, 0x89, 0x16, 0x66, 0xb0,
	0x82, 0x0e, 0xaf, 0x33, 0xea, 0x1b, 0xc5, 0x8d, 0x9d, 0x75, 0xb5, 0xe7, 0x6c, 0xc1, 0xf8, 0xff,
	0x51, 0xfb, 0x5c, 0x00, 0x96, 0x6a, 0x4b, 0x13, 0x79, 0xd0, 0x95, 0x6c, 0x05, 0x27, 0xbc, 0x2c,
	0xa4, 0xce, 0xbb, 0x27, 0xd6, 0x46, 0x09, 0x8b, 0x9f, 0x40, 0xc2, 0x7c, 0xc8, 0x9a, 0x35, 0xfa,
	0x0e, 0xba, 0xf4, 0x2a, 0x63, 0xf9, 0xb5, 0xaa, 0x5c, 0xeb, 0xce, 0xca, 0x81, 0x0a, 0x97, 0x45,
	0x7b, 0x06, 0x28, 0xba, 0x8e, 0xe6, 0x14, 0xe7, 0x34, 0xa1, 0x97, 0x64, 0xae, 0x38, 0xee, 0xdf,
	0xc9, 0x61, 0x48, 0x94, 0xaf, 0x40, 0x82, 0xa9, 0x87, 0xc1, 0xb8, 0xa9, 0x28, 0x7a, 0x0a, 0x1f,
	0x8e, 0xdd, 0xe7, 0xee, 0xe8, 0x95, 0x8b, 0x83, 0x71, 0x3f, 0x38, 0xf5, 0x1d, 0x2f, 0x74, 0x46,
	0x2e, 0x0e, 0x5f, 0x7b, 0x43, 0xe3, 0x1e, 0xea, 0xc0, 0xfd, 0xd0, 0x77, 0xec, 0x73, 0x43, 0x43,
	0x06, 0x3c, 0xf4, 0x6c, 0x67, 0x80, 0x83, 0x61, 0x10, 0x38, 0x23, 0xd7, 0xd0, 0xd1, 0x1e, 0x74,
	0xd5, 0xce, 0x33, 0xdb, 0x1f, 0x0e, 0x8c, 0xad, 0xde, 0x6b, 0x80, 0xa5, 0x02, 0xe8, 0x31, 0x7c,
	0x50, 0x53, 0x7b, 0xe7, 0xb6, 0x8b, 0x83, 0xd0, 0x0e, 0xc7, 0x81, 0x71, 0x0f, 0x75, 0xe1, 0x81,
	0x37, 0x74, 0x07, 0x8e, 0x7b, 0x66, 0x68, 0x08, 0x60, 0xdb, 0x3e, 0x0d, 0x9d, 0x97, 0x43, 0x43,
	0x17, 0x8e, 0xe1, 0x4f, 0x9e, 0x23, 0xc9, 0xd0, 0x43, 0x68, 0x3b, 0x6e, 0xe5, 0x6a, 0xf5, 0xfe,
	0xd0, 0x60, 0x67, 0xad, 0x6a, 0xe8, 0x09, 0x74, 0x2e, 0x48, 0x51, 0xd5, 0x5c, 0x74, 0x55, 0xdb,
	0x6f, 0x5f, 0x90, 0x42, 0x39, 0x9f, 0x02, 0xc8, 0xb6, 0x58, 0x76, 0x84, 0xe6, 0xcb, 0x9b, 0xad,
	0xdc, 0x01, 0x18, 0x4b, 0x37, 0x2e, 0x13, 0xc6, 0xeb, 0x3a, 0x6f, 0x76, 0x49, 0x05, 0xc0, 0xdf,
	0x6d, 0xf8, 0xa4, 0xdd, 0xfb, 0x47, 0x5f, 0xa6, 0xa8, 0xee, 0xed, 0x93, 0x6a, 0x9a, 0x94, 0x05,
	0x8d, 0x65, 0x8a, 0x9a, 0x9a, 0x13, 0xe3, 0x82, 0xc6, 0xe8, 0x2b, 0xd8, 0x6f, 0x9c, 0x38, 0xa3,
	0x79, 0x44, 0x13, 0x5e, 0x0f, 0x0b, 0xcd, 0x47, 0x75, 0x9c, 0xd7, 0x78, 0xd0, 0x1b, 0xd8, 0x4d,
	0x7f, 0xa3, 0x39, 0x99, 0xd1, 0xf5, 0xde, 0xfc, 0x76, 0xe3, 0xc1, 0x62, 0x8e, 0x14, 0xbe, 0xea,
	0xd1, 0x9d, 0x74, 0xd5, 0x6c, 0x54, 0x91, 0x43, 0xab, 0x52, 0xa5, 0xf5, 0x5e, 0xaa, 0xc8, 0xc3,
	0x94, 0x2a, 0x0e, 0xec, 0xac, 0x1d, 0x8a, 0x8e, 0xe0, 0xa0, 0x6e, 0x8b, 0xd1, 0xcb, 0xa1, 0x6f,
	0x9f, 0x0d, 0x97, 0x9d, 0xb1, 0x07, 0x5d, 0x77, 0x14, 0xd6, 0xfb, 0x86, 0x26, 0x3a, 0xa2, 0x36,
	0xf4, 0xde, 0x31, 0xa0, 0xb7, 0xc7, 0x10, 0x7a, 0x0c, 0x0f, 0xca, 0x82, 0xe6, 0x98, 0x29, 0x89,
	0x3b, 0xfe, 0xb6, 0x30, 0x9d, 0xf8, 0xcb, 0xef, 0x57, 0xca, 0x21, 0x52, 0x41, 0x07, 0x80, 0xd6,
	0x1a, 0x72, 0xec, 0x3a, 0xa1, 0x38, 0x75, 0x1b, 0xf4, 0xe7, 0x7d, 0x43, 0x13, 0xff, 0x3f, 0xf6,
	0x0d, 0x5d, 0xfc, 0x9f, 0xf5, 0x8d, 0xad, 0xfe, 0xef, 0x1a, 0x7c, 0x14, 0xa5, 0x8b, 0x5b, 0xbe,
	0xbd, 0xbf, 0x7f, 0xe3, 0x6d, 0xf2, 0xc4, 0x3d, 0xf4, 0xb4, 0x9f, 0x5f, 0xcc, 0x18, 0xbf, 0x28,
	0x27, 0x22, 0xd8, 0x6a, 0xe0, 0xc7, 0x84, 0x89, 0x47, 0x93, 0xe6, 0x09, 0x99, 0x1f, 0xcb, 0x1b,
	0x5b, 0x58, 0x45, 0x1e, 0x59, 0x0b, 0xc2, 0x12, 0xf5, 0x00, 0x5a, 0xef, 0x7e, 0x5d, 0xff, 0xd5,
	0xb4, 0x3f, 0xf5, 0x2d, 0x7b, 0x1c, 0x4e, 0xb6, 0x65, 0xe8, 0xd7, 0xff, 0x05, 0x00, 0x00, 0xff,
	0xff, 0x2d, 0x8f, 0xb1, 0xe4, 0x8b, 0x07, 0x00, 0x00,
}
