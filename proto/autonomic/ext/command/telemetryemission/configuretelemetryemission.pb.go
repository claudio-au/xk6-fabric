/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/command/telemetryemission/configuretelemetryemission.proto

package telemetryemission

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting int32

const (
	// Emits no data
	ConfigureTelemetryEmissionRequest_DISABLE ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting = 0
	// Emits all data (including location)
	ConfigureTelemetryEmissionRequest_ENABLE ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting = 1
	// Emits all data except location
	ConfigureTelemetryEmissionRequest_ENABLE_SANS_LOCATION ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting = 2
)

var ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting_name = map[int32]string{
	0: "DISABLE",
	1: "ENABLE",
	2: "ENABLE_SANS_LOCATION",
}

var ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting_value = map[string]int32{
	"DISABLE":              0,
	"ENABLE":               1,
	"ENABLE_SANS_LOCATION": 2,
}

func (x ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting) String() string {
	return proto.EnumName(ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting_name, int32(x))
}

func (ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_36903a48ce78db6e, []int{0, 0}
}

// Opt-in/Opt-out of Telemetry and Location data emission
type ConfigureTelemetryEmissionRequest struct {
	TelemetryEmissionSetting ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting `protobuf:"varint,1,opt,name=telemetryEmissionSetting,proto3,enum=autonomic.ext.command.telemetryemission.ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting" json:"telemetryEmissionSetting,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                                   `json:"-"`
	XXX_unrecognized         []byte                                                     `json:"-"`
	XXX_sizecache            int32                                                      `json:"-"`
}

func (m *ConfigureTelemetryEmissionRequest) Reset()         { *m = ConfigureTelemetryEmissionRequest{} }
func (m *ConfigureTelemetryEmissionRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigureTelemetryEmissionRequest) ProtoMessage()    {}
func (*ConfigureTelemetryEmissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_36903a48ce78db6e, []int{0}
}

func (m *ConfigureTelemetryEmissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigureTelemetryEmissionRequest.Unmarshal(m, b)
}
func (m *ConfigureTelemetryEmissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigureTelemetryEmissionRequest.Marshal(b, m, deterministic)
}
func (m *ConfigureTelemetryEmissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigureTelemetryEmissionRequest.Merge(m, src)
}
func (m *ConfigureTelemetryEmissionRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigureTelemetryEmissionRequest.Size(m)
}
func (m *ConfigureTelemetryEmissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigureTelemetryEmissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigureTelemetryEmissionRequest proto.InternalMessageInfo

func (m *ConfigureTelemetryEmissionRequest) GetTelemetryEmissionSetting() ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting {
	if m != nil {
		return m.TelemetryEmissionSetting
	}
	return ConfigureTelemetryEmissionRequest_DISABLE
}

func init() {
	proto.RegisterEnum("autonomic.ext.command.telemetryemission.ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting", ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting_name, ConfigureTelemetryEmissionRequest_TelemetryEmissionSetting_value)
	proto.RegisterType((*ConfigureTelemetryEmissionRequest)(nil), "autonomic.ext.command.telemetryemission.ConfigureTelemetryEmissionRequest")
}

func init() {
	proto.RegisterFile("autonomic/ext/command/telemetryemission/configuretelemetryemission.proto", fileDescriptor_36903a48ce78db6e)
}

var fileDescriptor_36903a48ce78db6e = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xf2, 0x48, 0x2c, 0x2d, 0xc9,
	0xcf, 0xcb, 0xcf, 0xcd, 0x4c, 0xd6, 0x4f, 0xad, 0x28, 0xd1, 0x4f, 0xce, 0xcf, 0xcd, 0x4d, 0xcc,
	0x4b, 0xd1, 0x2f, 0x49, 0xcd, 0x49, 0xcd, 0x4d, 0x2d, 0x29, 0xaa, 0x4c, 0xcd, 0xcd, 0x2c, 0x2e,
	0xce, 0xcc, 0xcf, 0xd3, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0x2f, 0x2d, 0x4a, 0xc5, 0x90, 0xd2,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0x87, 0x9b, 0xa4, 0x97, 0x5a, 0x51, 0xa2, 0x07, 0x35,
	0x49, 0x0f, 0x43, 0xb9, 0xd2, 0x14, 0x26, 0x2e, 0x45, 0x67, 0x98, 0x69, 0x21, 0x30, 0x69, 0x57,
	0xa8, 0x74, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0xd0, 0x7c, 0x46, 0x2e, 0x89, 0x12, 0x74,
	0xc9, 0xe0, 0xd4, 0x92, 0x92, 0xcc, 0xbc, 0x74, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x3e, 0xa3, 0x64,
	0x3d, 0x22, 0xad, 0xd4, 0x23, 0x68, 0x9d, 0x5e, 0x08, 0x0e, 0xab, 0x82, 0x70, 0x3a, 0x42, 0xc9,
	0x97, 0x4b, 0x02, 0x97, 0x2e, 0x21, 0x6e, 0x2e, 0x76, 0x17, 0xcf, 0x60, 0x47, 0x27, 0x1f, 0x57,
	0x01, 0x06, 0x21, 0x2e, 0x2e, 0x36, 0x57, 0x3f, 0x30, 0x9b, 0x51, 0x48, 0x82, 0x4b, 0x04, 0xc2,
	0x8e, 0x0f, 0x76, 0xf4, 0x0b, 0x8e, 0xf7, 0xf1, 0x77, 0x76, 0x0c, 0xf1, 0xf4, 0xf7, 0x13, 0x60,
	0x72, 0x3a, 0xc0, 0xc8, 0xa5, 0x9d, 0x9c, 0x9f, 0x4b, 0xac, 0x9f, 0x9c, 0xd4, 0x08, 0x7a, 0x2a,
	0x00, 0x14, 0x2f, 0x01, 0x8c, 0x51, 0x71, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x20, 0xb3, 0xf4,
	0xe1, 0xa6, 0xeb, 0x26, 0x66, 0x82, 0x62, 0x3c, 0xb5, 0x28, 0x2f, 0x31, 0x47, 0x17, 0x1c, 0x83,
	0xc5, 0xfa, 0xc5, 0x45, 0xc9, 0xfa, 0xb9, 0x89, 0x99, 0x79, 0xfa, 0x60, 0xbe, 0x3e, 0x91, 0x49,
	0xe3, 0x07, 0x23, 0xe3, 0x22, 0x26, 0x66, 0xc7, 0xd0, 0x90, 0x24, 0x36, 0xb0, 0x3e, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x34, 0xad, 0xb1, 0xf5, 0x55, 0x02, 0x00, 0x00,
}
