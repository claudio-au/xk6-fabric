/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2017 - 2018 Autonomic Incorporated - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
syntax = "proto3";

package autonomic.ext.command.configuration.thirdparty;

import "google/protobuf/timestamp.proto";

option go_package = "xk6-fabric/proto/autonomic/ext/command/configuration/thirdparty";
option java_package = "com.autonomic.ext.command.configuration.thirdparty";
option java_outer_classname = "TelemetryProto";
option java_multiple_files = true;
option cc_enable_arenas = true;
option objc_class_prefix = "AUT";

// Messages pertaining to telemetry reporting requirements imposed by various municipalities

message ReportingSettings {
  // endpoint to report data
  string url = 1;

  // optional: time to start reporting data
  google.protobuf.Timestamp start_time = 2;

  // optional: time to stop reporting data
  google.protobuf.Timestamp end_time = 3;
}

// Settings with respect to telemetry emission to satisfy governmental regulations
message TelemetryConfiguration {

  // required: the state of the reporting system
  enum State {
    UNKNOWN_STATE = 0;
    ENABLE = 1;
    DISABLE = 2;
  }

  State state  = 1;

  // optional: if the State == ENABLE, these settings
  // may be used to configure the reporting semantics
  ReportingSettings reporting_settings = 2;
}
