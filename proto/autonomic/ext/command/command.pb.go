/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/command/command.proto

package command

import (
	context "context"
	fmt "fmt"
	actuation "xk6-fabric/proto/autonomic/ext/command/actuation"
	antitheft "xk6-fabric/proto/autonomic/ext/command/antitheft"
	authorization "xk6-fabric/proto/autonomic/ext/command/authorization"
	commandcancellation "xk6-fabric/proto/autonomic/ext/command/commandcancellation"
	configuration "xk6-fabric/proto/autonomic/ext/command/configuration"
	devicepairing "xk6-fabric/proto/autonomic/ext/command/devicepairing"
	diagnostic "xk6-fabric/proto/autonomic/ext/command/diagnostic"
	discovery "xk6-fabric/proto/autonomic/ext/command/discovery"
	hmiapplication "xk6-fabric/proto/autonomic/ext/command/hmiapplication"
	hmidisplay "xk6-fabric/proto/autonomic/ext/command/hmidisplay"
	keyrotation "xk6-fabric/proto/autonomic/ext/command/keyrotation"
	profile "xk6-fabric/proto/autonomic/ext/command/profile"
	telemetryemission "xk6-fabric/proto/autonomic/ext/command/telemetryemission"
	token "xk6-fabric/proto/autonomic/ext/command/token"
	vehicleclaim "xk6-fabric/proto/autonomic/ext/command/vehicleclaim"
	wifi "xk6-fabric/proto/autonomic/ext/command/wifi"
	deployment "xk6-fabric/proto/autonomic/ext/deployment"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandTrigger_CommandRequestType int32

const (
	CommandTrigger_UNKNOWN_COMMAND_REQUEST_TYPE CommandTrigger_CommandRequestType = 0
	CommandTrigger_DEVICE_CONFIG_RESET          CommandTrigger_CommandRequestType = 1
	CommandTrigger_MODULE_DISCOVERY             CommandTrigger_CommandRequestType = 2
	CommandTrigger_DEVICE_DIAGNOSTIC            CommandTrigger_CommandRequestType = 3
	CommandTrigger_DEVICE_KEY_ROTATION          CommandTrigger_CommandRequestType = 4
	CommandTrigger_DEVICE_DEPLOYMENT            CommandTrigger_CommandRequestType = 5
	CommandTrigger_ACTUATION                    CommandTrigger_CommandRequestType = 6
	CommandTrigger_DEVICE_CONFIG_UPDATE         CommandTrigger_CommandRequestType = 7
	CommandTrigger_HMI_DISPLAY                  CommandTrigger_CommandRequestType = 8
	CommandTrigger_TOKEN_REFRESH                CommandTrigger_CommandRequestType = 9
	CommandTrigger_EXECUTE_PENDING_UPDATES      CommandTrigger_CommandRequestType = 10
	CommandTrigger_WIFI_CONFIG                  CommandTrigger_CommandRequestType = 11
	CommandTrigger_ON_DEMAND_STATUS_UPDATE      CommandTrigger_CommandRequestType = 12
	CommandTrigger_WIFI_STATUS                  CommandTrigger_CommandRequestType = 13
	CommandTrigger_REPORT_WIFI_USAGE            CommandTrigger_CommandRequestType = 14
	CommandTrigger_COMMAND_CANCELLATION         CommandTrigger_CommandRequestType = 15
	CommandTrigger_VALIDATE_VEHICLE_CLAIM       CommandTrigger_CommandRequestType = 16
	CommandTrigger_RETRIEVE_DEVICE_PAIRING_CODE CommandTrigger_CommandRequestType = 17
	CommandTrigger_CHANGE_CONFIG_PROFILE        CommandTrigger_CommandRequestType = 18
	CommandTrigger_CONFIGURE_TELEMETRY_EMISSION CommandTrigger_CommandRequestType = 19
	CommandTrigger_USER_AUTH_CONFIRMATION       CommandTrigger_CommandRequestType = 20
	CommandTrigger_ANTI_THEFT                   CommandTrigger_CommandRequestType = 21
	CommandTrigger_HMI_APPLICATION_MESSAGE      CommandTrigger_CommandRequestType = 22
)

var CommandTrigger_CommandRequestType_name = map[int32]string{
	0:  "UNKNOWN_COMMAND_REQUEST_TYPE",
	1:  "DEVICE_CONFIG_RESET",
	2:  "MODULE_DISCOVERY",
	3:  "DEVICE_DIAGNOSTIC",
	4:  "DEVICE_KEY_ROTATION",
	5:  "DEVICE_DEPLOYMENT",
	6:  "ACTUATION",
	7:  "DEVICE_CONFIG_UPDATE",
	8:  "HMI_DISPLAY",
	9:  "TOKEN_REFRESH",
	10: "EXECUTE_PENDING_UPDATES",
	11: "WIFI_CONFIG",
	12: "ON_DEMAND_STATUS_UPDATE",
	13: "WIFI_STATUS",
	14: "REPORT_WIFI_USAGE",
	15: "COMMAND_CANCELLATION",
	16: "VALIDATE_VEHICLE_CLAIM",
	17: "RETRIEVE_DEVICE_PAIRING_CODE",
	18: "CHANGE_CONFIG_PROFILE",
	19: "CONFIGURE_TELEMETRY_EMISSION",
	20: "USER_AUTH_CONFIRMATION",
	21: "ANTI_THEFT",
	22: "HMI_APPLICATION_MESSAGE",
}

var CommandTrigger_CommandRequestType_value = map[string]int32{
	"UNKNOWN_COMMAND_REQUEST_TYPE": 0,
	"DEVICE_CONFIG_RESET":          1,
	"MODULE_DISCOVERY":             2,
	"DEVICE_DIAGNOSTIC":            3,
	"DEVICE_KEY_ROTATION":          4,
	"DEVICE_DEPLOYMENT":            5,
	"ACTUATION":                    6,
	"DEVICE_CONFIG_UPDATE":         7,
	"HMI_DISPLAY":                  8,
	"TOKEN_REFRESH":                9,
	"EXECUTE_PENDING_UPDATES":      10,
	"WIFI_CONFIG":                  11,
	"ON_DEMAND_STATUS_UPDATE":      12,
	"WIFI_STATUS":                  13,
	"REPORT_WIFI_USAGE":            14,
	"COMMAND_CANCELLATION":         15,
	"VALIDATE_VEHICLE_CLAIM":       16,
	"RETRIEVE_DEVICE_PAIRING_CODE": 17,
	"CHANGE_CONFIG_PROFILE":        18,
	"CONFIGURE_TELEMETRY_EMISSION": 19,
	"USER_AUTH_CONFIRMATION":       20,
	"ANTI_THEFT":                   21,
	"HMI_APPLICATION_MESSAGE":      22,
}

func (x CommandTrigger_CommandRequestType) String() string {
	return proto.EnumName(CommandTrigger_CommandRequestType_name, int32(x))
}

func (CommandTrigger_CommandRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{1, 0}
}

type ExecutePendingUpdatesRequest_UpdateScope int32

const (
	// Apply all available updates
	ExecutePendingUpdatesRequest_ANY ExecutePendingUpdatesRequest_UpdateScope = 0
	// Update only specifiec module / app
	ExecutePendingUpdatesRequest_SELECTIVE ExecutePendingUpdatesRequest_UpdateScope = 1
)

var ExecutePendingUpdatesRequest_UpdateScope_name = map[int32]string{
	0: "ANY",
	1: "SELECTIVE",
}

var ExecutePendingUpdatesRequest_UpdateScope_value = map[string]int32{
	"ANY":       0,
	"SELECTIVE": 1,
}

func (x ExecutePendingUpdatesRequest_UpdateScope) String() string {
	return proto.EnumName(ExecutePendingUpdatesRequest_UpdateScope_name, int32(x))
}

func (ExecutePendingUpdatesRequest_UpdateScope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{8, 0}
}

type OnDemandStatusUpdateRequest_TelemetrySet int32 // Deprecated: Do not use.
const (
	OnDemandStatusUpdateRequest_UNKNOWN        OnDemandStatusUpdateRequest_TelemetrySet = 0
	OnDemandStatusUpdateRequest_ALL_CONFIGURED OnDemandStatusUpdateRequest_TelemetrySet = 1
	OnDemandStatusUpdateRequest_LOCATION_ONLY  OnDemandStatusUpdateRequest_TelemetrySet = 2
)

var OnDemandStatusUpdateRequest_TelemetrySet_name = map[int32]string{
	0: "UNKNOWN",
	1: "ALL_CONFIGURED",
	2: "LOCATION_ONLY",
}

var OnDemandStatusUpdateRequest_TelemetrySet_value = map[string]int32{
	"UNKNOWN":        0,
	"ALL_CONFIGURED": 1,
	"LOCATION_ONLY":  2,
}

func (x OnDemandStatusUpdateRequest_TelemetrySet) String() string {
	return proto.EnumName(OnDemandStatusUpdateRequest_TelemetrySet_name, int32(x))
}

func (OnDemandStatusUpdateRequest_TelemetrySet) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{9, 0}
}

// Identifying information is supplied in the certificate used to by the device to connect
// to the platform edge.
type RegisterCommandListenerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterCommandListenerRequest) Reset()         { *m = RegisterCommandListenerRequest{} }
func (m *RegisterCommandListenerRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterCommandListenerRequest) ProtoMessage()    {}
func (*RegisterCommandListenerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{0}
}

func (m *RegisterCommandListenerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterCommandListenerRequest.Unmarshal(m, b)
}
func (m *RegisterCommandListenerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterCommandListenerRequest.Marshal(b, m, deterministic)
}
func (m *RegisterCommandListenerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterCommandListenerRequest.Merge(m, src)
}
func (m *RegisterCommandListenerRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterCommandListenerRequest.Size(m)
}
func (m *RegisterCommandListenerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterCommandListenerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterCommandListenerRequest proto.InternalMessageInfo

// Envelope containing a (possibly encrypted) command
type CommandTrigger struct {
	// The correlation_id is a Version 4 UUID string represented as a sequence of bytes.
	// Within the TMC, this field is the primary identifier for the command request. This field will
	// be unique for the target device in question. That is, it is possible for two command requests,
	// which target different devices, to share a correlation id. It is not possible for two commands,
	// which target a a single device id, to have the same correlation id.
	CorrelationId []byte `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Type information for encrypted requests is identified by looking at this field
	Type CommandTrigger_CommandRequestType `protobuf:"varint,2,opt,name=type,proto3,enum=autonomic.ext.command.CommandTrigger_CommandRequestType" json:"type,omitempty"`
	// Types that are valid to be assigned to Request:
	//	*CommandTrigger_EncryptedRequest
	//	*CommandTrigger_DiscoveryRequest
	//	*CommandTrigger_ConfigurationResetRequest
	//	*CommandTrigger_DiagnosticRequest
	//	*CommandTrigger_KeyRotationRequest
	//	*CommandTrigger_DeploymentRequest
	//	*CommandTrigger_ActuationRequest
	//	*CommandTrigger_ConfigurationUpdateRequest
	//	*CommandTrigger_HmiDisplayRequest
	//	*CommandTrigger_TokenRefreshRequest
	//	*CommandTrigger_ExecutePendingUpdatesRequest
	//	*CommandTrigger_WifiConfigRequest
	//	*CommandTrigger_OnDemandStatusUpdateRequest
	//	*CommandTrigger_WifiStatusRequest
	//	*CommandTrigger_ReportWifiUsageRequest
	//	*CommandTrigger_CommandCancellationRequest
	//	*CommandTrigger_ValidateVehicleClaimRequest
	//	*CommandTrigger_RetrieveDevicePairingCodeRequest
	//	*CommandTrigger_ChangeConfigProfileRequest
	//	*CommandTrigger_ConfigureTelemetryEmissionRequest
	//	*CommandTrigger_UserAuthConfirmationRequest
	//	*CommandTrigger_AntiTheftRequest
	//	*CommandTrigger_HmiApplicationMessage
	Request isCommandTrigger_Request `protobuf_oneof:"request"`
	// oem parameters for this command (opaque to au). Leverage oem_param_values instead
	OemParams map[string]string `protobuf:"bytes,1001,rep,name=oem_params,json=oemParams,proto3" json:"oem_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Deprecated: Do not use.
	// oem parameters for this command (opaque to au)
	OemParamValues map[string]*OemParamValue `protobuf:"bytes,1002,rep,name=oem_param_values,json=oemParamValues,proto3" json:"oem_param_values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The OEM correlation id is used by the originating cloud to correlate this command, and all of
	// its progress information, to some identifier that is known only to client which submitted
	// the request to the originating cloud. This value is entirely opaque to the TMC. This
	// value will always be attached to all progress information that is processed by the TMC about
	// the command request, regardless of whether the TMC is responsible for delivery of this command
	OemCorrelationId string `protobuf:"bytes,1003,opt,name=oem_correlation_id,json=oemCorrelationId,proto3" json:"oem_correlation_id,omitempty"`
	// Contains any and all cloud-specific contextual information that may be needed for simple
	// observability or command tracking purposes.
	MetadataTags         map[string]string `protobuf:"bytes,1004,rep,name=metadata_tags,json=metadataTags,proto3" json:"metadata_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommandTrigger) Reset()         { *m = CommandTrigger{} }
func (m *CommandTrigger) String() string { return proto.CompactTextString(m) }
func (*CommandTrigger) ProtoMessage()    {}
func (*CommandTrigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{1}
}

func (m *CommandTrigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandTrigger.Unmarshal(m, b)
}
func (m *CommandTrigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandTrigger.Marshal(b, m, deterministic)
}
func (m *CommandTrigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandTrigger.Merge(m, src)
}
func (m *CommandTrigger) XXX_Size() int {
	return xxx_messageInfo_CommandTrigger.Size(m)
}
func (m *CommandTrigger) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandTrigger.DiscardUnknown(m)
}

var xxx_messageInfo_CommandTrigger proto.InternalMessageInfo

func (m *CommandTrigger) GetCorrelationId() []byte {
	if m != nil {
		return m.CorrelationId
	}
	return nil
}

func (m *CommandTrigger) GetType() CommandTrigger_CommandRequestType {
	if m != nil {
		return m.Type
	}
	return CommandTrigger_UNKNOWN_COMMAND_REQUEST_TYPE
}

type isCommandTrigger_Request interface {
	isCommandTrigger_Request()
}

type CommandTrigger_EncryptedRequest struct {
	EncryptedRequest []byte `protobuf:"bytes,3,opt,name=encrypted_request,json=encryptedRequest,proto3,oneof"`
}

type CommandTrigger_DiscoveryRequest struct {
	DiscoveryRequest *discovery.DiscoveryRequest `protobuf:"bytes,4,opt,name=discovery_request,json=discoveryRequest,proto3,oneof"`
}

type CommandTrigger_ConfigurationResetRequest struct {
	ConfigurationResetRequest *configuration.ConfigurationResetRequest `protobuf:"bytes,5,opt,name=configuration_reset_request,json=configurationResetRequest,proto3,oneof"`
}

type CommandTrigger_DiagnosticRequest struct {
	DiagnosticRequest *diagnostic.DiagnosticRequest `protobuf:"bytes,6,opt,name=diagnostic_request,json=diagnosticRequest,proto3,oneof"`
}

type CommandTrigger_KeyRotationRequest struct {
	KeyRotationRequest *keyrotation.KeyRotationRequest `protobuf:"bytes,7,opt,name=key_rotation_request,json=keyRotationRequest,proto3,oneof"`
}

type CommandTrigger_DeploymentRequest struct {
	DeploymentRequest *deployment.DeviceDeploymentRequest `protobuf:"bytes,8,opt,name=deployment_request,json=deploymentRequest,proto3,oneof"`
}

type CommandTrigger_ActuationRequest struct {
	ActuationRequest *actuation.ActuationRequest `protobuf:"bytes,9,opt,name=actuation_request,json=actuationRequest,proto3,oneof"`
}

type CommandTrigger_ConfigurationUpdateRequest struct {
	ConfigurationUpdateRequest *configuration.ConfigurationUpdateRequest `protobuf:"bytes,10,opt,name=configuration_update_request,json=configurationUpdateRequest,proto3,oneof"`
}

type CommandTrigger_HmiDisplayRequest struct {
	HmiDisplayRequest *hmidisplay.HMIDisplayRequest `protobuf:"bytes,11,opt,name=hmi_display_request,json=hmiDisplayRequest,proto3,oneof"`
}

type CommandTrigger_TokenRefreshRequest struct {
	TokenRefreshRequest *token.TokenRefreshRequest `protobuf:"bytes,12,opt,name=token_refresh_request,json=tokenRefreshRequest,proto3,oneof"`
}

type CommandTrigger_ExecutePendingUpdatesRequest struct {
	ExecutePendingUpdatesRequest *ExecutePendingUpdatesRequest `protobuf:"bytes,13,opt,name=execute_pending_updates_request,json=executePendingUpdatesRequest,proto3,oneof"`
}

type CommandTrigger_WifiConfigRequest struct {
	WifiConfigRequest *wifi.WifiConfigRequest `protobuf:"bytes,14,opt,name=wifi_config_request,json=wifiConfigRequest,proto3,oneof"`
}

type CommandTrigger_OnDemandStatusUpdateRequest struct {
	OnDemandStatusUpdateRequest *OnDemandStatusUpdateRequest `protobuf:"bytes,15,opt,name=on_demand_status_update_request,json=onDemandStatusUpdateRequest,proto3,oneof"`
}

type CommandTrigger_WifiStatusRequest struct {
	WifiStatusRequest *wifi.WifiStatusRequest `protobuf:"bytes,16,opt,name=wifi_status_request,json=wifiStatusRequest,proto3,oneof"`
}

type CommandTrigger_ReportWifiUsageRequest struct {
	ReportWifiUsageRequest *wifi.ReportWifiUsageRequest `protobuf:"bytes,17,opt,name=report_wifi_usage_request,json=reportWifiUsageRequest,proto3,oneof"`
}

type CommandTrigger_CommandCancellationRequest struct {
	CommandCancellationRequest *commandcancellation.CommandCancellationRequest `protobuf:"bytes,18,opt,name=command_cancellation_request,json=commandCancellationRequest,proto3,oneof"`
}

type CommandTrigger_ValidateVehicleClaimRequest struct {
	ValidateVehicleClaimRequest *vehicleclaim.ValidateVehicleClaimRequest `protobuf:"bytes,19,opt,name=validate_vehicle_claim_request,json=validateVehicleClaimRequest,proto3,oneof"`
}

type CommandTrigger_RetrieveDevicePairingCodeRequest struct {
	RetrieveDevicePairingCodeRequest *devicepairing.RetrieveDevicePairingCodeRequest `protobuf:"bytes,20,opt,name=retrieve_device_pairing_code_request,json=retrieveDevicePairingCodeRequest,proto3,oneof"`
}

type CommandTrigger_ChangeConfigProfileRequest struct {
	ChangeConfigProfileRequest *profile.ChangeConfigProfileRequest `protobuf:"bytes,21,opt,name=change_config_profile_request,json=changeConfigProfileRequest,proto3,oneof"`
}

type CommandTrigger_ConfigureTelemetryEmissionRequest struct {
	ConfigureTelemetryEmissionRequest *telemetryemission.ConfigureTelemetryEmissionRequest `protobuf:"bytes,22,opt,name=configure_telemetry_emission_request,json=configureTelemetryEmissionRequest,proto3,oneof"`
}

type CommandTrigger_UserAuthConfirmationRequest struct {
	UserAuthConfirmationRequest *authorization.UserAuthConfirmationRequest `protobuf:"bytes,23,opt,name=user_auth_confirmation_request,json=userAuthConfirmationRequest,proto3,oneof"`
}

type CommandTrigger_AntiTheftRequest struct {
	AntiTheftRequest *antitheft.AntiTheftRequest `protobuf:"bytes,24,opt,name=anti_theft_request,json=antiTheftRequest,proto3,oneof"`
}

type CommandTrigger_HmiApplicationMessage struct {
	HmiApplicationMessage *hmiapplication.HMIApplicationMessage `protobuf:"bytes,25,opt,name=hmi_application_message,json=hmiApplicationMessage,proto3,oneof"`
}

func (*CommandTrigger_EncryptedRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_DiscoveryRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_ConfigurationResetRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_DiagnosticRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_KeyRotationRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_DeploymentRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_ActuationRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_ConfigurationUpdateRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_HmiDisplayRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_TokenRefreshRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_ExecutePendingUpdatesRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_WifiConfigRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_OnDemandStatusUpdateRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_WifiStatusRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_ReportWifiUsageRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_CommandCancellationRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_ValidateVehicleClaimRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_RetrieveDevicePairingCodeRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_ChangeConfigProfileRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_ConfigureTelemetryEmissionRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_UserAuthConfirmationRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_AntiTheftRequest) isCommandTrigger_Request() {}

func (*CommandTrigger_HmiApplicationMessage) isCommandTrigger_Request() {}

func (m *CommandTrigger) GetRequest() isCommandTrigger_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *CommandTrigger) GetEncryptedRequest() []byte {
	if x, ok := m.GetRequest().(*CommandTrigger_EncryptedRequest); ok {
		return x.EncryptedRequest
	}
	return nil
}

func (m *CommandTrigger) GetDiscoveryRequest() *discovery.DiscoveryRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_DiscoveryRequest); ok {
		return x.DiscoveryRequest
	}
	return nil
}

func (m *CommandTrigger) GetConfigurationResetRequest() *configuration.ConfigurationResetRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_ConfigurationResetRequest); ok {
		return x.ConfigurationResetRequest
	}
	return nil
}

func (m *CommandTrigger) GetDiagnosticRequest() *diagnostic.DiagnosticRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_DiagnosticRequest); ok {
		return x.DiagnosticRequest
	}
	return nil
}

func (m *CommandTrigger) GetKeyRotationRequest() *keyrotation.KeyRotationRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_KeyRotationRequest); ok {
		return x.KeyRotationRequest
	}
	return nil
}

func (m *CommandTrigger) GetDeploymentRequest() *deployment.DeviceDeploymentRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_DeploymentRequest); ok {
		return x.DeploymentRequest
	}
	return nil
}

func (m *CommandTrigger) GetActuationRequest() *actuation.ActuationRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_ActuationRequest); ok {
		return x.ActuationRequest
	}
	return nil
}

func (m *CommandTrigger) GetConfigurationUpdateRequest() *configuration.ConfigurationUpdateRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_ConfigurationUpdateRequest); ok {
		return x.ConfigurationUpdateRequest
	}
	return nil
}

// Deprecated: Do not use.
func (m *CommandTrigger) GetHmiDisplayRequest() *hmidisplay.HMIDisplayRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_HmiDisplayRequest); ok {
		return x.HmiDisplayRequest
	}
	return nil
}

func (m *CommandTrigger) GetTokenRefreshRequest() *token.TokenRefreshRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_TokenRefreshRequest); ok {
		return x.TokenRefreshRequest
	}
	return nil
}

func (m *CommandTrigger) GetExecutePendingUpdatesRequest() *ExecutePendingUpdatesRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_ExecutePendingUpdatesRequest); ok {
		return x.ExecutePendingUpdatesRequest
	}
	return nil
}

func (m *CommandTrigger) GetWifiConfigRequest() *wifi.WifiConfigRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_WifiConfigRequest); ok {
		return x.WifiConfigRequest
	}
	return nil
}

func (m *CommandTrigger) GetOnDemandStatusUpdateRequest() *OnDemandStatusUpdateRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_OnDemandStatusUpdateRequest); ok {
		return x.OnDemandStatusUpdateRequest
	}
	return nil
}

func (m *CommandTrigger) GetWifiStatusRequest() *wifi.WifiStatusRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_WifiStatusRequest); ok {
		return x.WifiStatusRequest
	}
	return nil
}

func (m *CommandTrigger) GetReportWifiUsageRequest() *wifi.ReportWifiUsageRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_ReportWifiUsageRequest); ok {
		return x.ReportWifiUsageRequest
	}
	return nil
}

func (m *CommandTrigger) GetCommandCancellationRequest() *commandcancellation.CommandCancellationRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_CommandCancellationRequest); ok {
		return x.CommandCancellationRequest
	}
	return nil
}

func (m *CommandTrigger) GetValidateVehicleClaimRequest() *vehicleclaim.ValidateVehicleClaimRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_ValidateVehicleClaimRequest); ok {
		return x.ValidateVehicleClaimRequest
	}
	return nil
}

func (m *CommandTrigger) GetRetrieveDevicePairingCodeRequest() *devicepairing.RetrieveDevicePairingCodeRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_RetrieveDevicePairingCodeRequest); ok {
		return x.RetrieveDevicePairingCodeRequest
	}
	return nil
}

func (m *CommandTrigger) GetChangeConfigProfileRequest() *profile.ChangeConfigProfileRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_ChangeConfigProfileRequest); ok {
		return x.ChangeConfigProfileRequest
	}
	return nil
}

func (m *CommandTrigger) GetConfigureTelemetryEmissionRequest() *telemetryemission.ConfigureTelemetryEmissionRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_ConfigureTelemetryEmissionRequest); ok {
		return x.ConfigureTelemetryEmissionRequest
	}
	return nil
}

func (m *CommandTrigger) GetUserAuthConfirmationRequest() *authorization.UserAuthConfirmationRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_UserAuthConfirmationRequest); ok {
		return x.UserAuthConfirmationRequest
	}
	return nil
}

func (m *CommandTrigger) GetAntiTheftRequest() *antitheft.AntiTheftRequest {
	if x, ok := m.GetRequest().(*CommandTrigger_AntiTheftRequest); ok {
		return x.AntiTheftRequest
	}
	return nil
}

func (m *CommandTrigger) GetHmiApplicationMessage() *hmiapplication.HMIApplicationMessage {
	if x, ok := m.GetRequest().(*CommandTrigger_HmiApplicationMessage); ok {
		return x.HmiApplicationMessage
	}
	return nil
}

// Deprecated: Do not use.
func (m *CommandTrigger) GetOemParams() map[string]string {
	if m != nil {
		return m.OemParams
	}
	return nil
}

func (m *CommandTrigger) GetOemParamValues() map[string]*OemParamValue {
	if m != nil {
		return m.OemParamValues
	}
	return nil
}

func (m *CommandTrigger) GetOemCorrelationId() string {
	if m != nil {
		return m.OemCorrelationId
	}
	return ""
}

func (m *CommandTrigger) GetMetadataTags() map[string]string {
	if m != nil {
		return m.MetadataTags
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CommandTrigger) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CommandTrigger_EncryptedRequest)(nil),
		(*CommandTrigger_DiscoveryRequest)(nil),
		(*CommandTrigger_ConfigurationResetRequest)(nil),
		(*CommandTrigger_DiagnosticRequest)(nil),
		(*CommandTrigger_KeyRotationRequest)(nil),
		(*CommandTrigger_DeploymentRequest)(nil),
		(*CommandTrigger_ActuationRequest)(nil),
		(*CommandTrigger_ConfigurationUpdateRequest)(nil),
		(*CommandTrigger_HmiDisplayRequest)(nil),
		(*CommandTrigger_TokenRefreshRequest)(nil),
		(*CommandTrigger_ExecutePendingUpdatesRequest)(nil),
		(*CommandTrigger_WifiConfigRequest)(nil),
		(*CommandTrigger_OnDemandStatusUpdateRequest)(nil),
		(*CommandTrigger_WifiStatusRequest)(nil),
		(*CommandTrigger_ReportWifiUsageRequest)(nil),
		(*CommandTrigger_CommandCancellationRequest)(nil),
		(*CommandTrigger_ValidateVehicleClaimRequest)(nil),
		(*CommandTrigger_RetrieveDevicePairingCodeRequest)(nil),
		(*CommandTrigger_ChangeConfigProfileRequest)(nil),
		(*CommandTrigger_ConfigureTelemetryEmissionRequest)(nil),
		(*CommandTrigger_UserAuthConfirmationRequest)(nil),
		(*CommandTrigger_AntiTheftRequest)(nil),
		(*CommandTrigger_HmiApplicationMessage)(nil),
	}
}

type OemParamValue struct {
	// Types that are valid to be assigned to Value:
	//	*OemParamValue_BoolValue
	//	*OemParamValue_Int64Value
	//	*OemParamValue_DoubleValue
	//	*OemParamValue_FloatValue
	//	*OemParamValue_StringValue
	//	*OemParamValue_StringArrayValue
	//	*OemParamValue_MapValue
	//	*OemParamValue_MapArrayValue
	//	*OemParamValue_ByteValue
	//	*OemParamValue_Int64ArrayValue
	Value                isOemParamValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *OemParamValue) Reset()         { *m = OemParamValue{} }
func (m *OemParamValue) String() string { return proto.CompactTextString(m) }
func (*OemParamValue) ProtoMessage()    {}
func (*OemParamValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{2}
}

func (m *OemParamValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OemParamValue.Unmarshal(m, b)
}
func (m *OemParamValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OemParamValue.Marshal(b, m, deterministic)
}
func (m *OemParamValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OemParamValue.Merge(m, src)
}
func (m *OemParamValue) XXX_Size() int {
	return xxx_messageInfo_OemParamValue.Size(m)
}
func (m *OemParamValue) XXX_DiscardUnknown() {
	xxx_messageInfo_OemParamValue.DiscardUnknown(m)
}

var xxx_messageInfo_OemParamValue proto.InternalMessageInfo

type isOemParamValue_Value interface {
	isOemParamValue_Value()
}

type OemParamValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type OemParamValue_Int64Value struct {
	Int64Value int64 `protobuf:"varint,2,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type OemParamValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type OemParamValue_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,4,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type OemParamValue_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type OemParamValue_StringArrayValue struct {
	StringArrayValue *OemParamStringArrayValue `protobuf:"bytes,6,opt,name=string_array_value,json=stringArrayValue,proto3,oneof"`
}

type OemParamValue_MapValue struct {
	MapValue *OemParamMapValue `protobuf:"bytes,7,opt,name=map_value,json=mapValue,proto3,oneof"`
}

type OemParamValue_MapArrayValue struct {
	MapArrayValue *OemParamMapArrayValue `protobuf:"bytes,8,opt,name=map_array_value,json=mapArrayValue,proto3,oneof"`
}

type OemParamValue_ByteValue struct {
	ByteValue []byte `protobuf:"bytes,9,opt,name=byte_value,json=byteValue,proto3,oneof"`
}

type OemParamValue_Int64ArrayValue struct {
	Int64ArrayValue *OemParamIntArrayValue `protobuf:"bytes,10,opt,name=int64_array_value,json=int64ArrayValue,proto3,oneof"`
}

func (*OemParamValue_BoolValue) isOemParamValue_Value() {}

func (*OemParamValue_Int64Value) isOemParamValue_Value() {}

func (*OemParamValue_DoubleValue) isOemParamValue_Value() {}

func (*OemParamValue_FloatValue) isOemParamValue_Value() {}

func (*OemParamValue_StringValue) isOemParamValue_Value() {}

func (*OemParamValue_StringArrayValue) isOemParamValue_Value() {}

func (*OemParamValue_MapValue) isOemParamValue_Value() {}

func (*OemParamValue_MapArrayValue) isOemParamValue_Value() {}

func (*OemParamValue_ByteValue) isOemParamValue_Value() {}

func (*OemParamValue_Int64ArrayValue) isOemParamValue_Value() {}

func (m *OemParamValue) GetValue() isOemParamValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *OemParamValue) GetBoolValue() bool {
	if x, ok := m.GetValue().(*OemParamValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *OemParamValue) GetInt64Value() int64 {
	if x, ok := m.GetValue().(*OemParamValue_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (m *OemParamValue) GetDoubleValue() float64 {
	if x, ok := m.GetValue().(*OemParamValue_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *OemParamValue) GetFloatValue() float32 {
	if x, ok := m.GetValue().(*OemParamValue_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *OemParamValue) GetStringValue() string {
	if x, ok := m.GetValue().(*OemParamValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *OemParamValue) GetStringArrayValue() *OemParamStringArrayValue {
	if x, ok := m.GetValue().(*OemParamValue_StringArrayValue); ok {
		return x.StringArrayValue
	}
	return nil
}

func (m *OemParamValue) GetMapValue() *OemParamMapValue {
	if x, ok := m.GetValue().(*OemParamValue_MapValue); ok {
		return x.MapValue
	}
	return nil
}

func (m *OemParamValue) GetMapArrayValue() *OemParamMapArrayValue {
	if x, ok := m.GetValue().(*OemParamValue_MapArrayValue); ok {
		return x.MapArrayValue
	}
	return nil
}

func (m *OemParamValue) GetByteValue() []byte {
	if x, ok := m.GetValue().(*OemParamValue_ByteValue); ok {
		return x.ByteValue
	}
	return nil
}

func (m *OemParamValue) GetInt64ArrayValue() *OemParamIntArrayValue {
	if x, ok := m.GetValue().(*OemParamValue_Int64ArrayValue); ok {
		return x.Int64ArrayValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OemParamValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OemParamValue_BoolValue)(nil),
		(*OemParamValue_Int64Value)(nil),
		(*OemParamValue_DoubleValue)(nil),
		(*OemParamValue_FloatValue)(nil),
		(*OemParamValue_StringValue)(nil),
		(*OemParamValue_StringArrayValue)(nil),
		(*OemParamValue_MapValue)(nil),
		(*OemParamValue_MapArrayValue)(nil),
		(*OemParamValue_ByteValue)(nil),
		(*OemParamValue_Int64ArrayValue)(nil),
	}
}

type SimpleValue struct {
	// Types that are valid to be assigned to Value:
	//	*SimpleValue_BoolValue
	//	*SimpleValue_Int64Value
	//	*SimpleValue_DoubleValue
	//	*SimpleValue_FloatValue
	//	*SimpleValue_StringValue
	//	*SimpleValue_ByteValue
	Value                isSimpleValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SimpleValue) Reset()         { *m = SimpleValue{} }
func (m *SimpleValue) String() string { return proto.CompactTextString(m) }
func (*SimpleValue) ProtoMessage()    {}
func (*SimpleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{3}
}

func (m *SimpleValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleValue.Unmarshal(m, b)
}
func (m *SimpleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleValue.Marshal(b, m, deterministic)
}
func (m *SimpleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleValue.Merge(m, src)
}
func (m *SimpleValue) XXX_Size() int {
	return xxx_messageInfo_SimpleValue.Size(m)
}
func (m *SimpleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleValue.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleValue proto.InternalMessageInfo

type isSimpleValue_Value interface {
	isSimpleValue_Value()
}

type SimpleValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type SimpleValue_Int64Value struct {
	Int64Value int64 `protobuf:"varint,2,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type SimpleValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type SimpleValue_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,4,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type SimpleValue_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type SimpleValue_ByteValue struct {
	ByteValue []byte `protobuf:"bytes,6,opt,name=byte_value,json=byteValue,proto3,oneof"`
}

func (*SimpleValue_BoolValue) isSimpleValue_Value() {}

func (*SimpleValue_Int64Value) isSimpleValue_Value() {}

func (*SimpleValue_DoubleValue) isSimpleValue_Value() {}

func (*SimpleValue_FloatValue) isSimpleValue_Value() {}

func (*SimpleValue_StringValue) isSimpleValue_Value() {}

func (*SimpleValue_ByteValue) isSimpleValue_Value() {}

func (m *SimpleValue) GetValue() isSimpleValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SimpleValue) GetBoolValue() bool {
	if x, ok := m.GetValue().(*SimpleValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *SimpleValue) GetInt64Value() int64 {
	if x, ok := m.GetValue().(*SimpleValue_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (m *SimpleValue) GetDoubleValue() float64 {
	if x, ok := m.GetValue().(*SimpleValue_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *SimpleValue) GetFloatValue() float32 {
	if x, ok := m.GetValue().(*SimpleValue_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *SimpleValue) GetStringValue() string {
	if x, ok := m.GetValue().(*SimpleValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *SimpleValue) GetByteValue() []byte {
	if x, ok := m.GetValue().(*SimpleValue_ByteValue); ok {
		return x.ByteValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SimpleValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SimpleValue_BoolValue)(nil),
		(*SimpleValue_Int64Value)(nil),
		(*SimpleValue_DoubleValue)(nil),
		(*SimpleValue_FloatValue)(nil),
		(*SimpleValue_StringValue)(nil),
		(*SimpleValue_ByteValue)(nil),
	}
}

type OemParamStringArrayValue struct {
	Value                []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OemParamStringArrayValue) Reset()         { *m = OemParamStringArrayValue{} }
func (m *OemParamStringArrayValue) String() string { return proto.CompactTextString(m) }
func (*OemParamStringArrayValue) ProtoMessage()    {}
func (*OemParamStringArrayValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{4}
}

func (m *OemParamStringArrayValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OemParamStringArrayValue.Unmarshal(m, b)
}
func (m *OemParamStringArrayValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OemParamStringArrayValue.Marshal(b, m, deterministic)
}
func (m *OemParamStringArrayValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OemParamStringArrayValue.Merge(m, src)
}
func (m *OemParamStringArrayValue) XXX_Size() int {
	return xxx_messageInfo_OemParamStringArrayValue.Size(m)
}
func (m *OemParamStringArrayValue) XXX_DiscardUnknown() {
	xxx_messageInfo_OemParamStringArrayValue.DiscardUnknown(m)
}

var xxx_messageInfo_OemParamStringArrayValue proto.InternalMessageInfo

func (m *OemParamStringArrayValue) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type OemParamIntArrayValue struct {
	Value                []int64  `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OemParamIntArrayValue) Reset()         { *m = OemParamIntArrayValue{} }
func (m *OemParamIntArrayValue) String() string { return proto.CompactTextString(m) }
func (*OemParamIntArrayValue) ProtoMessage()    {}
func (*OemParamIntArrayValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{5}
}

func (m *OemParamIntArrayValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OemParamIntArrayValue.Unmarshal(m, b)
}
func (m *OemParamIntArrayValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OemParamIntArrayValue.Marshal(b, m, deterministic)
}
func (m *OemParamIntArrayValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OemParamIntArrayValue.Merge(m, src)
}
func (m *OemParamIntArrayValue) XXX_Size() int {
	return xxx_messageInfo_OemParamIntArrayValue.Size(m)
}
func (m *OemParamIntArrayValue) XXX_DiscardUnknown() {
	xxx_messageInfo_OemParamIntArrayValue.DiscardUnknown(m)
}

var xxx_messageInfo_OemParamIntArrayValue proto.InternalMessageInfo

func (m *OemParamIntArrayValue) GetValue() []int64 {
	if m != nil {
		return m.Value
	}
	return nil
}

type OemParamMapValue struct {
	Value                map[string]string       `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Deprecated: Do not use.
	MultiTypeValue       map[string]*SimpleValue `protobuf:"bytes,2,rep,name=multi_type_value,json=multiTypeValue,proto3" json:"multi_type_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *OemParamMapValue) Reset()         { *m = OemParamMapValue{} }
func (m *OemParamMapValue) String() string { return proto.CompactTextString(m) }
func (*OemParamMapValue) ProtoMessage()    {}
func (*OemParamMapValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{6}
}

func (m *OemParamMapValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OemParamMapValue.Unmarshal(m, b)
}
func (m *OemParamMapValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OemParamMapValue.Marshal(b, m, deterministic)
}
func (m *OemParamMapValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OemParamMapValue.Merge(m, src)
}
func (m *OemParamMapValue) XXX_Size() int {
	return xxx_messageInfo_OemParamMapValue.Size(m)
}
func (m *OemParamMapValue) XXX_DiscardUnknown() {
	xxx_messageInfo_OemParamMapValue.DiscardUnknown(m)
}

var xxx_messageInfo_OemParamMapValue proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *OemParamMapValue) GetValue() map[string]string {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *OemParamMapValue) GetMultiTypeValue() map[string]*SimpleValue {
	if m != nil {
		return m.MultiTypeValue
	}
	return nil
}

type OemParamMapArrayValue struct {
	Value                []*OemParamMapValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *OemParamMapArrayValue) Reset()         { *m = OemParamMapArrayValue{} }
func (m *OemParamMapArrayValue) String() string { return proto.CompactTextString(m) }
func (*OemParamMapArrayValue) ProtoMessage()    {}
func (*OemParamMapArrayValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{7}
}

func (m *OemParamMapArrayValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OemParamMapArrayValue.Unmarshal(m, b)
}
func (m *OemParamMapArrayValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OemParamMapArrayValue.Marshal(b, m, deterministic)
}
func (m *OemParamMapArrayValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OemParamMapArrayValue.Merge(m, src)
}
func (m *OemParamMapArrayValue) XXX_Size() int {
	return xxx_messageInfo_OemParamMapArrayValue.Size(m)
}
func (m *OemParamMapArrayValue) XXX_DiscardUnknown() {
	xxx_messageInfo_OemParamMapArrayValue.DiscardUnknown(m)
}

var xxx_messageInfo_OemParamMapArrayValue proto.InternalMessageInfo

func (m *OemParamMapArrayValue) GetValue() []*OemParamMapValue {
	if m != nil {
		return m.Value
	}
	return nil
}

// Tell the device to execute pending updates, possibly scoped by module
type ExecutePendingUpdatesRequest struct {
	UpdateScope ExecutePendingUpdatesRequest_UpdateScope `protobuf:"varint,1,opt,name=update_scope,json=updateScope,proto3,enum=autonomic.ext.command.ExecutePendingUpdatesRequest_UpdateScope" json:"update_scope,omitempty"`
	// Parameter only set when UpdateScope is SELECTIVE
	Module               string   `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutePendingUpdatesRequest) Reset()         { *m = ExecutePendingUpdatesRequest{} }
func (m *ExecutePendingUpdatesRequest) String() string { return proto.CompactTextString(m) }
func (*ExecutePendingUpdatesRequest) ProtoMessage()    {}
func (*ExecutePendingUpdatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{8}
}

func (m *ExecutePendingUpdatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutePendingUpdatesRequest.Unmarshal(m, b)
}
func (m *ExecutePendingUpdatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutePendingUpdatesRequest.Marshal(b, m, deterministic)
}
func (m *ExecutePendingUpdatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutePendingUpdatesRequest.Merge(m, src)
}
func (m *ExecutePendingUpdatesRequest) XXX_Size() int {
	return xxx_messageInfo_ExecutePendingUpdatesRequest.Size(m)
}
func (m *ExecutePendingUpdatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutePendingUpdatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutePendingUpdatesRequest proto.InternalMessageInfo

func (m *ExecutePendingUpdatesRequest) GetUpdateScope() ExecutePendingUpdatesRequest_UpdateScope {
	if m != nil {
		return m.UpdateScope
	}
	return ExecutePendingUpdatesRequest_ANY
}

func (m *ExecutePendingUpdatesRequest) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

// On-demand status update: The device will emit telemetry based on current device configuration
type OnDemandStatusUpdateRequest struct {
	TelemetrySet         OnDemandStatusUpdateRequest_TelemetrySet `protobuf:"varint,1,opt,name=telemetry_set,json=telemetrySet,proto3,enum=autonomic.ext.command.OnDemandStatusUpdateRequest_TelemetrySet" json:"telemetry_set,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *OnDemandStatusUpdateRequest) Reset()         { *m = OnDemandStatusUpdateRequest{} }
func (m *OnDemandStatusUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*OnDemandStatusUpdateRequest) ProtoMessage()    {}
func (*OnDemandStatusUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7baa4ca1baa16b3f, []int{9}
}

func (m *OnDemandStatusUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnDemandStatusUpdateRequest.Unmarshal(m, b)
}
func (m *OnDemandStatusUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnDemandStatusUpdateRequest.Marshal(b, m, deterministic)
}
func (m *OnDemandStatusUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnDemandStatusUpdateRequest.Merge(m, src)
}
func (m *OnDemandStatusUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_OnDemandStatusUpdateRequest.Size(m)
}
func (m *OnDemandStatusUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OnDemandStatusUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OnDemandStatusUpdateRequest proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *OnDemandStatusUpdateRequest) GetTelemetrySet() OnDemandStatusUpdateRequest_TelemetrySet {
	if m != nil {
		return m.TelemetrySet
	}
	return OnDemandStatusUpdateRequest_UNKNOWN
}

func init() {
	proto.RegisterEnum("autonomic.ext.command.CommandTrigger_CommandRequestType", CommandTrigger_CommandRequestType_name, CommandTrigger_CommandRequestType_value)
	proto.RegisterEnum("autonomic.ext.command.ExecutePendingUpdatesRequest_UpdateScope", ExecutePendingUpdatesRequest_UpdateScope_name, ExecutePendingUpdatesRequest_UpdateScope_value)
	proto.RegisterEnum("autonomic.ext.command.OnDemandStatusUpdateRequest_TelemetrySet", OnDemandStatusUpdateRequest_TelemetrySet_name, OnDemandStatusUpdateRequest_TelemetrySet_value)
	proto.RegisterType((*RegisterCommandListenerRequest)(nil), "autonomic.ext.command.RegisterCommandListenerRequest")
	proto.RegisterType((*CommandTrigger)(nil), "autonomic.ext.command.CommandTrigger")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.command.CommandTrigger.MetadataTagsEntry")
	proto.RegisterMapType((map[string]*OemParamValue)(nil), "autonomic.ext.command.CommandTrigger.OemParamValuesEntry")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.command.CommandTrigger.OemParamsEntry")
	proto.RegisterType((*OemParamValue)(nil), "autonomic.ext.command.OemParamValue")
	proto.RegisterType((*SimpleValue)(nil), "autonomic.ext.command.SimpleValue")
	proto.RegisterType((*OemParamStringArrayValue)(nil), "autonomic.ext.command.OemParamStringArrayValue")
	proto.RegisterType((*OemParamIntArrayValue)(nil), "autonomic.ext.command.OemParamIntArrayValue")
	proto.RegisterType((*OemParamMapValue)(nil), "autonomic.ext.command.OemParamMapValue")
	proto.RegisterMapType((map[string]*SimpleValue)(nil), "autonomic.ext.command.OemParamMapValue.MultiTypeValueEntry")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.command.OemParamMapValue.ValueEntry")
	proto.RegisterType((*OemParamMapArrayValue)(nil), "autonomic.ext.command.OemParamMapArrayValue")
	proto.RegisterType((*ExecutePendingUpdatesRequest)(nil), "autonomic.ext.command.ExecutePendingUpdatesRequest")
	proto.RegisterType((*OnDemandStatusUpdateRequest)(nil), "autonomic.ext.command.OnDemandStatusUpdateRequest")
}

func init() {
	proto.RegisterFile("autonomic/ext/command/command.proto", fileDescriptor_7baa4ca1baa16b3f)
}

var fileDescriptor_7baa4ca1baa16b3f = []byte{
	// 2328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0x4f, 0x6f, 0xdb, 0xc8,
	0x15, 0x37, 0xed, 0xc4, 0x8e, 0x46, 0xb6, 0x43, 0x8f, 0xed, 0x44, 0x71, 0xd2, 0xc4, 0xeb, 0x4d,
	0xb0, 0x39, 0xd4, 0x72, 0xd6, 0x9b, 0x76, 0x93, 0xb4, 0xdb, 0x2c, 0x43, 0x8d, 0x23, 0x6e, 0xf4,
	0xaf, 0x14, 0xe5, 0xac, 0x17, 0x28, 0xa6, 0x34, 0x35, 0x96, 0x88, 0x88, 0xa4, 0x4a, 0x52, 0xde,
	0x68, 0x5b, 0x14, 0x45, 0x0b, 0xb4, 0x28, 0xd0, 0x7b, 0x4f, 0xbd, 0xf4, 0x9b, 0xf4, 0x54, 0xa0,
	0x97, 0x7e, 0x8d, 0x6c, 0xdb, 0x0f, 0xd0, 0x5b, 0x8b, 0xf9, 0xc3, 0x7f, 0x92, 0x28, 0x3b, 0xc7,
	0xbd, 0xc8, 0x33, 0x6f, 0xde, 0xfb, 0xfd, 0xde, 0xcc, 0xbc, 0x99, 0xf7, 0x86, 0x06, 0x1f, 0x9a,
	0xa3, 0xd0, 0x73, 0x3d, 0xc7, 0xb6, 0x0e, 0xc8, 0xdb, 0xf0, 0xc0, 0xf2, 0x1c, 0xc7, 0x74, 0xbb,
	0xd1, 0xdf, 0xf2, 0xd0, 0xf7, 0x42, 0x0f, 0x6e, 0xc7, 0x4a, 0x65, 0xf2, 0x36, 0x2c, 0x8b, 0xc1,
	0x9d, 0x47, 0x59, 0xdb, 0x2e, 0x19, 0x0e, 0xbc, 0xb1, 0x43, 0x5c, 0xda, 0x3c, 0xb7, 0x2d, 0x82,
	0x13, 0x09, 0x07, 0xda, 0x39, 0x98, 0xcd, 0x66, 0x5a, 0xe1, 0xc8, 0x0c, 0x6d, 0xcf, 0x4d, 0x5a,
	0xc2, 0xe0, 0x51, 0x8e, 0x81, 0x1b, 0xda, 0x61, 0x9f, 0x9c, 0x85, 0xac, 0x85, 0x59, 0x53, 0x58,
	0x54, 0xe6, 0x4e, 0xc8, 0x32, 0x5d, 0x8b, 0x0c, 0x06, 0x9c, 0x4c, 0xc8, 0x70, 0x5a, 0x28, 0x50,
	0x3e, 0xcd, 0x43, 0x71, 0xcf, 0xec, 0xde, 0xc8, 0x8f, 0xec, 0x53, 0x3d, 0x61, 0xf8, 0x78, 0xb6,
	0xe1, 0x1b, 0x32, 0xf6, 0xbd, 0x90, 0x9b, 0xbd, 0x21, 0x63, 0x1c, 0x75, 0x84, 0xd5, 0xe1, 0x6c,
	0xab, 0xaf, 0xed, 0x33, 0xfb, 0xc0, 0x27, 0x43, 0xcf, 0x0f, 0x31, 0x6d, 0xe3, 0x51, 0x60, 0xf6,
	0x88, 0xb0, 0x79, 0x30, 0xc7, 0x86, 0xfe, 0x08, 0xb5, 0x8f, 0x67, 0xab, 0x75, 0x6d, 0xb3, 0xe7,
	0x7a, 0x41, 0x68, 0x5b, 0xa9, 0xe6, 0xfc, 0x5d, 0xea, 0xda, 0x81, 0xe5, 0x9d, 0x13, 0x7f, 0x9c,
	0xb4, 0x84, 0xc1, 0x47, 0xb3, 0x0d, 0x42, 0xef, 0x0d, 0x71, 0xf9, 0xef, 0xfc, 0x79, 0xf6, 0x1d,
	0xbb, 0x6b, 0x07, 0xc3, 0x81, 0x39, 0xa6, 0x4d, 0x2c, 0xda, 0xc2, 0xe6, 0xf9, 0x6c, 0x9b, 0x73,
	0xd2, 0xb7, 0xad, 0x01, 0xb1, 0x06, 0xa6, 0xed, 0x1c, 0x9c, 0x9b, 0x03, 0xbb, 0x6b, 0x86, 0x04,
	0x0b, 0x29, 0x66, 0x62, 0x01, 0xf0, 0x59, 0xce, 0x74, 0x58, 0x8c, 0x0e, 0x4d, 0xdb, 0xb7, 0xdd,
	0x5e, 0x14, 0xb1, 0xa2, 0x8b, 0x2d, 0xaf, 0x1b, 0xad, 0xf3, 0xd3, 0xd9, 0xe6, 0x43, 0xdf, 0x3b,
	0xb3, 0x07, 0xe4, 0xc0, 0xea, 0x9b, 0x6e, 0x8f, 0x60, 0x1e, 0x0b, 0x58, 0x48, 0x85, 0x69, 0x35,
	0x67, 0x5d, 0xc8, 0x80, 0x38, 0x24, 0xf4, 0xc7, 0xc4, 0xb1, 0x83, 0x20, 0x1d, 0x49, 0x64, 0x6a,
	0x48, 0x20, 0x7d, 0x9e, 0x73, 0x0e, 0x46, 0x61, 0xdf, 0xf3, 0xed, 0x6f, 0x78, 0x60, 0x8d, 0x02,
	0xe2, 0x63, 0x2a, 0xe2, 0xde, 0xf8, 0x4e, 0x3a, 0xc4, 0x9e, 0xe5, 0x2e, 0xbd, 0x39, 0x1c, 0x0e,
	0x6c, 0x8b, 0x43, 0xd0, 0xe5, 0x4f, 0xf5, 0xb9, 0xed, 0xde, 0x2e, 0xb8, 0xab, 0x93, 0x9e, 0x1d,
	0x84, 0xc4, 0x57, 0xb9, 0x5d, 0x8d, 0x76, 0x5c, 0xe2, 0xeb, 0xe4, 0x17, 0x23, 0x12, 0x84, 0x7b,
	0xff, 0xbb, 0x0b, 0xd6, 0xc5, 0x90, 0xe1, 0xdb, 0xbd, 0x1e, 0xf1, 0xe1, 0x03, 0xb0, 0x6e, 0x79,
	0xbe, 0x4f, 0xf8, 0xb9, 0xc2, 0x76, 0xb7, 0x24, 0xed, 0x4a, 0x0f, 0x57, 0xf5, 0xb5, 0x94, 0x54,
	0xeb, 0xc2, 0x1a, 0xb8, 0x12, 0x8e, 0x87, 0xa4, 0xb4, 0xb8, 0x2b, 0x3d, 0x5c, 0x3f, 0x7c, 0x52,
	0x9e, 0x79, 0xd5, 0x94, 0xb3, 0xd8, 0x51, 0x57, 0xb0, 0x1b, 0xe3, 0x21, 0xd1, 0x19, 0x0a, 0xdc,
	0x07, 0x1b, 0xc4, 0xb5, 0xfc, 0xf1, 0x30, 0x24, 0x5d, 0xec, 0xf3, 0xe1, 0xd2, 0x12, 0xe5, 0xad,
	0x2e, 0xe8, 0x72, 0x3c, 0x24, 0x0c, 0xe1, 0xcf, 0xc1, 0x46, 0x1c, 0xcb, 0xb1, 0xfa, 0x95, 0x5d,
	0xe9, 0x61, 0xf1, 0xf0, 0xe3, 0x1c, 0x4f, 0x92, 0xd8, 0xaf, 0x44, 0x2d, 0x81, 0x46, 0x19, 0xba,
	0x13, 0x32, 0xf8, 0x1b, 0x09, 0xdc, 0xce, 0xdc, 0x13, 0xd8, 0x27, 0x01, 0x09, 0x63, 0xb2, 0xab,
	0x8c, 0xec, 0x27, 0x39, 0x64, 0xd9, 0x1b, 0x46, 0x4d, 0xf7, 0x74, 0x0a, 0x93, 0x30, 0xdf, 0xb2,
	0xf2, 0x06, 0x61, 0x17, 0xc0, 0xe4, 0x88, 0xc7, 0xc4, 0xcb, 0x8c, 0xf8, 0x93, 0xdc, 0x59, 0xc6,
	0x77, 0x42, 0x25, 0x6e, 0x26, 0x6c, 0x1b, 0xdd, 0x49, 0x21, 0xb4, 0xc1, 0x56, 0xfa, 0x62, 0x8b,
	0x79, 0x56, 0x18, 0xcf, 0x0f, 0x72, 0x78, 0x52, 0xf7, 0x62, 0xf9, 0x15, 0x19, 0xeb, 0xa2, 0x9d,
	0x30, 0xc1, 0x37, 0x53, 0x52, 0x78, 0x0a, 0x60, 0x92, 0x59, 0x62, 0xa2, 0x6b, 0x33, 0xb7, 0x2d,
	0x95, 0x82, 0x2a, 0xec, 0x88, 0x57, 0x62, 0x41, 0x7a, 0x3a, 0x93, 0x42, 0x1a, 0x19, 0x71, 0x2e,
	0x8a, 0x29, 0x0a, 0x73, 0x23, 0x23, 0xc9, 0x5d, 0x4a, 0xd4, 0x4a, 0x45, 0x86, 0x39, 0x21, 0x83,
	0xbf, 0x93, 0xc0, 0x9d, 0x6c, 0x64, 0x8c, 0x86, 0xec, 0x0e, 0x8b, 0xd8, 0x00, 0x63, 0x7b, 0xfe,
	0xfe, 0xa1, 0xd1, 0x61, 0x38, 0x09, 0xf7, 0x8e, 0x95, 0x3b, 0x0a, 0x6d, 0xb0, 0x99, 0xba, 0x72,
	0x63, 0xee, 0xe2, 0xdc, 0xe8, 0x48, 0xee, 0xeb, 0x72, 0xb5, 0xae, 0x55, 0x78, 0x53, 0x20, 0xbe,
	0x58, 0x2c, 0x49, 0x74, 0x49, 0xfb, 0x8e, 0x9d, 0x1d, 0x80, 0x67, 0x60, 0x9b, 0xe5, 0x02, 0xec,
	0x93, 0x33, 0x9f, 0x04, 0xfd, 0x98, 0x6c, 0x95, 0x91, 0x3d, 0xca, 0x21, 0xe3, 0xf9, 0xc3, 0xa0,
	0xbf, 0x3a, 0x37, 0x4c, 0x66, 0xb6, 0x19, 0x4e, 0x8b, 0xe1, 0xaf, 0xc0, 0x3d, 0xf2, 0x96, 0x58,
	0xa3, 0x90, 0xe0, 0x21, 0x71, 0xbb, 0xf4, 0x3a, 0xe7, 0x2b, 0x1b, 0xc4, 0x8c, 0x6b, 0x73, 0xa7,
	0x87, 0xb8, 0x75, 0x8b, 0x1b, 0xf3, 0xf5, 0x0a, 0x12, 0xd2, 0x3b, 0x64, 0xce, 0x38, 0xc4, 0x60,
	0x93, 0xa5, 0x6a, 0x91, 0x10, 0x22, 0xc6, 0x75, 0xc6, 0xb8, 0x9f, 0xc3, 0xc8, 0xf2, 0xf5, 0x6b,
	0xfb, 0xcc, 0xe6, 0xfb, 0x98, 0x8a, 0xcc, 0xaf, 0x27, 0x85, 0xf0, 0x1b, 0x70, 0xcf, 0x73, 0x71,
	0x97, 0xb0, 0xd2, 0x25, 0x08, 0xcd, 0x70, 0x14, 0x4c, 0x46, 0xce, 0x75, 0x46, 0x76, 0x98, 0x43,
	0xd6, 0x74, 0x2b, 0xcc, 0xb8, 0xcd, 0x6c, 0x27, 0x83, 0xe5, 0xb6, 0x97, 0x3f, 0x1c, 0x4f, 0x4e,
	0xd0, 0x46, 0x7c, 0xf2, 0xe5, 0x26, 0xc7, 0x11, 0x27, 0x26, 0x97, 0x11, 0x42, 0x0f, 0xdc, 0x9a,
	0xaa, 0x77, 0x62, 0x9a, 0x8d, 0xb9, 0xd3, 0x62, 0x34, 0x3a, 0x33, 0xa6, 0x64, 0x1d, 0x6a, 0x9a,
	0x70, 0xdd, 0xf0, 0x67, 0x8e, 0xc0, 0x3f, 0xb2, 0x53, 0x38, 0x5d, 0x07, 0xc6, 0xa4, 0x90, 0x91,
	0xa2, 0xdc, 0x53, 0x38, 0x55, 0x56, 0x46, 0xc9, 0x49, 0x4d, 0xc9, 0x32, 0x67, 0x31, 0x6f, 0x14,
	0xfe, 0x5e, 0x02, 0x77, 0x67, 0x57, 0x32, 0xb1, 0x37, 0x9b, 0x73, 0xef, 0x84, 0x74, 0x4d, 0x54,
	0x3e, 0x16, 0x48, 0xc7, 0x5c, 0xa8, 0x52, 0x61, 0x6a, 0x9b, 0xcf, 0xf3, 0x87, 0xe1, 0x9f, 0x25,
	0x70, 0xdf, 0x27, 0xa1, 0x6f, 0x93, 0x73, 0x5a, 0xc4, 0x4f, 0x55, 0x46, 0xb1, 0x3b, 0x5b, 0x73,
	0x17, 0x27, 0x53, 0x61, 0x95, 0x75, 0x01, 0xc8, 0xaf, 0xe1, 0x16, 0x97, 0xaa, 0x5e, 0x37, 0xb5,
	0x49, 0xbb, 0xfe, 0x05, 0x3a, 0xf0, 0xd7, 0xe0, 0x7b, 0x33, 0x0b, 0xae, 0xd8, 0xa3, 0x6d, 0xe6,
	0xd1, 0xd3, 0x1c, 0x8f, 0xa2, 0xf2, 0x4c, 0x65, 0x18, 0xfc, 0x5c, 0xb5, 0xb8, 0x2c, 0xbd, 0x45,
	0xb9, 0xa3, 0xf0, 0x2f, 0x12, 0xb8, 0x1f, 0x17, 0x6b, 0x38, 0xae, 0xd6, 0x70, 0x54, 0xae, 0xc5,
	0x7e, 0xdc, 0x60, 0x7e, 0x7c, 0x91, 0x77, 0xa7, 0x4d, 0x95, 0x79, 0xd1, 0x05, 0x4e, 0x8c, 0x68,
	0x08, 0x89, 0xa1, 0xc4, 0xb1, 0x0f, 0xac, 0x8b, 0x94, 0xe0, 0x1f, 0x24, 0x70, 0x77, 0x76, 0x19,
	0x18, 0x7b, 0x76, 0x93, 0x79, 0xf6, 0x79, 0x5e, 0x12, 0x4b, 0x57, 0x94, 0xe5, 0x4e, 0x40, 0x7c,
	0x65, 0x14, 0xf6, 0xd5, 0x14, 0x50, 0x2a, 0x86, 0x46, 0xf9, 0xc3, 0xd0, 0x04, 0x30, 0x79, 0x9b,
	0xc5, 0xe4, 0xa5, 0xf9, 0x19, 0x34, 0x7a, 0xd6, 0x95, 0x15, 0x37, 0xb4, 0x0d, 0xda, 0x4a, 0x67,
	0xd0, 0x09, 0x19, 0x1c, 0x81, 0x9b, 0x13, 0xf5, 0x2a, 0x76, 0x48, 0x40, 0x4f, 0x77, 0xe9, 0x16,
	0xe3, 0xf9, 0x51, 0x7e, 0xfe, 0x4a, 0x17, 0xb9, 0xd5, 0xba, 0xa6, 0x24, 0xdd, 0x3a, 0x87, 0xa8,
	0x2e, 0xe8, 0xdb, 0x7d, 0xc7, 0x9e, 0x1e, 0x80, 0x5f, 0x02, 0xe0, 0x11, 0x07, 0x0f, 0x4d, 0xdf,
	0x74, 0x82, 0xd2, 0xb7, 0x2b, 0xbb, 0x4b, 0x0f, 0x8b, 0x87, 0x8f, 0x2f, 0x57, 0xb8, 0x36, 0x89,
	0xd3, 0x62, 0x76, 0xc8, 0x0d, 0xfd, 0x31, 0xcd, 0x95, 0x7a, 0xc1, 0x8b, 0x64, 0xb0, 0x0b, 0xe4,
	0x18, 0x19, 0x9f, 0x9b, 0x83, 0x11, 0x09, 0x4a, 0xff, 0xe2, 0xf8, 0x4f, 0xdf, 0x0f, 0xff, 0x98,
	0x19, 0x33, 0x12, 0x7d, 0xdd, 0xcb, 0x08, 0xe1, 0x3e, 0x80, 0x94, 0x65, 0xa2, 0x38, 0xff, 0x37,
	0x2d, 0xd4, 0x0a, 0x3a, 0x75, 0x40, 0xcd, 0x14, 0xe8, 0x3f, 0x03, 0x6b, 0x0e, 0x09, 0xcd, 0xae,
	0x19, 0x9a, 0x38, 0x34, 0x7b, 0x41, 0xe9, 0x3f, 0xdc, 0xa3, 0x4f, 0x2f, 0xe7, 0x51, 0x5d, 0xd8,
	0x1a, 0x66, 0x4f, 0xf8, 0xb3, 0xea, 0xa4, 0x44, 0x3b, 0x3f, 0x06, 0xeb, 0xd9, 0x45, 0x81, 0x32,
	0x58, 0x7a, 0x43, 0xc6, 0xec, 0xb5, 0x50, 0xd0, 0x69, 0x13, 0x6e, 0x81, 0xab, 0x6c, 0x35, 0xd8,
	0x23, 0xa1, 0xa0, 0xf3, 0xce, 0xb3, 0xc5, 0x27, 0xd2, 0x4e, 0x0f, 0x6c, 0xce, 0x98, 0xf2, 0x0c,
	0x88, 0x67, 0x69, 0x88, 0xe2, 0xe1, 0xfd, 0xbc, 0xdc, 0x98, 0x06, 0x4b, 0x13, 0x3d, 0x07, 0x1b,
	0x53, 0x33, 0x79, 0x1f, 0x4f, 0xf7, 0xfe, 0x71, 0x05, 0xc0, 0xe9, 0x67, 0x0b, 0xdc, 0x05, 0x77,
	0x3a, 0x8d, 0x57, 0x8d, 0xe6, 0xeb, 0x06, 0x56, 0x9b, 0xf5, 0xba, 0xd2, 0xa8, 0x60, 0x1d, 0xfd,
	0xb4, 0x83, 0xda, 0x06, 0x36, 0x4e, 0x5a, 0x48, 0x5e, 0x80, 0x37, 0xc1, 0x66, 0x05, 0x1d, 0x6b,
	0x2a, 0xc2, 0x6a, 0xb3, 0x71, 0xa4, 0xbd, 0xc4, 0x3a, 0x6a, 0x23, 0x43, 0x96, 0xe0, 0x16, 0x90,
	0xeb, 0xcd, 0x4a, 0xa7, 0x86, 0x70, 0x45, 0x6b, 0xab, 0xcd, 0x63, 0xa4, 0x9f, 0xc8, 0x8b, 0x70,
	0x1b, 0x6c, 0x08, 0xf5, 0x8a, 0xa6, 0xbc, 0x6c, 0x34, 0xdb, 0x86, 0xa6, 0xca, 0x4b, 0x29, 0x94,
	0x57, 0xe8, 0x04, 0xeb, 0x4d, 0x43, 0x31, 0xb4, 0x66, 0x43, 0xbe, 0x92, 0xd6, 0x47, 0xad, 0x5a,
	0xf3, 0xa4, 0x8e, 0x1a, 0x86, 0x7c, 0x15, 0xae, 0x81, 0x82, 0xa2, 0x1a, 0x1d, 0xae, 0xb5, 0x0c,
	0x4b, 0x60, 0x2b, 0xeb, 0x44, 0xa7, 0x55, 0x51, 0x0c, 0x24, 0xaf, 0xc0, 0xeb, 0xa0, 0x58, 0xad,
	0x6b, 0xd4, 0x85, 0x56, 0x4d, 0x39, 0x91, 0xaf, 0xc1, 0x0d, 0xb0, 0x66, 0x34, 0x5f, 0xa1, 0x06,
	0xd6, 0xd1, 0x91, 0x8e, 0xda, 0x55, 0xb9, 0x00, 0x6f, 0x83, 0x9b, 0xe8, 0x4b, 0xa4, 0x76, 0x0c,
	0x84, 0x5b, 0xa8, 0x51, 0xd1, 0x1a, 0x91, 0x7d, 0x5b, 0x06, 0x14, 0xe0, 0xb5, 0x76, 0xa4, 0x09,
	0x60, 0xb9, 0x48, 0xb5, 0x9b, 0x0d, 0x5c, 0x41, 0x6c, 0x31, 0xda, 0x86, 0x62, 0x74, 0xda, 0x11,
	0xdd, 0x6a, 0xac, 0xcd, 0xe5, 0xf2, 0x1a, 0xf5, 0x5f, 0x47, 0xad, 0xa6, 0x6e, 0x60, 0x26, 0xef,
	0xb4, 0x95, 0x97, 0x48, 0x5e, 0xa7, 0x0e, 0x47, 0xeb, 0xa9, 0x2a, 0x0d, 0x15, 0xd5, 0x6a, 0x7c,
	0x2a, 0xd7, 0xe1, 0x0e, 0xb8, 0x71, 0xac, 0xd4, 0x34, 0x8a, 0x87, 0x8f, 0x51, 0x55, 0x53, 0x6b,
	0x08, 0xab, 0x35, 0x45, 0xab, 0xcb, 0x32, 0xdd, 0x0d, 0x1d, 0x19, 0xba, 0x86, 0x8e, 0xe9, 0x72,
	0xb0, 0xf9, 0xb6, 0x14, 0x4d, 0xa7, 0x0e, 0xab, 0xcd, 0x0a, 0x92, 0x37, 0xe0, 0x2d, 0xb0, 0xad,
	0x56, 0x95, 0xc6, 0xcb, 0x78, 0x21, 0x5a, 0x7a, 0xf3, 0x48, 0xab, 0x21, 0x19, 0x52, 0x63, 0x2e,
	0xeb, 0xe8, 0x08, 0x1b, 0xa8, 0x86, 0xea, 0xc8, 0xd0, 0x4f, 0x30, 0xaa, 0x6b, 0xed, 0x36, 0xa5,
	0xde, 0xa4, 0xd4, 0x9d, 0x36, 0xd2, 0xb1, 0xd2, 0x31, 0xaa, 0xdc, 0x5e, 0xaf, 0x73, 0xb7, 0xb6,
	0xe0, 0x3a, 0x00, 0x4a, 0xc3, 0xd0, 0xb0, 0x51, 0x45, 0x47, 0x86, 0xbc, 0x4d, 0x57, 0x81, 0xae,
	0xab, 0xd2, 0x6a, 0xd5, 0x34, 0x95, 0x29, 0xe1, 0x3a, 0x6a, 0xb3, 0xd9, 0xdd, 0x78, 0x51, 0x00,
	0x2b, 0xe2, 0x46, 0xfd, 0x62, 0xf9, 0xda, 0xbb, 0x15, 0xf9, 0xdb, 0x95, 0xbd, 0xbf, 0x5f, 0x01,
	0x6b, 0x99, 0xe8, 0x85, 0xf7, 0x00, 0x38, 0xf5, 0xbc, 0x01, 0xbf, 0x48, 0x58, 0x90, 0x5e, 0xab,
	0x2e, 0xe8, 0x05, 0x2a, 0xe3, 0x0a, 0x1f, 0x80, 0xa2, 0xed, 0x86, 0x3f, 0x7c, 0x8c, 0x93, 0x90,
	0x5d, 0xaa, 0x2e, 0xe8, 0x80, 0x09, 0xb9, 0xca, 0x87, 0x60, 0xb5, 0xeb, 0x8d, 0x4e, 0x07, 0x44,
	0xe8, 0xd0, 0xa7, 0x34, 0x2d, 0xef, 0x8b, 0x5c, 0x1a, 0xe3, 0x9c, 0x0d, 0x3c, 0x33, 0x14, 0x3a,
	0xf4, 0xfd, 0xbc, 0x48, 0x71, 0x98, 0x30, 0xc6, 0x09, 0x42, 0x56, 0x3f, 0x70, 0x1d, 0xfa, 0xec,
	0x2d, 0x50, 0x1c, 0x2e, 0xe5, 0x4a, 0x18, 0x40, 0xa1, 0x64, 0xfa, 0xbe, 0x39, 0x16, 0xaa, 0xfc,
	0xa1, 0x7a, 0x70, 0xc1, 0x81, 0x6d, 0x33, 0x43, 0x85, 0xda, 0x31, 0x30, 0x9a, 0x30, 0x82, 0x09,
	0x19, 0x3c, 0x02, 0x05, 0xc7, 0x1c, 0x0a, 0x5c, 0xfe, 0x30, 0xfd, 0xe8, 0x02, 0xdc, 0xba, 0x39,
	0x8c, 0xf0, 0xae, 0x39, 0xa2, 0x0d, 0x8f, 0xc1, 0x75, 0x8a, 0x93, 0xf6, 0x92, 0xbf, 0x3e, 0xbf,
	0x7f, 0x31, 0x5a, 0xc6, 0xc5, 0x35, 0x27, 0x2d, 0x60, 0x3b, 0x36, 0x0e, 0xa3, 0xb5, 0x2e, 0x88,
	0xcf, 0x16, 0x05, 0x2a, 0xe3, 0x0a, 0x5f, 0x81, 0x0d, 0xbe, 0x63, 0x69, 0x6a, 0x70, 0x29, 0x6a,
	0xcd, 0x0d, 0x33, 0xd4, 0xd7, 0x19, 0x50, 0x22, 0x7a, 0xb1, 0x22, 0xae, 0xae, 0xbd, 0x77, 0x12,
	0x28, 0xb6, 0x6d, 0x67, 0x18, 0x6d, 0xef, 0x77, 0x2e, 0x8e, 0xb2, 0xcb, 0xb8, 0x3c, 0xb5, 0x8c,
	0xc9, 0x54, 0x1f, 0x81, 0x52, 0x5e, 0x00, 0x25, 0x57, 0xb9, 0xb4, 0xbb, 0x14, 0x5f, 0xe5, 0x7b,
	0xfb, 0x60, 0x7b, 0xe6, 0x8a, 0x66, 0xd5, 0x97, 0x22, 0xf5, 0x77, 0x8b, 0x40, 0x9e, 0x0c, 0x25,
	0x58, 0x4b, 0xab, 0xce, 0x79, 0xa7, 0x4d, 0xd8, 0x95, 0xd9, 0x6f, 0x52, 0x38, 0x70, 0x10, 0x48,
	0x80, 0xec, 0x8c, 0x06, 0xb4, 0xd2, 0x1a, 0x0f, 0x49, 0xbc, 0x05, 0x4b, 0x73, 0xca, 0x9f, 0x29,
	0xe0, 0x3a, 0xb5, 0xa7, 0xe9, 0x28, 0x61, 0xd0, 0xd7, 0x9d, 0x8c, 0x70, 0xe7, 0x09, 0x00, 0xc9,
	0xe8, 0x7b, 0xe5, 0x68, 0x02, 0x36, 0x67, 0x10, 0xcc, 0x80, 0x78, 0x92, 0xcd, 0xd1, 0x7b, 0x39,
	0xee, 0xa7, 0x62, 0x33, 0x9d, 0x60, 0x8f, 0x93, 0x9d, 0xc9, 0x1c, 0x33, 0xf8, 0x59, 0x76, 0xb9,
	0x2f, 0x7b, 0xe2, 0xa3, 0x2d, 0xfc, 0x9b, 0x04, 0xee, 0xcc, 0xfb, 0x22, 0x00, 0x4f, 0xc1, 0xaa,
	0x78, 0x7f, 0x07, 0x96, 0x37, 0xe4, 0x27, 0x64, 0x3d, 0xf7, 0x8d, 0x36, 0x0f, 0xaa, 0xcc, 0xbb,
	0x6d, 0x0a, 0xa3, 0x17, 0x47, 0x49, 0x07, 0xde, 0x00, 0xcb, 0x8e, 0xd7, 0x1d, 0x0d, 0xa2, 0xe5,
	0x15, 0xbd, 0xbd, 0x07, 0xa0, 0x98, 0xb2, 0x81, 0x2b, 0x60, 0x49, 0x69, 0x9c, 0xc8, 0x0b, 0x34,
	0x7d, 0xb7, 0x51, 0x0d, 0xa9, 0x86, 0x76, 0x8c, 0x64, 0x69, 0xef, 0x9f, 0x12, 0xb8, 0x3d, 0xe7,
	0xd9, 0x0f, 0xfb, 0x60, 0x2d, 0x79, 0xcb, 0x04, 0x24, 0xbc, 0x60, 0x0e, 0x73, 0xa0, 0xca, 0xf1,
	0xd3, 0xa4, 0x4d, 0xd8, 0xb7, 0x20, 0x7d, 0x35, 0x4c, 0x49, 0xf6, 0x8e, 0xc0, 0x6a, 0x5a, 0x03,
	0x16, 0xc1, 0x8a, 0xa8, 0x7f, 0xe4, 0x05, 0x08, 0xc1, 0xba, 0x52, 0xab, 0xe1, 0x38, 0x8b, 0x56,
	0x64, 0x89, 0x96, 0x13, 0xb5, 0xa6, 0x48, 0x80, 0xcd, 0x46, 0xed, 0x44, 0x5e, 0xdc, 0x59, 0x2c,
	0x49, 0x87, 0x7f, 0x92, 0xc0, 0x1a, 0x7f, 0x25, 0x8a, 0xa2, 0x0a, 0xfe, 0x12, 0xdc, 0xf4, 0x67,
	0x7f, 0xa4, 0x86, 0x79, 0x5f, 0x1f, 0xe7, 0x7f, 0xd4, 0xde, 0x79, 0x70, 0xa9, 0x0a, 0x77, 0x6f,
	0xe1, 0x91, 0xf4, 0xe2, 0xb7, 0x12, 0xb8, 0x65, 0x79, 0xce, 0x6c, 0x83, 0x17, 0xab, 0xc2, 0xa2,
	0xe5, 0x7b, 0xa1, 0xd7, 0x92, 0xbe, 0xaa, 0xf5, 0xec, 0xb0, 0x3f, 0x3a, 0xa5, 0xe3, 0xc9, 0xff,
	0x5a, 0xf6, 0x4d, 0xfb, 0x80, 0xbc, 0x0d, 0x89, 0xef, 0x9a, 0x83, 0x7d, 0xf6, 0xdd, 0x3d, 0x38,
	0x08, 0x7c, 0xeb, 0xc0, 0x31, 0x6d, 0xf7, 0x80, 0xf5, 0x67, 0xff, 0x5f, 0xe6, 0xbf, 0x92, 0xf4,
	0xd7, 0xc5, 0x25, 0xa5, 0x63, 0x9c, 0x2e, 0x33, 0xad, 0x4f, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0x28, 0xbb, 0xaf, 0x1a, 0xd4, 0x1b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeviceCommandClient is the client API for DeviceCommand service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceCommandClient interface {
	RegisterCommandListener(ctx context.Context, in *RegisterCommandListenerRequest, opts ...grpc.CallOption) (DeviceCommand_RegisterCommandListenerClient, error)
}

type deviceCommandClient struct {
	cc grpc.ClientConnInterface
}

func NewDeviceCommandClient(cc grpc.ClientConnInterface) DeviceCommandClient {
	return &deviceCommandClient{cc}
}

func (c *deviceCommandClient) RegisterCommandListener(ctx context.Context, in *RegisterCommandListenerRequest, opts ...grpc.CallOption) (DeviceCommand_RegisterCommandListenerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeviceCommand_serviceDesc.Streams[0], "/autonomic.ext.command.DeviceCommand/registerCommandListener", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceCommandRegisterCommandListenerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeviceCommand_RegisterCommandListenerClient interface {
	Recv() (*CommandTrigger, error)
	grpc.ClientStream
}

type deviceCommandRegisterCommandListenerClient struct {
	grpc.ClientStream
}

func (x *deviceCommandRegisterCommandListenerClient) Recv() (*CommandTrigger, error) {
	m := new(CommandTrigger)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DeviceCommandServer is the server API for DeviceCommand service.
type DeviceCommandServer interface {
	RegisterCommandListener(*RegisterCommandListenerRequest, DeviceCommand_RegisterCommandListenerServer) error
}

// UnimplementedDeviceCommandServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceCommandServer struct {
}

func (*UnimplementedDeviceCommandServer) RegisterCommandListener(req *RegisterCommandListenerRequest, srv DeviceCommand_RegisterCommandListenerServer) error {
	return status.Errorf(codes.Unimplemented, "method RegisterCommandListener not implemented")
}

func RegisterDeviceCommandServer(s *grpc.Server, srv DeviceCommandServer) {
	s.RegisterService(&_DeviceCommand_serviceDesc, srv)
}

func _DeviceCommand_RegisterCommandListener_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RegisterCommandListenerRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceCommandServer).RegisterCommandListener(m, &deviceCommandRegisterCommandListenerServer{stream})
}

type DeviceCommand_RegisterCommandListenerServer interface {
	Send(*CommandTrigger) error
	grpc.ServerStream
}

type deviceCommandRegisterCommandListenerServer struct {
	grpc.ServerStream
}

func (x *deviceCommandRegisterCommandListenerServer) Send(m *CommandTrigger) error {
	return x.ServerStream.SendMsg(m)
}

var _DeviceCommand_serviceDesc = grpc.ServiceDesc{
	ServiceName: "autonomic.ext.command.DeviceCommand",
	HandlerType: (*DeviceCommandServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "registerCommandListener",
			Handler:       _DeviceCommand_RegisterCommandListener_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "autonomic/ext/command/command.proto",
}
