/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2017 - 2019 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 * 
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 * 
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
syntax = "proto3";

package autonomic.ext.validation;

option go_package = "xk6-fabric/proto/autonomic/ext/validation";
option java_package = "com.autonomic.ext.validation";
option java_outer_classname = "DataValidationProto";
option java_multiple_files = true;
option cc_enable_arenas = true;
option objc_class_prefix = "AUT";

import "autonomic/ext/edge/edge.proto";
import "autonomic/ext/event/event.proto";
import "autonomic/ext/telemetry/metric.proto";
import "autonomic/ext/cloud/command_request.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

// Emitted by the platform in response to out-of-spec ingested data, or an ill-behaving device.
// A DataValidationEvent should contain ALL the validation errors that can be found
// at a certain stage of processing of the data set. However, there are cases where it makes
// sense to stop processing any further validation errors after one has been found
// (e.g. UNSUPPORTED_DEVICE_PROTOCOL, DECRYPTION_FAILURE etc).
message DataValidationEvent {

  // Au service generating the event - aui:edge-processor etc.
  string source = 1;

  // descriptive information about the cause of the event.
  repeated string message = 2 [deprecated = true];  // moved inside of the error_details field (ErrorDetail message)

  // The data in response to which the event was created, for example a metric of event.
  // If the payload would be too large, a DataSummary may be included instead.
  oneof data {
    DataSummary summary = 3;
    google.protobuf.Any payload = 4;
    autonomic.ext.telemetry.Metric metric = 5;
    autonomic.ext.event.Event event = 6;
    autonomic.ext.event.TriggeredEvent triggeredEvent = 7;
    autonomic.ext.edge.PublishRequest publishRequest = 8;
    bytes encryptedPublishRequest = 9;
    MessageBundle message_bundle = 10;
    autonomic.ext.cloud.command.CommandRequest commandRequest=11;
  }

  // The type of the event.
  Type type = 20 [deprecated = true]; // moved inside of the error_details field (ErrorDetail message)

  // Action taken by the platform in response to the data.
  Action action = 21;

  // List of all the validation errors with the data.
  repeated ErrorDetail error_details = 22;

  // Information about the data when it cannot be included due to size.
  message DataSummary {
    // include uri where applicable.
    string uri = 1;
    google.protobuf.Timestamp timestamp = 2;
  }

  // The event was created in response to one of these types:
  enum Type {
    UNKNOWN_TYPE = 0;
    // The message format/structure was invalid.
    INVALID_FORMAT = 1;
    // The message did not contain a valid timestamp, or contains an out-of-scope timestamp.
    INVALID_TIMESTAMP = 2;
    // Failed to decrypt a message due to missing information/keys etc.
    DECRYPTION_FAILURE = 3;
    // The vehicle record was not found.
    VEHICLE_NOT_FOUND = 4;
    // The vehicle record was incomplete.
    VEHICLE_INFO_INCOMPLETE = 5;
    // The device record was not found.
    DEVICE_NOT_FOUND = 6;
    // The device record was incomplete.
    DEVICE_INFO_INCOMPLETE = 7;
    // The reported or registered device protocol was unsupported.
    UNSUPPORTED_DEVICE_PROTOCOL = 8;
    // The device failed to authenticate due to missing or invalid credentials.
    DEVICE_AUTHENTICATION_FAILURE = 9;
  }

  message ErrorDetail {
    // The type of the data validation error.
    Type type = 1;

    // Descriptive information about the cause of the error.
    string message = 2;
  }

  enum Action {
    UNKNOWN_ACTION = 0;
    // No action was taken by the platform, the event serves to inform the customer.
    ALERT = 1;
    // The data was dropped.
    DROP = 2;
    // The data was adjusted or normalized.
    ADJUST = 3;
  }

  message MessageBundle {
    google.protobuf.Timestamp ingestion_time = 1;
    string oem_correlation_id = 2;
    string vehicle_id = 3;
    string device_id = 4;
    bytes payload = 5;
    string device_protocol_version = 6;
    map<string, string> other_attributes = 7;
    string oem_message_name = 8;
  }
}
