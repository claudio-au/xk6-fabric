/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */

syntax = "proto3";

import "google/protobuf/descriptor.proto";
import "autonomic/ext/telemetry/well_known_signals.proto";
import "autonomic/ext/event/well_known_conditions.proto";
import "autonomic/ext/telemetry/well_known_configuration.proto";
import "autonomic/ext/telemetry/well_known_tags.proto";

package autonomic.ext.event;

option go_package = "xk6-fabric/proto/autonomic/ext/event";
option java_package = "com.autonomic.ext.event";
option java_outer_classname = "WellKnownEventsProto";
option java_multiple_files = true;

option cc_enable_arenas = true;

option objc_class_prefix = "AUT";

extend google.protobuf.EnumValueOptions {
  TriggeredEventDefinition triggeredEventDefinition = 77001;
}

message TriggeredEventDefinition {
  string description = 1;
  repeated ConditionDefinition triggerConditions = 2;
  repeated autonomic.ext.telemetry.signal.WellKnownSignal additional_signals = 3;
  repeated autonomic.ext.telemetry.WellKnownConfiguration additional_configurations = 4;
  repeated autonomic.ext.telemetry.signal.TagDefinition tagDefinition = 6;
  string implementationDetails = 7;
}

message ConditionDefinition {
  autonomic.ext.event.WellKnownEventCondition condition = 1;
  repeated autonomic.ext.telemetry.signal.WellKnownSignal required_signals = 2;
  repeated autonomic.ext.telemetry.WellKnownConfiguration required_configurations = 3;
}



enum WellKnownEvent {
  reserved 28;
  UNKNOWN_WKE_LABEL = 0;

  // Autonomic events
  // Reserved 1 - 3000
  ALARM_EVENT = 1 [(triggeredEventDefinition) = {
    description: "Indicates that the Alarm is ON or OFF."
    triggerConditions {
      condition: ALARM_ACTIVE
      required_signals: ALARM_STATUS
    }
    triggerConditions {
      condition: ALARM_INACTIVE
      required_signals: ALARM_STATUS
    }
    additional_signals: POSITION
}];
  SEAT_BELT_STATUS_WHILE_MOVING_EVENT = 2 [(triggeredEventDefinition) = {
    description: "Indicates the driver seat belt is: Buckled while the vehicle is moving. Unbuckled while the vehicle is moving. Indicates the passenger seat belt is: Buckled while the vehicle is moving. Unbuckled while the vehicle is moving."
    triggerConditions {
      condition: SEAT_BELT_BUCKLED
      required_signals: SEAT_BELT_STATUS
    }
    triggerConditions {
      condition: SEAT_BELT_UNBUCKLED
      required_signals: SEAT_BELT_STATUS
    }
    triggerConditions {
      condition: VEHICLE_MOVEMENT_STARTED
      required_signals: SPEED
    }
    additional_signals: ACCELERATOR_PEDAL_POSITION
    additional_signals: HEADING
    additional_signals: ENGINE_SPEED
    additional_signals: POSITION
    additional_signals: SEAT_OCCUPANCY_STATUS
  }];
  EXCESSIVE_IDLE_EVENT = 3 [(triggeredEventDefinition) = {
    description: "Indicates if the vehicle remains idling for duration longer than the configurable excessive idle limit."
    triggerConditions {
      condition: EXCESSIVE_IDLING_STARTED
      required_signals: ENGINE_SPEED
    }
    triggerConditions {
      condition: EXCESSIVE_IDLING_STOPPED
      required_signals: ENGINE_SPEED
    }
    additional_signals: HEADING
    additional_signals: POSITION
  }];
  EXCESSIVE_ENGINE_SPEED_EVENT = 4 [(triggeredEventDefinition) = {
    description: "Indicates if the vehicle engine RPM exceeds the configurable RPM limit for a duration exceeding the configurable duration limit."
    triggerConditions {
      condition: EXCESSIVE_ENGINE_SPEED_STARTED
      required_signals: ENGINE_SPEED
    }
    triggerConditions {
      condition: EXCESSIVE_ENGINE_SPEED_STOPPED
      required_signals: ENGINE_SPEED
    }
    additional_signals: POSITION
    additional_signals: SPEED
    additional_signals: HEADING
  }];
  EXCESSIVE_SPEED_EVENT = 5 [(triggeredEventDefinition) = {
    description: "Indicates if the vehicle speed exceeds the configurable limit for vehicle speed and for a duration exceeding the configurable time duration limit."
    triggerConditions {
      condition: EXCESSIVE_VEHICLE_SPEED_STARTED
      required_signals: SPEED
    }
    triggerConditions {
      condition: EXCESSIVE_VEHICLE_SPEED_STOPPED
      required_signals: SPEED
    }
    additional_signals: ACCELERATOR_PEDAL_POSITION
    additional_signals: HEADING
    additional_signals: ENGINE_SPEED
    additional_signals: POSITION
  }];
  GPS_3DFIX_EVENT = 6 [(triggeredEventDefinition) = {
    description: "Indicates the loss of GPS fix position."
    triggerConditions {
      condition: GPS_SIGNAL_LOST
      required_signals: POSITION
    }
  }];
  HARSH_ACCELERATION_EVENT = 7 [(triggeredEventDefinition) = {
    description: "Indicates if the vehicle’s acceleration rate exceeds the configurable limit for hard acceleration for a duration exceeding the configurable time duration limit."
    triggerConditions {
      condition: HARSH_ACCELERATION_STARTED
      required_signals: ACCELERATION
    }
    triggerConditions {
      condition: HARSH_ACCELERATION_STOPPED
      required_signals: ACCELERATION
    }
    triggerConditions {
      condition: HIGH_ACCELERATOR_PEDAL_POSITION
      required_signals: ACCELERATOR_PEDAL_POSITION
    }
    additional_signals: HEADING
    additional_signals: ENGINE_SPEED
    additional_signals: POSITION
    additional_signals: SPEED
  }];
  HARSH_BRAKING_EVENT = 8 [(triggeredEventDefinition) = {
    description: "Indicates if the vehicle’s deceleration rate exceeds the configurable limit for harsh braking for a duration exceeding the configurable time limit."
    triggerConditions {
      condition: HARSH_BRAKING_STARTED
      required_signals: ACCELERATION
    }
    triggerConditions {
      condition: HARSH_BRAKING_STOPPED
      required_signals: ACCELERATION
    }
    additional_signals: HEADING
    additional_signals: BRAKE_PEDAL_STATUS
    additional_signals: ENGINE_SPEED
    additional_signals: POSITION
    additional_signals: SPEED
  }];
  IGNITION_EVENT = 9 [(triggeredEventDefinition) = {
    description: "Indicates that ignition is ON or OFF."
    triggerConditions {
      condition: IGNITION_OFF
      required_signals: IGNITION_STATUS
    }
    triggerConditions {
      condition: IGNITION_ON
      required_signals: IGNITION_STATUS
    }
    additional_signals: HEADING
    additional_signals: POSITION
    additional_signals: ODOMETER
  }];
  IMPACT_EVENT = 10 [(triggeredEventDefinition) = {
    description: "Indicates whether crash event severity thresholds have been exceeded."
    triggerConditions {
      condition: IMPACT
      required_signals: IMPACT_STATUS
    }
    additional_signals: POSITION
    additional_signals: SEAT_BELT_STATUS
    additional_signals: SEAT_OCCUPANCY_STATUS
    additional_signals: SPEED
  }];
  LANE_DEPARTURE_EVENT = 11;
  LANE_KEEPING_AID_EVENT = 12;
  BATTERY_EVENT = 13 [(triggeredEventDefinition) = {
    description: "Indicates low battery voltage is ON or OFF."
    triggerConditions {
      condition: LOW_BATTERY_CHARGE
      required_signals: BATTERY_VOLTAGE
    }
    triggerConditions {
      condition: SUFFICIENT_BATTERY_CHARGE
      required_signals: BATTERY_VOLTAGE
    }
    additional_signals: POSITION
  }];
  TIRE_PRESSURE_EVENT = 14 [(triggeredEventDefinition) = {
    description: "Indicates low tire pressure warning is ON or OFF."
    triggerConditions {
      condition: LOW_TIRE_PRESSURE
      required_signals: TIRE_PRESSURE
    }
    triggerConditions {
      condition: LOW_TIRE_PRESSURE
      required_signals: TIRE_PRESSURE_STATUS
    }
    triggerConditions {
      condition: HIGH_TIRE_PRESSURE
      required_signals: TIRE_PRESSURE
    }
    triggerConditions {
      condition: HIGH_TIRE_PRESSURE
      required_signals: TIRE_PRESSURE_STATUS
    }
    triggerConditions {
      condition: SUFFICIENT_TIRE_PRESSURE
      required_signals: TIRE_PRESSURE
    }
    triggerConditions {
      condition: SUFFICIENT_TIRE_PRESSURE
      required_signals: TIRE_PRESSURE_STATUS
    }
    additional_signals: HEADING
    additional_signals: POSITION
    additional_signals: ODOMETER
  }];

  PURSUIT_MODE_EVENT = 15 [(triggeredEventDefinition) = {
    description: "Indicates the configured thresholds are met and the vehicle has entered police pursuit mode."
    triggerConditions {
      condition: PURSUIT_MODE_STARTED
      required_signals: ACCELERATION
    }
    triggerConditions {
      condition: INCREASED_BRAKE_TORQUE
      required_signals: BRAKE_TORQUE
    }
    additional_signals: ENGINE_SPEED
    additional_signals: POSITION
    additional_signals: SEAT_BELT_STATUS
    additional_signals: SPEED
  }];
  POWER_TAKE_OFF_EVENT = 16 [(triggeredEventDefinition) = {
    description: "Indicates that Power Take Off (PTO) mode is Active or Inactive."
    triggerConditions {
      condition: POWER_TAKE_OFF_ENGAGED
      required_signals: POWER_TAKE_OFF_STATUS
    }
    triggerConditions {
      condition: POWER_TAKE_OFF_DISENGAGED
      required_signals: POWER_TAKE_OFF_STATUS
    }
    additional_signals: POSITION
  }];
  GEAR_CHANGE_EVENT = 17 [(triggeredEventDefinition) = {
    description: "Indicates change in vehicle gear position."
    triggerConditions {
      condition: GEAR_CHANGE
      required_signals: GEAR_LEVER_POSITION
    }
    additional_signals: POSITION
  }];
  TRACTION_CONTROL_EVENT = 18 [(triggeredEventDefinition) = {
    description: "Indicates when the Traction Control through Powertrain has been activated."
    triggerConditions {
      condition: TRACTION_CONTROL_CHANGED
      required_signals: TRACTION_CONTROL_STATUS
    }
    triggerConditions {
      condition: TRACTION_CONTROL_STARTED
    }
    triggerConditions {
      condition: TRACTION_CONTROL_STOPPED
    }
    additional_signals: POSITION
    additional_signals: SPEED
  }];
  TRAILER_SWAY_EVENT = 19 [(triggeredEventDefinition) = {
    triggerConditions {
      condition: TRAILER_SWAY_CHANGED
      required_signals: TRAILER_SWAY_STATUS
    }
    additional_signals: POSITION
    additional_signals: SPEED
  }];
  OBDII_EVENT = 20 [(triggeredEventDefinition) = {
    description: "Indicates that an on-board diagnostic device was connected to/removed from the on-board diagnostics port in the vehicle"
    triggerConditions {
      condition: OBD_CONNECTED
    }
    triggerConditions {
      condition: OBD_DISCONNECTED
    }
  }];
  DEVICE_POWER_EVENT = 21 [(triggeredEventDefinition) = {
    description: "Signals to the platform that the device will subsequently change its power mode."
    triggerConditions {
      condition: PID_POWER_MODE_DEEP_SLEEP
    }
  }];
  DIAGNOSTIC_TOOL_EVENT = 22 [(triggeredEventDefinition) = {
    description: "Service tool or after market device is plugged in."
    triggerConditions {
      condition: VEHICLE_IN_SERVICE
    }
  }];
  MOTION_EVENT = 23 [(triggeredEventDefinition) = {
    description: "This Alert is issued when the vehicle speed has: Risen above a configurable vehicle speed setting for a configurable duration of time. Dropped below a configurable vehicle speed setting for a configurable duration of time."
    triggerConditions {
      condition: VEHICLE_MOVEMENT_STARTED
      required_signals: SPEED
    }
    triggerConditions {
      condition: VEHICLE_MOVEMENT_STOPPED
      required_signals: SPEED
    }
    additional_signals: POSITION
    additional_signals: HEADING
  }];
  VIN_DISCOVERY_EVENT = 24;
  TRIP_REPORT = 25 [(triggeredEventDefinition) = {
    triggerConditions {
      condition: IGNITION_OFF
      required_signals: IGNITION_STATUS
    }
    additional_signals: ODOMETER
    additional_signals: POSITION
    additional_signals: TOTAL_ENGINE_TIME
    additional_signals: TOTAL_ENGINE_TIME_IDLE
    additional_signals: TRIP_DISTANCE_ACCUMULATED
    additional_signals: TRIP_FUEL_CONSUMED
    additional_signals: TRIP_FUEL_CONSUMED_IDLE
    additional_signals: TRIP_FUEL_ECONOMY
    additional_signals: TRIP_MAXIMUM_SPEED
    additional_signals: TRIP_XEV_BATTERY_RANGE_REGENERATED
    additional_signals: TRIP_XEV_BATTERY_CHARGE_REGENERATED
    additional_signals: TRIP_XEV_BATTERY_DISTANCE_ACCUMULATED
  }];
  INDICATOR_LIGHT_EVENT = 26 ;
  DATA_REQUEST_EVENT = 27 [(triggeredEventDefinition) = {
    description: "Indicates that the vehicle has sent a request related to in-vehicle data usage"
    triggerConditions {
      condition: WIFI_USAGE_REQUEST
    }
    triggerConditions {
      condition: TRAFFIC_DATA_REQUEST
    }

  }];
  UPFITTER_EVENT = 29 [(triggeredEventDefinition) = {
    description: "Indicates a change in any of the upfitter signals."
    triggerConditions {
      condition: IGNITION_ON
      required_signals: IGNITION_STATUS
    }
    triggerConditions {
      condition: UPFITTER_DIGITAL_CHANGED
      required_signals: UPFITTER_DIGITAL_HIGH_OUTPUT_STATUS
    }
    triggerConditions {
      condition: UPFITTER_DIGITAL_CHANGED
      required_signals: UPFITTER_DIGITAL_INPUT_STATUS
    }
    triggerConditions {
      condition: UPFITTER_DIGITAL_CHANGED
      required_signals: UPFITTER_DIGITAL_LOW_OUTPUT_STATUS
    }
    additional_signals: POSITION
    additional_signals: HEADING
  }];
  DIESEL_ENGINE_SHUTDOWN_EVENT = 30 [(triggeredEventDefinition) = {
    description: ""
    triggerConditions {
      condition: IGNITION_ON
      required_signals: IGNITION_STATUS
    }
    triggerConditions {
      condition: ENGINE_STATUS_CHANGED
      required_signals: ENGINE_STATUS
    }
    triggerConditions {
      condition: ENGINE_AUTOMATIC_SHUTDOWN_STATUS_CHANGED
      required_signals: ENGINE_AUTOMATIC_SHUTDOWN_STATUS
    }
  }];
  DIESEL_EXHAUST_FILTER_EVENT = 31 [(triggeredEventDefinition) = {
    description: "Diesel Particulate Filter regeneration tell tale message."
    triggerConditions {
      condition: IGNITION_ON
      required_signals: IGNITION_STATUS
    }
    triggerConditions {
      condition: DIESEL_EXHAUST_FILTER_STATUS_CHANGED
      required_signals: DIESEL_EXHAUST_FILTER_STATUS
    }
  }];
  DIESEL_EXHAUST_FLUID_EVENT = 32 [(triggeredEventDefinition) = {
    description: "Indicates that the Diesel Exhaust Fluid (used to ensure clean emissions) is running low, or the system is potentially malfunctioning."
    triggerConditions {
      condition: IGNITION_ON
      required_signals: IGNITION_STATUS
    }
    triggerConditions {
      condition: DIESEL_EXHAUST_FLUID_LEVEL_STATUS_CHANGED
      required_signals: DIESEL_EXHAUST_FLUID_LEVEL_STATUS
    }
    triggerConditions {
      condition: DIESEL_EXHAUST_FLUID_QUALITY_STATUS_CHANGED
      required_signals: DIESEL_EXHAUST_FLUID_QUALITY_STATUS
    }
  }];
  DIESEL_EXHAUST_OVERTEMP_EVENT = 33 [(triggeredEventDefinition) = {
    description: "Indicates that the engine is shutting down due to high exhaust temperature."
    triggerConditions {
      condition: IGNITION_ON
      required_signals: IGNITION_STATUS
    }
    triggerConditions {
      condition: ENGINE_STATUS_CHANGED
      required_signals: ENGINE_STATUS
    }
    triggerConditions {
      condition: ENGINE_EXHAUST_OVERHEAT_CHANGED
      required_signals: ENGINE_EXHAUST_OVERHEAT
    }
    additional_signals: ENGINE_AUTOMATIC_SHUTDOWN_STATUS
  }];
  DIESEL_FUEL_FILTER_EVENT = 34 [(triggeredEventDefinition) = {
    description: "Indicates that the fuel pressure in the vehicle is low, and that the customer may need to check the fuel filters. </br></br> INDICATOR_LIGHT indicator value is CHECK_FUEL_FILTER."
    triggerConditions {
      condition: IGNITION_ON
      required_signals: IGNITION_STATUS
    }
    triggerConditions {
      condition: ENGINE_STATUS_CHANGED
      required_signals: ENGINE_STATUS
    }
    triggerConditions {
      condition: CHECK_FUEL_FILTER_INDICATOR_CHANGED
      required_signals: INDICATOR_LIGHT
    }
    additional_signals: INDICATOR_LIGHT
    additional_signals: ENGINE_AUTOMATIC_SHUTDOWN_STATUS
  }];
  WATER_IN_FUEL_EVENT = 35 [(triggeredEventDefinition) = {
    description: "Indicates the state of a filter in the fuel pipe that is designed to trap any water that may be mixed with the fuel."
    triggerConditions {
      condition: IGNITION_ON
      required_signals: IGNITION_STATUS
    }
    triggerConditions {
      condition: WATER_IN_FUEL_CHANGED
      required_signals: WATER_IN_FUEL_STATUS
    }
  }];
  PRIVACY_SETTINGS_EVENT = 36 [(triggeredEventDefinition) = {
    description: "Indicates that the driver has updated his privacy preferences and may have chosen to opt out / opt in to sharing detailed telemetry with the TMC."
    triggerConditions {
      condition: PRIVACY_SETTINGS_CHANGED
    }
    triggerConditions {
      condition: PRIVACY_SETTINGS_REQUEST
    }
    triggerConditions {
      condition: PRIVACY_SETTINGS_SYNC_CHANGED
    }
    additional_signals: ANONYMITY_STATUS
  }];
  UNAUTHORIZED_ACCESS_EVENT = 37 [(triggeredEventDefinition) = {
    triggerConditions {
      condition: UNAUTHORIZED_ACCESS_DETECTED
      required_signals: ALARM_STATUS
    }
    additional_signals: DOOR_STATUS
    additional_signals: DOOR_LOCK_STATUS
    additional_signals: HEADING
    additional_signals: POSITION
    additional_signals: HOOD_STATUS
  }];
  INCONSISTENT_VEHICLE_LOCATION_EVENT = 38 [(triggeredEventDefinition) = {
    description: "Indicates when the vehicle is started in a location different from where it was stopped."
    triggerConditions {
      condition: INCONSISTENT_VEHICLE_LOCATION_DETECTED
    }
    additional_signals: HEADING
    additional_signals: POSITION
  }];
  ACCELEROMETER_EVENT = 39 [(triggeredEventDefinition) = {
    description: "The accelerometer event can be triggered by ANTI_THEFT_VERTICAL_INCLINATION and ANTI_THEFT_HORIZONTAL_DISPLACEMENT."
    triggerConditions {
      condition: ANTI_THEFT_VERTICAL_INCLINATION
    }
    triggerConditions {
      condition: ANTI_THEFT_HORIZONTAL_DISPLACEMENT
    }
    additional_signals: POSITION
    additional_signals: HEADING
  }];
  BACKUP_BATTERY_ENGAGED_EVENT = 40 [(triggeredEventDefinition) = {
    description: "Indicates that the vehicle’s main automotive battery has run out, and is being powered by the device’s back up automotive battery (not to be confused with an EV battery that powers the whole vehicle)."
    triggerConditions {
      condition: ANTI_THEFT_BACKUP_BATTERY_ENGAGED
    }
    additional_signals: BATTERY_STATUS
    additional_signals: HEADING
    additional_signals: POSITION
    additional_signals: BATTERY_POWER_SOURCE
  }];
  // This is not the desired method of representing a device being deauthorized
  // (instead use a combination of AUTHORIZATION_STATUS_CHANGE_EVENT and the DEAUTHORIZED condition)
  // However, this is still in use by devices and should not be deleted
  DEAUTHORIZATION_EVENT = 41 [deprecated = true, (triggeredEventDefinition) = {
    description: "Deprecated in favor of AUTHORIZATION_STATUS_CHANGE_EVENT"
    triggerConditions {
      condition: DEAUTHORIZATION_REQUESTED
    }
  }];
  CONFIGURATION_RESET_EVENT = 42 [(triggeredEventDefinition) = {
    description: "Indicates that the driver has (or attempted to) reset his/her personal vehicle settings."
    triggerConditions {
      condition: FACTORY_RESET_APPLIED
    }
    triggerConditions {
      condition: FACTORY_RESET_ATTEMPTED
    }
    triggerConditions {
      condition: SELECTIVE_RESET_APPLIED
    }
    triggerConditions {
      condition: SELECTIVE_RESET_ATTEMPTED
    }
  }];
  FORWARD_COLLISION_WARNING_EVENT = 43 [(triggeredEventDefinition) = {
    description: "Indicates that the forward collision warning has been triggered"
    triggerConditions {
      condition: FORWARD_COLLISION_WARNING_TRIGGERED
    }
  }];
  HMI_APPLICATION_MESSAGE_EVENT = 44 [(triggeredEventDefinition) = {
    description: "An application on the vehicle HMI has received (or responded) to a request from the cloud that targets an HMI application"
    triggerConditions {
      condition: HMI_APPLICATION_REQUEST
    }
    triggerConditions {
      condition: HMI_APPLICATION_RESPONSE
    }
  }];
  CONFIGURATION_UPDATE_EVENT = 45 [(triggeredEventDefinition) = {
    description: "Indicates whether configuration update was successful or failed."
    triggerConditions {
      condition: MULTI_MODULE_BINARY_UPDATE_SUCCEEDED
    }
    triggerConditions {
      condition: MULTI_MODULE_BINARY_UPDATE_FAILED
    }
    triggerConditions {
      condition: TELEMETRY_COLLECTION_CONFIGURATION_UPDATE_FAILED
    }
  }];
  DIAGNOSTIC_EVENT = 46 [(triggeredEventDefinition) = {
    description: "Vehicle has processed a diagnostic request"
    triggerConditions {
      condition: DIAGNOSTIC_REPORT_SUCCEEDED
    }
    triggerConditions {
      condition: DIAGNOSTIC_REPORT_FAILED
    }
    triggerConditions {
      condition: DIAGNOSTIC_REPORT_EXPIRED
    }
  }];
  AUTHORIZATION_STATUS_CHANGE_EVENT = 47 [(triggeredEventDefinition) = {
    description: "Indicates that the authorization status has changed. This status is utilized to determine whether the vehicle owner has access to various data provided by the TMC"
    triggerConditions {
      condition: AUTHORIZED
    }
    triggerConditions {
      condition: DEAUTHORIZED
    }
  }];
  TORQUE_SOURCE_DELIVERY_EVENT = 48 [(triggeredEventDefinition) = {
    triggerConditions {
      condition: TORQUE_SOURCE_DELIVERY_READY
    }
    triggerConditions {
      condition: TORQUE_SOURCE_DELIVERY_NOT_READY
    }
    additional_signals: WHEEL_TORQUE_STATUS
    additional_signals: IGNITION_STATUS
  }];
  VEHICLE_LIFE_CYCLE_MODE_EVENT = 49 [(triggeredEventDefinition) = {
    description: "Indicates life cycle mode of a vehicle has changed"
    triggerConditions {
      condition: VEHICLE_LIFE_CYCLE_MODE_CHANGED
      required_signals: VEHICLE_LIFE_CYCLE_MODE
    }
  }];
  DOOR_EVENT = 50 [(triggeredEventDefinition) = {
    description: "Indicates that the door's status, the door's presence status, or the lock status has changed"
    triggerConditions {
      condition: DOOR_STATUS_CHANGED
      required_signals: DOOR_STATUS
    }
    triggerConditions {
      condition: DOOR_PRESENCE_STATUS_CHANGED
      required_signals: DOOR_PRESENCE_STATUS
    }
    triggerConditions {
      condition: DOOR_LOCK_STATUS_CHANGED
      required_signals: DOOR_LOCK_STATUS
    }
    additional_signals: IGNITION_STATUS
    additional_signals: HOOD_STATUS
    additional_signals: WINDOW_STATUS
  }];
  REMOTE_START_EVENT = 51  [(triggeredEventDefinition) = {
    description: "Indicates that the operating status of the remote start device has changed. This event signifies that either remote start has begun and is waiting for the user to key-in, or that it has ended due to key-in or time-out."
    triggerConditions {
      condition: REMOTE_START_BEGAN
      required_signals: REMOTE_START_DEVICE_STATUS
    }
    triggerConditions {
      condition: REMOTE_START_ENDED
      required_signals: REMOTE_START_DEVICE_STATUS
    }
    additional_signals: WHEEL_TORQUE_STATUS
    additional_signals: REMOTE_START_COUNTDOWN_TIMER
    tagDefinition {
      name: REMOTE_START_FAILURE_REASON
      value: "REMOTE_START_FAILURE_REASON_VALUE"
    }}];
  TELEMETRY_COLLECTION_EVENT = 52 [(triggeredEventDefinition) = {
    description: "Indicates the telemetry collection status"
    triggerConditions {
      condition: TELEMETRY_COLLECTION_DEVICE_ERROR
    }
  }];
  AUTOMATIC_SOFTWARE_UPDATE_USER_SETTINGS_EVENT = 53 [(triggeredEventDefinition) = {
    description: "Indicates a user has changed settings for an automatic software update"
    triggerConditions {
      condition: AUTOMATIC_SOFTWARE_UPDATE_SCHEDULE_SETTINGS_CHANGED
      required_signals: CONFIGURATION
      required_configurations: AUTOMATIC_SOFTWARE_UPDATE_SCHEDULE_SETTING
    }
    triggerConditions {
      condition: AUTOMATIC_SOFTWARE_UPDATE_SYSTEM_SETTINGS_CHANGED
    }
    additional_signals: CONFIGURATION
    additional_configurations: AUTOMATIC_SOFTWARE_UPDATE_OPT_IN_SETTING
    additional_configurations: AUTOMATIC_SOFTWARE_UPDATE_NOTIFICATION_OPT_IN_SETTING
  }];
  PANIC_ALARM_EVENT = 54  [(triggeredEventDefinition) = {
    description: "Indicates that panic alarm is ON or OFF."
    triggerConditions {
      condition: PANIC_ALARM_OFF
      required_signals: PANIC_ALARM_STATUS
    }
    triggerConditions {
      condition: PANIC_ALARM_ON
      required_signals: PANIC_ALARM_STATUS
    }
  }];
  XEV_BATTERY_PERFORMANCE_EVENT = 55  [(triggeredEventDefinition) = {
    description: "Indicates that the xEV battery performance has crossed a configured threshold."
    triggerConditions {
      condition: REDUCED_PERFORMANCE_DETECTED
    }
    triggerConditions {
      condition: REDUCED_PERFORMANCE_CLEARED
    }
    additional_signals: XEV_BATTERY_PERFORMANCE_STATUS
  }];
  XEV_PLUG_CHARGER_STATUS_EVENT = 56 [(triggeredEventDefinition) = {
    description: "Indicates that the plug charger status has connected or disconnected."
    triggerConditions {
      condition: XEV_PLUG_CHARGER_STATUS_CHANGED
      required_signals: XEV_PLUG_CHARGER_STATUS
      required_signals: XEV_BATTERY_STATE_OF_CHARGE
      required_signals: XEV_BATTERY_RANGE
    }
    additional_signals: POSITION
  }];
  HARSH_CORNERING_EVENT = 57 [(triggeredEventDefinition) = {
    description: "Indicates if the vehicle’s lateral acceleration rate exceeds the configurable limit for harsh cornering for a duration exceeding the configurable time duration limit."
    triggerConditions {
      condition: HARSH_CORNERING_STARTED
      required_signals: ACCELERATION
      required_signals: SPEED
    }
    triggerConditions {
      condition: HARSH_CORNERING_STOPPED
      required_signals: ACCELERATION
      required_signals: SPEED
    }
    additional_signals: HARSH_CORNERING_MAXIMUM_ACCELERATION
    additional_signals: ENGINE_SPEED
    additional_signals: POSITION
    additional_signals: HEADING
  }];
  XEV_BATTERY_CHARGE_EVENT = 58 [(triggeredEventDefinition) = {
    description: "Indicates that battery charging status has changed."
    triggerConditions {
      condition: XEV_BATTERY_CHARGE_DISPLAY_STATUS_CHANGED
      required_signals: XEV_BATTERY_CHARGE_DISPLAY_STATUS
    }
    triggerConditions {
      condition: XEV_BATTERY_FULLY_CHARGED
    }
    triggerConditions {
      condition: XEV_BATTERY_TARGET_STATE_OF_CHARGE_REACHED
    }
    triggerConditions {
      condition: XEV_BATTERY_TARGET_RANGE_REACHED
    }
    triggerConditions {
      condition: CABIN_CONDITIONING_COMPLETED
    }
    triggerConditions {
      condition: XEV_BATTERY_SCHEDULED_CHARGE_FAILED_TO_START
    }
    triggerConditions {
      condition: XEV_BATTERY_CHARGE_SYSTEM_FAILURE_DETECTED
    }
    triggerConditions {
      condition: XEV_BATTERY_CHARGING_DETECTED
    }
    additional_signals: XEV_CHARGE_STATION_POWER_TYPE
    additional_signals: XEV_BATTERY_STATE_OF_CHARGE
    additional_signals: XEV_BATTERY_RANGE
    additional_signals: XEV_BATTERY_CHARGE_DISPLAY_STATUS
    additional_signals: XEV_BATTERY_CHARGER_CURRENT_OUTPUT
    additional_signals: XEV_BATTERY_CHARGER_VOLTAGE_OUTPUT
    additional_signals: XEV_EVSE_BATTERY_DC_CURRENT_OUTPUT
    additional_signals: XEV_EVSE_BATTERY_DC_VOLTAGE_OUTPUT
    additional_signals: POSITION
  }];
  CLOUD_DRIVEN_CONFIGURATION_RESET_EVENT = 59 [deprecated = true, (triggeredEventDefinition) = {
    description: "Indicates whether a cloud-driven configuration reset (for example, a reset through an external service) was successful or failed."
      triggerConditions {
      condition: FACTORY_RESET_SUCCEEDED
    }
      triggerConditions {
      condition: FACTORY_RESET_FAILED
    }
      triggerConditions {
      condition: SELECTIVE_RESET_SUCCEEDED
    }
      triggerConditions {
      condition: SELECTIVE_RESET_FAILED
    }
  }];
  XEV_BATTERY_CHARGE_TRANSFER_EVENT = 60 [(triggeredEventDefinition) = {
    description: "Indicates that the xEV battery lost state of charge due to an energy transfer to the 12V battery."
    triggerConditions {
      condition: XEV_BATTERY_CHARGE_TRANSFER_DETECTED
    }
    additional_signals: XEV_BATTERY_CHARGE_TRANSFER_REASON
  }];
  XEV_DEPARTURE_SCHEDULES_SETTING_EVENT = 61 [(triggeredEventDefinition) = {
    description: "Indicates xEV departures schedules have changed in-vehicle or updated via the cloud."
    implementationDetails: "Please note that breaking changes were made to this WKE with Protobuf Definition 1.27.64"
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_CHANGED
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_UPDATE_SUCCEEDED
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_UPDATE_FAILED
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_ON
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_ON_UPDATE_SUCCEEDED
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_ON_UPDATE_FAILED
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_OFF
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_OFF_UPDATE_SUCCEEDED
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
    triggerConditions {
      condition: DEPARTURE_SCHEDULES_SETTING_OFF_UPDATE_FAILED
      required_signals: CONFIGURATION
      required_configurations: XEV_DEPARTURE_SCHEDULES_SETTING
    }
  }];
  FIRMWARE_UPGRADE_EVENT = 62 [(triggeredEventDefinition) = {
    description: "Indicates the status change of a firmware upgrade."
    triggerConditions {
      condition: FIRMWARE_UPGRADE_IN_PROGRESS
    }
    triggerConditions {
      condition: FIRMWARE_UPGRADE_SUCCEEDED
    }
    triggerConditions {
      condition: FIRMWARE_UPGRADE_FAILED
    }
  }];
  ABS_EVENT = 63 [(triggeredEventDefinition) = {
    description: "Indicates that the vehicle's ABS is ON or OFF."
    triggerConditions {
      condition: ABS_ON
      required_signals: ABS_STATUS
    }
    triggerConditions {
      condition: ABS_OFF
      required_signals: ABS_STATUS
    }
    additional_signals: POSITION
    additional_signals: HEADING
    additional_signals: SPEED
    additional_signals: ACCELERATION
  }];
  ELECTRONIC_STABILITY_CONTROL_EVENT = 64 [(triggeredEventDefinition) = {
    description: "Indicates that the vehicle's electronic stability control is ON or OFF."
    triggerConditions {
      condition: ELECTRONIC_STABILITY_CONTROL_ON
      required_signals: ELECTRONIC_STABILITY_CONTROL_STATUS
    }
    triggerConditions {
      condition: ELECTRONIC_STABILITY_CONTROL_OFF
      required_signals: ELECTRONIC_STABILITY_CONTROL_STATUS
    }
    additional_signals: POSITION
    additional_signals: HEADING
    additional_signals: SPEED
    additional_signals: ACCELERATION
  }];
  VIDEO_STREAM_STATUS_EVENT = 65 [(triggeredEventDefinition) = {
    description: "Indicates change of video stream status from vehicle."
    triggerConditions {
      condition: VIDEO_STREAM_STARTED
    }
    triggerConditions {
      condition: VIDEO_STREAM_IN_PROGRESS
    }
    triggerConditions {
      condition: VIDEO_STREAM_STOPPED
    }
    triggerConditions {
      condition: VIDEO_STREAM_IDLE
    }
  }];
  STREAM_SESSION_STATUS_EVENT = 66 [(triggeredEventDefinition) = {
    description: "Indicates change of stream session status (of videos) from vehicle."
    triggerConditions {
      condition: STREAM_SESSION_CREATED
    }
    triggerConditions {
      condition: STREAM_SESSION_TERMINATED
  }}];
  CAMERA_STATUS_EVENT = 67 [(triggeredEventDefinition) = {
    description: "Indicates status change of cameras on vehicle."
    triggerConditions {
      condition: CAMERA_STATUS_CHANGED
    }}];
  TRAILER_LIGHT_CHECK_EVENT = 68 [(triggeredEventDefinition) = {
    description: "Indicates that the trailer light check status has changed."
    triggerConditions {
      condition: TRAILER_LIGHT_CHECK_IN_PROGRESS
      required_signals: TRAILER_LIGHT_CHECK_STATUS
    }
    triggerConditions {
      condition: TRAILER_LIGHT_CHECK_STOPPED
      required_signals: TRAILER_LIGHT_CHECK_STATUS
    }
    triggerConditions {
      condition: TRAILER_LIGHT_CHECK_COMPLETED
      required_signals: TRAILER_LIGHT_CHECK_STATUS
    }}];
  FLEET_VEHICLE_INHIBITION_EVENT = 69 [(triggeredEventDefinition) = {
    description: "Indicates change in vehicle inhibition status. Used for fleet management purposes."
    triggerConditions {
      condition: VEHICLE_INHIBITION_APPLIED
    }
    triggerConditions {
      condition: VEHICLE_INHIBITION_CHANGE_FAILED
    }
    triggerConditions {
      condition: VEHICLE_INHIBITION_REMOVED
    }
    triggerConditions {
      condition: VEHICLE_INHIBITION_SCHEDULED_CHANGE_FAILED
    }
    tagDefinition {
       name : FLEET_VEHICLE_INHIBITION_TYPE
       value : "FLEET_VEHICLE_INHIBITION_TYPE_VALUE"
    }}];
  ANTI_THEFT_VEHICLE_INHIBITION_EVENT = 70 [(triggeredEventDefinition) = {
    description: "Indicates change in vehicle inhibition status. Used for anti-theft purposes."
    triggerConditions {
      condition: VEHICLE_INHIBITION_APPLIED
    }
    triggerConditions {
      condition: VEHICLE_INHIBITION_CHANGE_FAILED
    }
    triggerConditions {
      condition: VEHICLE_INHIBITION_REMOVED
    }
    tagDefinition {
       name : ANTI_THEFT_VEHICLE_INHIBITION_TYPE
       value : "ANTI_THEFT_VEHICLE_INHIBITION_TYPE_VALUE"
    }}];

// OEM specific events
  // 3001 -
}
