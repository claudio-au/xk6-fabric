/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/event/well_known_states.proto

package event

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Those well-known fsm_name field values in StateTransition events
type WellKnownFiniteStateMachine int32

const (
	WellKnownFiniteStateMachine_UNKNOWN_FSM                                    WellKnownFiniteStateMachine = 0
	WellKnownFiniteStateMachine_DEPLOYMENT                                     WellKnownFiniteStateMachine = 1
	WellKnownFiniteStateMachine_VIN_DISCOVERY                                  WellKnownFiniteStateMachine = 2
	WellKnownFiniteStateMachine_DEVICE_WAKEUP                                  WellKnownFiniteStateMachine = 3
	WellKnownFiniteStateMachine_MODULE_DISCOVERY                               WellKnownFiniteStateMachine = 4
	WellKnownFiniteStateMachine_DEVICE_CONFIG_RESET                            WellKnownFiniteStateMachine = 5
	WellKnownFiniteStateMachine_DEVICE_DIAGNOSTIC                              WellKnownFiniteStateMachine = 6
	WellKnownFiniteStateMachine_KEY_ROTATION                                   WellKnownFiniteStateMachine = 7
	WellKnownFiniteStateMachine_DEVICE_CONNECTIVITY                            WellKnownFiniteStateMachine = 8
	WellKnownFiniteStateMachine_CONFIGURATION_UPDATE                           WellKnownFiniteStateMachine = 13
	WellKnownFiniteStateMachine_HMI_DISPLAY                                    WellKnownFiniteStateMachine = 14
	WellKnownFiniteStateMachine_TOKEN_REFRESH                                  WellKnownFiniteStateMachine = 15
	WellKnownFiniteStateMachine_EXECUTE_PENDING_UPDATES                        WellKnownFiniteStateMachine = 16
	WellKnownFiniteStateMachine_WIFI_CONFIG                                    WellKnownFiniteStateMachine = 17
	WellKnownFiniteStateMachine_ON_DEMAND_STATUS_UPDATE                        WellKnownFiniteStateMachine = 18
	WellKnownFiniteStateMachine_WIFI_STATUS                                    WellKnownFiniteStateMachine = 19
	WellKnownFiniteStateMachine_REPORT_WIFI_USAGE                              WellKnownFiniteStateMachine = 20
	WellKnownFiniteStateMachine_COMMAND_CANCELLATION                           WellKnownFiniteStateMachine = 21
	WellKnownFiniteStateMachine_VEHICLE_CLAIM_VALIDATION                       WellKnownFiniteStateMachine = 22
	WellKnownFiniteStateMachine_RETRIEVE_DEVICE_PAIRING_CODE                   WellKnownFiniteStateMachine = 23
	WellKnownFiniteStateMachine_CHANGE_CONFIG_PROFILE                          WellKnownFiniteStateMachine = 24
	WellKnownFiniteStateMachine_CONFIGURE_TELEMETRY_EMISSION                   WellKnownFiniteStateMachine = 25
	WellKnownFiniteStateMachine_USER_AUTH_CONFIRMATION                         WellKnownFiniteStateMachine = 26
	WellKnownFiniteStateMachine_ANTI_THEFT                                     WellKnownFiniteStateMachine = 27
	WellKnownFiniteStateMachine_BOOTSTRAP                                      WellKnownFiniteStateMachine = 28
	WellKnownFiniteStateMachine_BINDING_ASSERTION                              WellKnownFiniteStateMachine = 29
	WellKnownFiniteStateMachine_HMI_APPLICATION_MESSAGE                        WellKnownFiniteStateMachine = 30
	WellKnownFiniteStateMachine_COMMAND_PRECLUSION_STATE                       WellKnownFiniteStateMachine = 31
	WellKnownFiniteStateMachine_FIRMWARE_UPGRADE_COMMAND_PRECLUSION_STATE      WellKnownFiniteStateMachine = 32
	WellKnownFiniteStateMachine_DEEP_SLEEP_COMMAND_PRECLUSION_STATE            WellKnownFiniteStateMachine = 33
	WellKnownFiniteStateMachine_CARRIER_REGISTRATION_PRECLUSION_STATE          WellKnownFiniteStateMachine = 34
	WellKnownFiniteStateMachine_TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_STATE WellKnownFiniteStateMachine = 35
	WellKnownFiniteStateMachine_ACTUATION                                      WellKnownFiniteStateMachine = 42
	// Callers should begin leveraging the generic actuation FSM type.
	WellKnownFiniteStateMachine_ACTUATION_LOCK                              WellKnownFiniteStateMachine = 9  // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_UNLOCK                            WellKnownFiniteStateMachine = 10 // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_REMOTE_START                      WellKnownFiniteStateMachine = 11 // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_CANCEL_REMOTE_START               WellKnownFiniteStateMachine = 12 // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_START_TELEMETRY_COLLECTION_STATE  WellKnownFiniteStateMachine = 36 // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_CANCEL_TELEMETRY_COLLECTION_STATE WellKnownFiniteStateMachine = 37 // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_START_VEHICLE_CUE                 WellKnownFiniteStateMachine = 38 // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_CANCEL_VEHICLE_CUE                WellKnownFiniteStateMachine = 39 // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_START_PANIC_CUE                   WellKnownFiniteStateMachine = 40 // Deprecated: Do not use.
	WellKnownFiniteStateMachine_ACTUATION_CANCEL_PANIC_CUE                  WellKnownFiniteStateMachine = 41 // Deprecated: Do not use.
)

var WellKnownFiniteStateMachine_name = map[int32]string{
	0:  "UNKNOWN_FSM",
	1:  "DEPLOYMENT",
	2:  "VIN_DISCOVERY",
	3:  "DEVICE_WAKEUP",
	4:  "MODULE_DISCOVERY",
	5:  "DEVICE_CONFIG_RESET",
	6:  "DEVICE_DIAGNOSTIC",
	7:  "KEY_ROTATION",
	8:  "DEVICE_CONNECTIVITY",
	13: "CONFIGURATION_UPDATE",
	14: "HMI_DISPLAY",
	15: "TOKEN_REFRESH",
	16: "EXECUTE_PENDING_UPDATES",
	17: "WIFI_CONFIG",
	18: "ON_DEMAND_STATUS_UPDATE",
	19: "WIFI_STATUS",
	20: "REPORT_WIFI_USAGE",
	21: "COMMAND_CANCELLATION",
	22: "VEHICLE_CLAIM_VALIDATION",
	23: "RETRIEVE_DEVICE_PAIRING_CODE",
	24: "CHANGE_CONFIG_PROFILE",
	25: "CONFIGURE_TELEMETRY_EMISSION",
	26: "USER_AUTH_CONFIRMATION",
	27: "ANTI_THEFT",
	28: "BOOTSTRAP",
	29: "BINDING_ASSERTION",
	30: "HMI_APPLICATION_MESSAGE",
	31: "COMMAND_PRECLUSION_STATE",
	32: "FIRMWARE_UPGRADE_COMMAND_PRECLUSION_STATE",
	33: "DEEP_SLEEP_COMMAND_PRECLUSION_STATE",
	34: "CARRIER_REGISTRATION_PRECLUSION_STATE",
	35: "TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_STATE",
	42: "ACTUATION",
	9:  "ACTUATION_LOCK",
	10: "ACTUATION_UNLOCK",
	11: "ACTUATION_REMOTE_START",
	12: "ACTUATION_CANCEL_REMOTE_START",
	36: "ACTUATION_START_TELEMETRY_COLLECTION_STATE",
	37: "ACTUATION_CANCEL_TELEMETRY_COLLECTION_STATE",
	38: "ACTUATION_START_VEHICLE_CUE",
	39: "ACTUATION_CANCEL_VEHICLE_CUE",
	40: "ACTUATION_START_PANIC_CUE",
	41: "ACTUATION_CANCEL_PANIC_CUE",
}

var WellKnownFiniteStateMachine_value = map[string]int32{
	"UNKNOWN_FSM":                                    0,
	"DEPLOYMENT":                                     1,
	"VIN_DISCOVERY":                                  2,
	"DEVICE_WAKEUP":                                  3,
	"MODULE_DISCOVERY":                               4,
	"DEVICE_CONFIG_RESET":                            5,
	"DEVICE_DIAGNOSTIC":                              6,
	"KEY_ROTATION":                                   7,
	"DEVICE_CONNECTIVITY":                            8,
	"CONFIGURATION_UPDATE":                           13,
	"HMI_DISPLAY":                                    14,
	"TOKEN_REFRESH":                                  15,
	"EXECUTE_PENDING_UPDATES":                        16,
	"WIFI_CONFIG":                                    17,
	"ON_DEMAND_STATUS_UPDATE":                        18,
	"WIFI_STATUS":                                    19,
	"REPORT_WIFI_USAGE":                              20,
	"COMMAND_CANCELLATION":                           21,
	"VEHICLE_CLAIM_VALIDATION":                       22,
	"RETRIEVE_DEVICE_PAIRING_CODE":                   23,
	"CHANGE_CONFIG_PROFILE":                          24,
	"CONFIGURE_TELEMETRY_EMISSION":                   25,
	"USER_AUTH_CONFIRMATION":                         26,
	"ANTI_THEFT":                                     27,
	"BOOTSTRAP":                                      28,
	"BINDING_ASSERTION":                              29,
	"HMI_APPLICATION_MESSAGE":                        30,
	"COMMAND_PRECLUSION_STATE":                       31,
	"FIRMWARE_UPGRADE_COMMAND_PRECLUSION_STATE":      32,
	"DEEP_SLEEP_COMMAND_PRECLUSION_STATE":            33,
	"CARRIER_REGISTRATION_PRECLUSION_STATE":          34,
	"TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_STATE": 35,
	"ACTUATION":                                      42,
	"ACTUATION_LOCK":                                 9,
	"ACTUATION_UNLOCK":                               10,
	"ACTUATION_REMOTE_START":                         11,
	"ACTUATION_CANCEL_REMOTE_START":                  12,
	"ACTUATION_START_TELEMETRY_COLLECTION_STATE":     36,
	"ACTUATION_CANCEL_TELEMETRY_COLLECTION_STATE":    37,
	"ACTUATION_START_VEHICLE_CUE":                    38,
	"ACTUATION_CANCEL_VEHICLE_CUE":                   39,
	"ACTUATION_START_PANIC_CUE":                      40,
	"ACTUATION_CANCEL_PANIC_CUE":                     41,
}

func (x WellKnownFiniteStateMachine) String() string {
	return proto.EnumName(WellKnownFiniteStateMachine_name, int32(x))
}

func (WellKnownFiniteStateMachine) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c8d8812b064ef715, []int{0}
}

// DEPRECATED: Those well-known from_state and to_state fields in StateTransition events
type WellKnownDeploymentState int32

const (
	WellKnownDeploymentState_UNKNOWN_DEPLOYMENT_STATE WellKnownDeploymentState = 0
	// Deployment request was received by cloud through API
	// Emitted by: cloud
	WellKnownDeploymentState_DEPLOYMENT_REQUESTED WellKnownDeploymentState = 1
	// Request was queued in the cloud, waiting for device
	// to connect.
	// Emitted by: cloud
	// Triggered by: DEPLOYMENT_QUEUED_FOR_DELIVERY
	WellKnownDeploymentState_DEPLOYMENT_DELIVERY_QUEUED WellKnownDeploymentState = 2
	// Cloud attempted delivery of request to device
	// Emitted by: cloud
	// Triggered by: DEVICE_CONNECTED_TO_CLOUD
	WellKnownDeploymentState_DEPLOYMENT_DELIVERY_IN_PROGRESS WellKnownDeploymentState = 3
	// Delivery of request attempt failed due to device disconnect
	// Emitted by: cloud
	// Triggered by: DEPLOYMENT_DELIVERY_FAILED
	WellKnownDeploymentState_DEPLOYMENT_DELIVERY_FAILURE WellKnownDeploymentState = 4
	// Cancellation removes the request from the list of
	// in-progress commands in the cloud, but does not
	// cancel the operation on the device. Emitted by cloud.
	// Triggered by: DEPLOYMENT_CANCELLATION_REQUESTED
	WellKnownDeploymentState_DEPLOYMENT_CANCELLATION_IN_PROGRESS WellKnownDeploymentState = 5
	// Command was successfully removed from set of in-progress
	// commands from the cloud. Emitted by cloud.
	// Triggered by: DEPLOYMENT_CANCELLATION_REQUEST_FULFILLED
	WellKnownDeploymentState_DEPLOYMENT_CANCELLED WellKnownDeploymentState = 6
	// Delivery attempt was not acknowledged by device
	// Emitted by: cloud
	// Triggered by: DEPLOYMENT_DELIVERY_TIMEOUT_EXCEEDED
	WellKnownDeploymentState_DEPLOYMENT_DELIVERY_TIMED_OUT WellKnownDeploymentState = 7
	// Command expired before reaching a terminal state.
	// This event can be emitted by the device or the cloud.
	// In either case, it will cause the command to be removed
	// from the set of in-progress commands on the cloud.
	// However the cloud does not send this event to the device.
	// This state is terminal.
	// Emitted by: cloud or device
	// Triggered by: DEPLOYMENT_EXPIRATION_EXCEEDED
	WellKnownDeploymentState_DEPLOYMENT_EXPIRED WellKnownDeploymentState = 30
	// Request is acknowledged by device, queued, and the device may begin
	// downloading artifacts when it is ready to begin the deployment
	// process.
	// Emitted by: device
	// Triggered by: DEPLOYMENT_QUEUED_ON_DEVICE
	WellKnownDeploymentState_ARTIFACT_RETRIEVAL_QUEUED WellKnownDeploymentState = 60
	// Device has begun actively downloading artifacts from cloud
	// Emitted by: device
	// Triggered by: ARTIFACT_RETRIEVAL_STARTED
	WellKnownDeploymentState_ARTIFACT_RETRIEVAL_IN_PROGRESS WellKnownDeploymentState = 61
	// Device encountered an error downlaoding artifacts. It may either re-try at
	// its discretion or transition into a terminal failure.
	// Emitted by: device
	// Triggered by:  ARTIFACT_RETRIEVAL_FAILED
	WellKnownDeploymentState_ARTIFACT_RETRIEVAL_FAILURE WellKnownDeploymentState = 62
	// Artifact retrieval is successful, and the device has queued installation
	// to begin at its discretion.
	// Emitted by: device
	// Triggered by: ARTIFACT_RETRIVAL_SUCCEDED
	WellKnownDeploymentState_INSTALLATION_QUEUED WellKnownDeploymentState = 63
	// Device has begin installation of artifacts
	// Emitted by: device
	// Triggered by: INSTALLER_STARTED_ON_DEVICE
	WellKnownDeploymentState_INSTALLATION_IN_PROGRESS WellKnownDeploymentState = 64
	// Installation failed. The device may retry or tansition into a terminal failed state
	// Emitted by: device
	// Triggered by: INSTALLER_FAILED_ON_DEVICE
	WellKnownDeploymentState_INSTALLATION_FAILURE WellKnownDeploymentState = 65
	// Post-installation tasks are in-progress. This state covers any work that may be needed
	// after installation, before final success or failure
	// Emitted by: device
	// Triggered by: DEPLOYMENT_STARTED_ON_DEVICE
	WellKnownDeploymentState_DEPLOYMENT_IN_PROGRESS WellKnownDeploymentState = 66
	// Deployment was successful on device. This state is terminal.
	// Emitted by: device
	// Triggered by: DEPLOYMENT_SUCCEEDED_ON_DEVICE
	WellKnownDeploymentState_DEPLOYMENT_SUCCEEDED WellKnownDeploymentState = 67
	// Deployment failed. This state is reachable from all intermediate failed states, if the
	// device determines that the failure is non-recoverable. This state is terminal.
	// Emitted by: device
	// Triggered by: DEPLOYMENT_FAILED_ON_DEVICE
	WellKnownDeploymentState_DEPLOYMENT_FAILURE WellKnownDeploymentState = 68
)

var WellKnownDeploymentState_name = map[int32]string{
	0:  "UNKNOWN_DEPLOYMENT_STATE",
	1:  "DEPLOYMENT_REQUESTED",
	2:  "DEPLOYMENT_DELIVERY_QUEUED",
	3:  "DEPLOYMENT_DELIVERY_IN_PROGRESS",
	4:  "DEPLOYMENT_DELIVERY_FAILURE",
	5:  "DEPLOYMENT_CANCELLATION_IN_PROGRESS",
	6:  "DEPLOYMENT_CANCELLED",
	7:  "DEPLOYMENT_DELIVERY_TIMED_OUT",
	30: "DEPLOYMENT_EXPIRED",
	60: "ARTIFACT_RETRIEVAL_QUEUED",
	61: "ARTIFACT_RETRIEVAL_IN_PROGRESS",
	62: "ARTIFACT_RETRIEVAL_FAILURE",
	63: "INSTALLATION_QUEUED",
	64: "INSTALLATION_IN_PROGRESS",
	65: "INSTALLATION_FAILURE",
	66: "DEPLOYMENT_IN_PROGRESS",
	67: "DEPLOYMENT_SUCCEEDED",
	68: "DEPLOYMENT_FAILURE",
}

var WellKnownDeploymentState_value = map[string]int32{
	"UNKNOWN_DEPLOYMENT_STATE":            0,
	"DEPLOYMENT_REQUESTED":                1,
	"DEPLOYMENT_DELIVERY_QUEUED":          2,
	"DEPLOYMENT_DELIVERY_IN_PROGRESS":     3,
	"DEPLOYMENT_DELIVERY_FAILURE":         4,
	"DEPLOYMENT_CANCELLATION_IN_PROGRESS": 5,
	"DEPLOYMENT_CANCELLED":                6,
	"DEPLOYMENT_DELIVERY_TIMED_OUT":       7,
	"DEPLOYMENT_EXPIRED":                  30,
	"ARTIFACT_RETRIEVAL_QUEUED":           60,
	"ARTIFACT_RETRIEVAL_IN_PROGRESS":      61,
	"ARTIFACT_RETRIEVAL_FAILURE":          62,
	"INSTALLATION_QUEUED":                 63,
	"INSTALLATION_IN_PROGRESS":            64,
	"INSTALLATION_FAILURE":                65,
	"DEPLOYMENT_IN_PROGRESS":              66,
	"DEPLOYMENT_SUCCEEDED":                67,
	"DEPLOYMENT_FAILURE":                  68,
}

func (x WellKnownDeploymentState) String() string {
	return proto.EnumName(WellKnownDeploymentState_name, int32(x))
}

func (WellKnownDeploymentState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c8d8812b064ef715, []int{1}
}

// DEPRECATED: Those well-Known trigger field values in StateTransition events
// See WellKnownDeploymentState enum for information as to when these triggers are used
type WellKnownDeploymentTransitionTrigger int32

const (
	WellKnownDeploymentTransitionTrigger_UNKNOWN_DEPLOYMENT_TRIGGER                WellKnownDeploymentTransitionTrigger = 0
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_QUEUED_FOR_DELIVERY            WellKnownDeploymentTransitionTrigger = 1
	WellKnownDeploymentTransitionTrigger_DEVICE_CONNECTED_TO_CLOUD                 WellKnownDeploymentTransitionTrigger = 2
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_DELIVERY_FAILED                WellKnownDeploymentTransitionTrigger = 3
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_CANCELLATION_REQUESTED         WellKnownDeploymentTransitionTrigger = 4
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_CANCELLATION_REQUEST_FULFILLED WellKnownDeploymentTransitionTrigger = 5
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_DELIVERY_TIMEOUT_EXCEEDED      WellKnownDeploymentTransitionTrigger = 6
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_EXPIRATION_EXCEEDED            WellKnownDeploymentTransitionTrigger = 30
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_QUEUED_ON_DEVICE               WellKnownDeploymentTransitionTrigger = 60
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_STARTED_ON_DEVICE              WellKnownDeploymentTransitionTrigger = 61
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_SUCCEEDED_ON_DEVICE            WellKnownDeploymentTransitionTrigger = 62
	WellKnownDeploymentTransitionTrigger_DEPLOYMENT_FAILED_ON_DEVICE               WellKnownDeploymentTransitionTrigger = 63
	WellKnownDeploymentTransitionTrigger_INSTALLER_STARTED_ON_DEVICE               WellKnownDeploymentTransitionTrigger = 64
	WellKnownDeploymentTransitionTrigger_INSTALLER_FAILED_ON_DEVICE                WellKnownDeploymentTransitionTrigger = 65
	WellKnownDeploymentTransitionTrigger_ARTIFACT_RETRIEVAL_STARTED                WellKnownDeploymentTransitionTrigger = 80
	WellKnownDeploymentTransitionTrigger_ARTIFACT_RETRIEVAL_SUCCEEDED              WellKnownDeploymentTransitionTrigger = 81
	WellKnownDeploymentTransitionTrigger_ARTIFACT_RETRIEVAL_FAILED                 WellKnownDeploymentTransitionTrigger = 82
)

var WellKnownDeploymentTransitionTrigger_name = map[int32]string{
	0:  "UNKNOWN_DEPLOYMENT_TRIGGER",
	1:  "DEPLOYMENT_QUEUED_FOR_DELIVERY",
	2:  "DEVICE_CONNECTED_TO_CLOUD",
	3:  "DEPLOYMENT_DELIVERY_FAILED",
	4:  "DEPLOYMENT_CANCELLATION_REQUESTED",
	5:  "DEPLOYMENT_CANCELLATION_REQUEST_FULFILLED",
	6:  "DEPLOYMENT_DELIVERY_TIMEOUT_EXCEEDED",
	30: "DEPLOYMENT_EXPIRATION_EXCEEDED",
	60: "DEPLOYMENT_QUEUED_ON_DEVICE",
	61: "DEPLOYMENT_STARTED_ON_DEVICE",
	62: "DEPLOYMENT_SUCCEEDED_ON_DEVICE",
	63: "DEPLOYMENT_FAILED_ON_DEVICE",
	64: "INSTALLER_STARTED_ON_DEVICE",
	65: "INSTALLER_FAILED_ON_DEVICE",
	80: "ARTIFACT_RETRIEVAL_STARTED",
	81: "ARTIFACT_RETRIEVAL_SUCCEEDED",
	82: "ARTIFACT_RETRIEVAL_FAILED",
}

var WellKnownDeploymentTransitionTrigger_value = map[string]int32{
	"UNKNOWN_DEPLOYMENT_TRIGGER":                0,
	"DEPLOYMENT_QUEUED_FOR_DELIVERY":            1,
	"DEVICE_CONNECTED_TO_CLOUD":                 2,
	"DEPLOYMENT_DELIVERY_FAILED":                3,
	"DEPLOYMENT_CANCELLATION_REQUESTED":         4,
	"DEPLOYMENT_CANCELLATION_REQUEST_FULFILLED": 5,
	"DEPLOYMENT_DELIVERY_TIMEOUT_EXCEEDED":      6,
	"DEPLOYMENT_EXPIRATION_EXCEEDED":            30,
	"DEPLOYMENT_QUEUED_ON_DEVICE":               60,
	"DEPLOYMENT_STARTED_ON_DEVICE":              61,
	"DEPLOYMENT_SUCCEEDED_ON_DEVICE":            62,
	"DEPLOYMENT_FAILED_ON_DEVICE":               63,
	"INSTALLER_STARTED_ON_DEVICE":               64,
	"INSTALLER_FAILED_ON_DEVICE":                65,
	"ARTIFACT_RETRIEVAL_STARTED":                80,
	"ARTIFACT_RETRIEVAL_SUCCEEDED":              81,
	"ARTIFACT_RETRIEVAL_FAILED":                 82,
}

func (x WellKnownDeploymentTransitionTrigger) String() string {
	return proto.EnumName(WellKnownDeploymentTransitionTrigger_name, int32(x))
}

func (WellKnownDeploymentTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c8d8812b064ef715, []int{2}
}

func init() {
	proto.RegisterEnum("autonomic.ext.event.WellKnownFiniteStateMachine", WellKnownFiniteStateMachine_name, WellKnownFiniteStateMachine_value)
	proto.RegisterEnum("autonomic.ext.event.WellKnownDeploymentState", WellKnownDeploymentState_name, WellKnownDeploymentState_value)
	proto.RegisterEnum("autonomic.ext.event.WellKnownDeploymentTransitionTrigger", WellKnownDeploymentTransitionTrigger_name, WellKnownDeploymentTransitionTrigger_value)
}

func init() {
	proto.RegisterFile("autonomic/ext/event/well_known_states.proto", fileDescriptor_c8d8812b064ef715)
}

var fileDescriptor_c8d8812b064ef715 = []byte{
	// 1191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0x5d, 0x72, 0x13, 0x39,
	0x17, 0xc5, 0x49, 0x08, 0x20, 0xfe, 0x84, 0x08, 0xf9, 0x4f, 0x20, 0x24, 0xf9, 0x80, 0x50, 0xc4,
	0x55, 0xf0, 0xca, 0x9f, 0xd2, 0xba, 0xb6, 0xf5, 0xa5, 0xbb, 0xd5, 0xa8, 0x25, 0x87, 0xcc, 0x8b,
	0xca, 0xa4, 0x5c, 0xe0, 0x9a, 0xc4, 0xa6, 0x12, 0x33, 0x30, 0x1b, 0x98, 0x85, 0xcc, 0x2a, 0x66,
	0x41, 0xb3, 0x87, 0x99, 0xc7, 0xa9, 0xab, 0x6e, 0xb7, 0xdb, 0x8e, 0x3d, 0xf3, 0xe2, 0x2a, 0xeb,
	0x1e, 0x1d, 0xdd, 0x73, 0x74, 0xfa, 0x76, 0x93, 0xe7, 0xad, 0x6f, 0xfd, 0x5e, 0xb7, 0x77, 0xd6,
	0x39, 0xa9, 0xb6, 0x7f, 0xf4, 0xab, 0xed, 0x5f, 0xda, 0xdd, 0x7e, 0xf5, 0x7b, 0xfb, 0xf4, 0xd4,
	0xfd, 0xdc, 0xed, 0x7d, 0xef, 0xba, 0x8b, 0x7e, 0xab, 0xdf, 0xbe, 0xd8, 0xff, 0x7a, 0xde, 0xeb,
	0xf7, 0xd8, 0xfd, 0x02, 0xbc, 0xdf, 0xfe, 0xd1, 0xdf, 0xf7, 0xe0, 0xbd, 0x3f, 0x6f, 0x90, 0xb5,
	0xa3, 0xf6, 0xe9, 0xe9, 0x21, 0xe2, 0x6b, 0x9d, 0x6e, 0xa7, 0xdf, 0x4e, 0x71, 0x53, 0xd4, 0x3a,
	0xf9, 0xd2, 0xe9, 0xb6, 0xd9, 0x5d, 0x72, 0xd3, 0xc6, 0x87, 0xb1, 0x3a, 0x8a, 0x5d, 0x2d, 0x8d,
	0xe8, 0x15, 0x76, 0x87, 0x10, 0x01, 0x49, 0xa8, 0x8e, 0x23, 0x88, 0x0d, 0xad, 0xb0, 0x7b, 0xe4,
	0x76, 0x53, 0xc6, 0x4e, 0xc8, 0x34, 0x50, 0x4d, 0xd0, 0xc7, 0x74, 0x06, 0x97, 0x04, 0x34, 0x65,
	0x00, 0xee, 0x88, 0x1f, 0x82, 0x4d, 0xe8, 0x2c, 0x5b, 0x20, 0x34, 0x52, 0xc2, 0x86, 0x50, 0x02,
	0xce, 0xb1, 0x25, 0x72, 0x3f, 0x07, 0x06, 0x2a, 0xae, 0xc9, 0xba, 0xd3, 0x90, 0x82, 0xa1, 0x57,
	0xd9, 0x03, 0x72, 0x2f, 0x2f, 0x08, 0xc9, 0xeb, 0xb1, 0x4a, 0x8d, 0x0c, 0xe8, 0x3c, 0xa3, 0xe4,
	0xd6, 0x21, 0x1c, 0x3b, 0xad, 0x0c, 0x37, 0x52, 0xc5, 0xf4, 0xda, 0x28, 0x43, 0x0c, 0x81, 0x91,
	0x4d, 0x69, 0x8e, 0xe9, 0x75, 0xb6, 0x4c, 0x16, 0x32, 0x4e, 0xab, 0x3d, 0xd6, 0xd9, 0x44, 0x70,
	0x03, 0xf4, 0x36, 0x2a, 0x6a, 0x44, 0x12, 0xfb, 0x48, 0x42, 0x7e, 0x4c, 0xef, 0x60, 0xbb, 0x46,
	0x1d, 0x42, 0xec, 0x34, 0xd4, 0x34, 0xa4, 0x0d, 0x7a, 0x97, 0xad, 0x91, 0x25, 0xf8, 0x08, 0x81,
	0x35, 0xe0, 0x12, 0x88, 0x85, 0x8c, 0xeb, 0xf9, 0xfe, 0x94, 0x52, 0x24, 0x38, 0x92, 0x35, 0x99,
	0xf7, 0x4c, 0xef, 0x21, 0x5a, 0xc5, 0x4e, 0x40, 0xc4, 0x63, 0xe1, 0x52, 0xc3, 0x8d, 0x4d, 0x07,
	0xc7, 0xb1, 0x02, 0x9d, 0xad, 0xd3, 0xfb, 0xa8, 0x4d, 0x43, 0xa2, 0xb4, 0x71, 0x7e, 0xdd, 0xa6,
	0xbc, 0x0e, 0x74, 0x21, 0x6b, 0x38, 0xf2, 0x14, 0x01, 0x8f, 0x03, 0x08, 0xc3, 0x4c, 0xe3, 0x03,
	0xb6, 0x4e, 0x96, 0x9b, 0xd0, 0x90, 0x41, 0x08, 0x2e, 0x08, 0xb9, 0x8c, 0x5c, 0x93, 0x87, 0x52,
	0x64, 0xd5, 0x45, 0xf6, 0x88, 0xac, 0x6b, 0x30, 0x5a, 0x42, 0x13, 0x5c, 0x6e, 0x45, 0xc2, 0xa5,
	0xc6, 0x96, 0x03, 0x25, 0x80, 0x2e, 0xb1, 0x15, 0xf2, 0x20, 0x68, 0xf0, 0xb8, 0x5e, 0xb8, 0x9c,
	0x68, 0x55, 0x93, 0x21, 0xd0, 0x65, 0xdc, 0x3c, 0x70, 0x09, 0x9c, 0x81, 0x10, 0x22, 0x30, 0xfa,
	0xd8, 0x41, 0x24, 0xd3, 0x14, 0xe9, 0x57, 0xd8, 0x2a, 0x59, 0xb4, 0x29, 0x68, 0xc7, 0xad, 0x69,
	0x64, 0xfb, 0x75, 0x94, 0x1d, 0xbd, 0x8a, 0x51, 0xe0, 0xb1, 0x91, 0xce, 0x34, 0xa0, 0x66, 0xe8,
	0x1a, 0xbb, 0x4d, 0x6e, 0x1c, 0x28, 0x65, 0x52, 0xa3, 0x79, 0x42, 0xd7, 0x51, 0xe8, 0x81, 0xcc,
	0xcc, 0xe3, 0x69, 0x0a, 0xda, 0xef, 0xda, 0x40, 0xb7, 0xd0, 0x7f, 0x9e, 0x24, 0xa1, 0x0c, 0xb2,
	0xbb, 0x89, 0x20, 0xf5, 0x2e, 0x6c, 0xa2, 0xd6, 0x81, 0x0b, 0x89, 0x86, 0x20, 0xb4, 0xd8, 0x86,
	0xf7, 0x0e, 0xe8, 0x43, 0xf6, 0x82, 0x3c, 0xc3, 0xf3, 0x8f, 0xb8, 0x06, 0x67, 0x93, 0xba, 0xe6,
	0x02, 0x35, 0x4d, 0x81, 0x3f, 0x62, 0x4f, 0xc8, 0xb6, 0x00, 0x48, 0x5c, 0x1a, 0xe2, 0xef, 0x54,
	0xe0, 0x16, 0x7b, 0x46, 0x76, 0x03, 0xae, 0xb5, 0x04, 0xed, 0x34, 0xd4, 0x25, 0x0a, 0xf0, 0x7d,
	0x5d, 0x82, 0x3e, 0x66, 0x2f, 0xc9, 0xbe, 0x81, 0x28, 0x01, 0xcd, 0x8d, 0xf7, 0xac, 0x81, 0x89,
	0x51, 0xa1, 0x98, 0x4e, 0xbf, 0x8d, 0xbe, 0xf0, 0xc0, 0xd8, 0xcc, 0xb6, 0x3d, 0xb6, 0x48, 0xee,
	0x14, 0x7f, 0x5d, 0xa8, 0x82, 0x43, 0x7a, 0x63, 0x75, 0xe6, 0x7a, 0x85, 0x2d, 0x13, 0x3a, 0x5c,
	0xb7, 0xb1, 0xaf, 0x10, 0x5f, 0xd9, 0x24, 0x8b, 0xc3, 0x8a, 0x86, 0x48, 0x19, 0x40, 0x72, 0x6d,
	0xe8, 0x4d, 0x5f, 0xdf, 0x25, 0x1b, 0xc3, 0x7a, 0x96, 0x9e, 0x51, 0xd8, 0x2d, 0x0f, 0x7b, 0x49,
	0xf6, 0x86, 0x30, 0x5f, 0x28, 0xdd, 0x79, 0xa0, 0xc2, 0x10, 0x9f, 0x9f, 0xa2, 0xef, 0x1d, 0xbf,
	0xe7, 0x15, 0x79, 0x7e, 0x89, 0xfa, 0x5f, 0x36, 0xed, 0xfa, 0x4d, 0xdb, 0x64, 0x6d, 0xfc, 0xa0,
	0x22, 0xc1, 0x16, 0xe8, 0xff, 0x3c, 0x68, 0x87, 0xac, 0x5f, 0x62, 0x2e, 0xa3, 0x9e, 0x78, 0xd4,
	0x16, 0x59, 0x19, 0xa7, 0x4a, 0x78, 0x2c, 0x03, 0x0f, 0x79, 0xea, 0x21, 0x8f, 0xc9, 0xea, 0x25,
	0xa2, 0x21, 0xe6, 0x19, 0x62, 0xf6, 0xfe, 0x98, 0x23, 0xcb, 0xc5, 0x98, 0x13, 0xed, 0xaf, 0xa7,
	0xbd, 0x5f, 0xcf, 0xda, 0xdd, 0xbe, 0x1f, 0x75, 0x18, 0xba, 0xc1, 0x8c, 0x1b, 0x8e, 0xb6, 0x5c,
	0xd0, 0x15, 0x7c, 0x30, 0x4b, 0xab, 0x1a, 0x3e, 0x58, 0x48, 0x0d, 0x08, 0x8a, 0xd7, 0xb2, 0x5a,
	0xaa, 0x08, 0x08, 0x25, 0xce, 0x35, 0xf7, 0xc1, 0x82, 0x05, 0x41, 0x67, 0xd8, 0x36, 0x79, 0x38,
	0xa9, 0x2e, 0x31, 0x58, 0xaa, 0xae, 0x21, 0x4d, 0xe9, 0x2c, 0x7b, 0x48, 0xd6, 0x26, 0x81, 0x6a,
	0x5c, 0x86, 0x56, 0x03, 0x9d, 0xcb, 0x52, 0x5c, 0x00, 0xca, 0xb3, 0x61, 0x84, 0xe9, 0xea, 0x58,
	0xa3, 0x39, 0x10, 0x04, 0x9d, 0x67, 0x5b, 0x64, 0x63, 0xd2, 0x19, 0x46, 0x46, 0x20, 0x9c, 0xb2,
	0x86, 0x5e, 0x63, 0x8b, 0x84, 0x95, 0x20, 0xf0, 0x31, 0x91, 0x1a, 0x04, 0xdd, 0x64, 0x1b, 0x64,
	0x85, 0x6b, 0x23, 0x6b, 0x3c, 0x40, 0xed, 0x7e, 0xce, 0xf0, 0x70, 0x20, 0xf1, 0x35, 0x7b, 0x4c,
	0x36, 0x27, 0x94, 0xcb, 0x7d, 0xbd, 0x41, 0x9b, 0x26, 0x60, 0x06, 0x02, 0xdf, 0xe2, 0x0c, 0x97,
	0x71, 0x6a, 0xf8, 0x40, 0x55, 0x4e, 0xfe, 0x0e, 0xef, 0x65, 0xa4, 0x50, 0xa6, 0x7d, 0x8f, 0x72,
	0x47, 0xaa, 0x03, 0x42, 0x8e, 0x33, 0xab, 0xa4, 0xa5, 0xbc, 0xeb, 0x60, 0xcc, 0xa4, 0xd4, 0x06,
	0x01, 0x80, 0x00, 0x41, 0x83, 0x31, 0x07, 0x06, 0x6c, 0x62, 0xef, 0xaf, 0x39, 0xb2, 0x33, 0x21,
	0x3a, 0xe6, 0xbc, 0xd5, 0xbd, 0xe8, 0xf4, 0x3b, 0xbd, 0xae, 0x39, 0xef, 0x7c, 0xfe, 0xdc, 0x3e,
	0x47, 0x9d, 0x13, 0x62, 0x64, 0xb4, 0xac, 0xd7, 0x41, 0xd3, 0x2b, 0xe8, 0x55, 0x69, 0x3d, 0x53,
	0xe9, 0x6a, 0x4a, 0x17, 0x17, 0x42, 0x2b, 0x68, 0xf7, 0xe8, 0xfb, 0x0c, 0x84, 0x33, 0xca, 0x05,
	0xa1, 0xb2, 0x98, 0xa8, 0x29, 0x89, 0xc3, 0x66, 0x41, 0xd0, 0x59, 0xb6, 0x4b, 0xb6, 0xa6, 0x65,
	0x65, 0x18, 0xdc, 0x39, 0x9c, 0xa3, 0xff, 0x01, 0x73, 0x35, 0x1b, 0xd6, 0xa4, 0x8f, 0xcf, 0x55,
	0xf6, 0x94, 0xec, 0x4c, 0x8b, 0x8f, 0xb2, 0x18, 0x96, 0xdc, 0xc3, 0xf9, 0x31, 0x89, 0x3e, 0x45,
	0x19, 0x6d, 0x81, 0xd9, 0x1c, 0x0b, 0x7c, 0x6e, 0x83, 0x7f, 0x7f, 0xa2, 0x6e, 0xfa, 0x1a, 0x5f,
	0x4a, 0xa3, 0x8f, 0xa1, 0x36, 0x23, 0x88, 0x37, 0x63, 0xc7, 0x14, 0x97, 0x58, 0xc2, 0xbc, 0x1d,
	0x3b, 0x26, 0x73, 0xa8, 0x04, 0x78, 0x87, 0x80, 0x3c, 0x3f, 0xa0, 0x27, 0x9c, 0xf2, 0x1e, 0xcd,
	0x1e, 0x02, 0x2e, 0x11, 0xf0, 0x29, 0xb9, 0xce, 0x99, 0x68, 0x82, 0x3a, 0x26, 0xd5, 0x8b, 0xc8,
	0x7d, 0x98, 0xf2, 0x70, 0xe5, 0xb7, 0xa9, 0x0f, 0x7e, 0xab, 0x90, 0xa5, 0x93, 0xde, 0xd9, 0xfe,
	0x84, 0xef, 0xb6, 0x83, 0x85, 0x22, 0x92, 0x7e, 0x86, 0x5d, 0x24, 0xf8, 0x89, 0x97, 0x54, 0x7e,
	0xfa, 0xff, 0xe7, 0x4e, 0xff, 0xcb, 0xb7, 0x4f, 0xfb, 0x27, 0xbd, 0xb3, 0x6a, 0xb1, 0xef, 0x45,
	0xab, 0x83, 0xdf, 0x87, 0xed, 0xf3, 0x6e, 0xeb, 0xf4, 0x85, 0xff, 0x18, 0xbc, 0xa8, 0x5e, 0x9c,
	0x9f, 0x54, 0xcf, 0x5a, 0x9d, 0x6e, 0xd5, 0xff, 0xaf, 0x4e, 0xf8, 0x90, 0xfc, 0xbb, 0x52, 0xf9,
	0x7d, 0x66, 0x96, 0x5b, 0xf3, 0x69, 0xde, 0x63, 0x5e, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x0c,
	0x5c, 0xb5, 0xac, 0x6f, 0x0a, 0x00, 0x00,
}
