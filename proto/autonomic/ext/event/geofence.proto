/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */

// Copyright 2017 Autonomic Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package autonomic.ext.event;

option go_package = "xk6-fabric/proto/autonomic/ext/event";
option java_package = "com.autonomic.ext.event";
option java_outer_classname = "GeofenceProto";
option java_multiple_files = true;

option cc_enable_arenas = true;

option objc_class_prefix = "AUT";

import "autonomic/ext/telemetry/position.proto";

message Geofence {
    string name = 1;
    string uuid = 5; 
    oneof shape {
            Polygon polygon = 2;
            Circle circle = 3;
            BoundaryBox boundary_box = 4;
    }
    map<string, string> tags = 6;
}

message Polygon {
// vertices of the polygon in the counter clockwise order
    repeated autonomic.ext.telemetry.Point points = 1;
}

message Circle {
    autonomic.ext.telemetry.Point center = 1;
    double radius = 2; // radius in meters
}

message BoundaryBox {
    autonomic.ext.telemetry.Point north_west = 1;
    autonomic.ext.telemetry.Point south_east = 2;
}
