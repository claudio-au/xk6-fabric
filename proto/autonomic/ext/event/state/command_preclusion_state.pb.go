/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/event/state/command_preclusion_state.proto

package state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// These states are emitted by the cloud, and represents the overall state of whether or not a device is precluded from
// receiving/processing commands.
type WellKnownCommandPreclusionState int32

const (
	WellKnownCommandPreclusionState_UNKNOWN_STATE WellKnownCommandPreclusionState = 0
	// The device is able to receive/process commands from the cloud
	// Emitted by: cloud
	// Triggered by: ALL_PRECLUSIONS_RESOLVED
	WellKnownCommandPreclusionState_COMMANDS_PERMITTED WellKnownCommandPreclusionState = 1
	// The device is unable to receive/process commands from the cloud
	// Emitted by: cloud
	// Triggered by: NEW_PRECLUSION_INITIATED, SINGLE_PRECLUSION_RESOLVED
	WellKnownCommandPreclusionState_COMMANDS_PRECLUDED WellKnownCommandPreclusionState = 2
)

var WellKnownCommandPreclusionState_name = map[int32]string{
	0: "UNKNOWN_STATE",
	1: "COMMANDS_PERMITTED",
	2: "COMMANDS_PRECLUDED",
}

var WellKnownCommandPreclusionState_value = map[string]int32{
	"UNKNOWN_STATE":      0,
	"COMMANDS_PERMITTED": 1,
	"COMMANDS_PRECLUDED": 2,
}

func (x WellKnownCommandPreclusionState) String() string {
	return proto.EnumName(WellKnownCommandPreclusionState_name, int32(x))
}

func (WellKnownCommandPreclusionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{0}
}

// These triggers are emitted by the cloud, and indicate that the cloud has identified when there are no remaining
// causes of preclusion, or when a new active preclusion has been identified
type WellKnownCommandPreclusionStateTransitionTrigger int32

const (
	WellKnownCommandPreclusionStateTransitionTrigger_UNKNOWN_TRANSITION         WellKnownCommandPreclusionStateTransitionTrigger = 0
	WellKnownCommandPreclusionStateTransitionTrigger_ALL_PRECLUSIONS_RESOLVED   WellKnownCommandPreclusionStateTransitionTrigger = 10
	WellKnownCommandPreclusionStateTransitionTrigger_NEW_PRECLUSION_INTRODUCED  WellKnownCommandPreclusionStateTransitionTrigger = 11
	WellKnownCommandPreclusionStateTransitionTrigger_SINGLE_PRECLUSION_RESOLVED WellKnownCommandPreclusionStateTransitionTrigger = 12
)

var WellKnownCommandPreclusionStateTransitionTrigger_name = map[int32]string{
	0:  "UNKNOWN_TRANSITION",
	10: "ALL_PRECLUSIONS_RESOLVED",
	11: "NEW_PRECLUSION_INTRODUCED",
	12: "SINGLE_PRECLUSION_RESOLVED",
}

var WellKnownCommandPreclusionStateTransitionTrigger_value = map[string]int32{
	"UNKNOWN_TRANSITION":         0,
	"ALL_PRECLUSIONS_RESOLVED":   10,
	"NEW_PRECLUSION_INTRODUCED":  11,
	"SINGLE_PRECLUSION_RESOLVED": 12,
}

func (x WellKnownCommandPreclusionStateTransitionTrigger) String() string {
	return proto.EnumName(WellKnownCommandPreclusionStateTransitionTrigger_name, int32(x))
}

func (WellKnownCommandPreclusionStateTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{1}
}

// These states are emitted by devices to notify the cloud as to whether or not commands to a device are precluded due
// to a firmware update
type WellKnownFirmwareUpgradeCommandPreclusionState int32

const (
	WellKnownFirmwareUpgradeCommandPreclusionState_UNKNOWN_FIRMWARE_UPDATE_COMMAND_PRECLUSION_STATE WellKnownFirmwareUpgradeCommandPreclusionState = 0
	// A firmware upgrade is not blocking the device from receiving/processing commands from the cloud
	// This could mean that there is no active firmware upgrade, or if there is one, commands can still be serviced
	// while the upgrade is ongoing.
	// Emitted by: device
	// Triggered by: MODULE_FIRMWARE_UPDATE_ENDED
	WellKnownFirmwareUpgradeCommandPreclusionState_COMMANDS_NOT_PRECLUDED_BY_FIRMWARE_UPDATE WellKnownFirmwareUpgradeCommandPreclusionState = 1
	// A firmware upgrade is blocking the device from receiving/processing commands from the cloud
	// Emitted by: device
	// Triggered by: MODULE_FIRMWARE_UPDATE_STARTED
	WellKnownFirmwareUpgradeCommandPreclusionState_COMMANDS_PRECLUDED_BY_FIRMWARE_UPDATE WellKnownFirmwareUpgradeCommandPreclusionState = 2
)

var WellKnownFirmwareUpgradeCommandPreclusionState_name = map[int32]string{
	0: "UNKNOWN_FIRMWARE_UPDATE_COMMAND_PRECLUSION_STATE",
	1: "COMMANDS_NOT_PRECLUDED_BY_FIRMWARE_UPDATE",
	2: "COMMANDS_PRECLUDED_BY_FIRMWARE_UPDATE",
}

var WellKnownFirmwareUpgradeCommandPreclusionState_value = map[string]int32{
	"UNKNOWN_FIRMWARE_UPDATE_COMMAND_PRECLUSION_STATE": 0,
	"COMMANDS_NOT_PRECLUDED_BY_FIRMWARE_UPDATE":        1,
	"COMMANDS_PRECLUDED_BY_FIRMWARE_UPDATE":            2,
}

func (x WellKnownFirmwareUpgradeCommandPreclusionState) String() string {
	return proto.EnumName(WellKnownFirmwareUpgradeCommandPreclusionState_name, int32(x))
}

func (WellKnownFirmwareUpgradeCommandPreclusionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{2}
}

type WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger int32

const (
	WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger_UNKNOWN_FIRMWARE_UPDATE_COMMAND_PRECLUSION_TRANSITION WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger = 0
	WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger_MODULE_FIRMWARE_UPDATE_STARTED                        WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger = 1
	WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger_MODULE_FIRMWARE_UPDATE_ENDED                          WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger = 2
)

var WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger_name = map[int32]string{
	0: "UNKNOWN_FIRMWARE_UPDATE_COMMAND_PRECLUSION_TRANSITION",
	1: "MODULE_FIRMWARE_UPDATE_STARTED",
	2: "MODULE_FIRMWARE_UPDATE_ENDED",
}

var WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger_value = map[string]int32{
	"UNKNOWN_FIRMWARE_UPDATE_COMMAND_PRECLUSION_TRANSITION": 0,
	"MODULE_FIRMWARE_UPDATE_STARTED":                        1,
	"MODULE_FIRMWARE_UPDATE_ENDED":                          2,
}

func (x WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger) String() string {
	return proto.EnumName(WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger_name, int32(x))
}

func (WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{3}
}

// These states are emitted by devices to notify the cloud as to whether or not commands to a device are precluded due
// to a the device operating in a deep sleep low power mode
type WellKnownDeepSleepCommandPreclusionState int32

const (
	WellKnownDeepSleepCommandPreclusionState_UNKNOWN_DEEP_SLEEP_COMMAND_PRECLUSION_STATE WellKnownDeepSleepCommandPreclusionState = 0
	// The device is not in a deep sleep low power mode, and can receive/process commands from the cloud if there are
	// no other causes of preclusion
	// Emitted by: device
	// Triggered by: DEVICE_EXITING_DEEP_SLEEP
	WellKnownDeepSleepCommandPreclusionState_COMMANDS_NOT_PRECLUDED_BY_DEEP_SLEEP WellKnownDeepSleepCommandPreclusionState = 1
	// The device is in deep sleep low power mode, and will not receive/process commands from the cloud
	// Emitted by: device
	// Triggered by: DEVICE_ENTERING_DEEP_SLEEP
	WellKnownDeepSleepCommandPreclusionState_COMMANDS_PRECLUDED_BY_DEEP_SLEEP WellKnownDeepSleepCommandPreclusionState = 2
)

var WellKnownDeepSleepCommandPreclusionState_name = map[int32]string{
	0: "UNKNOWN_DEEP_SLEEP_COMMAND_PRECLUSION_STATE",
	1: "COMMANDS_NOT_PRECLUDED_BY_DEEP_SLEEP",
	2: "COMMANDS_PRECLUDED_BY_DEEP_SLEEP",
}

var WellKnownDeepSleepCommandPreclusionState_value = map[string]int32{
	"UNKNOWN_DEEP_SLEEP_COMMAND_PRECLUSION_STATE": 0,
	"COMMANDS_NOT_PRECLUDED_BY_DEEP_SLEEP":        1,
	"COMMANDS_PRECLUDED_BY_DEEP_SLEEP":            2,
}

func (x WellKnownDeepSleepCommandPreclusionState) String() string {
	return proto.EnumName(WellKnownDeepSleepCommandPreclusionState_name, int32(x))
}

func (WellKnownDeepSleepCommandPreclusionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{4}
}

type WellKnownDeepSleepCommandPreclusionStateTransitionTrigger int32

const (
	WellKnownDeepSleepCommandPreclusionStateTransitionTrigger_UNKNOWN_DEEP_SLEEP_COMMAND_PRECLUSION_TRANSITION WellKnownDeepSleepCommandPreclusionStateTransitionTrigger = 0
	WellKnownDeepSleepCommandPreclusionStateTransitionTrigger_DEVICE_ENTERING_DEEP_SLEEP                       WellKnownDeepSleepCommandPreclusionStateTransitionTrigger = 1
	WellKnownDeepSleepCommandPreclusionStateTransitionTrigger_DEVICE_EXITING_DEEP_SLEEP                        WellKnownDeepSleepCommandPreclusionStateTransitionTrigger = 2
)

var WellKnownDeepSleepCommandPreclusionStateTransitionTrigger_name = map[int32]string{
	0: "UNKNOWN_DEEP_SLEEP_COMMAND_PRECLUSION_TRANSITION",
	1: "DEVICE_ENTERING_DEEP_SLEEP",
	2: "DEVICE_EXITING_DEEP_SLEEP",
}

var WellKnownDeepSleepCommandPreclusionStateTransitionTrigger_value = map[string]int32{
	"UNKNOWN_DEEP_SLEEP_COMMAND_PRECLUSION_TRANSITION": 0,
	"DEVICE_ENTERING_DEEP_SLEEP":                       1,
	"DEVICE_EXITING_DEEP_SLEEP":                        2,
}

func (x WellKnownDeepSleepCommandPreclusionStateTransitionTrigger) String() string {
	return proto.EnumName(WellKnownDeepSleepCommandPreclusionStateTransitionTrigger_name, int32(x))
}

func (WellKnownDeepSleepCommandPreclusionStateTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{5}
}

// These states are emitted by devices to notify the cloud as to whether or not commands to a device are precluded due
// to the device being deregistered from a network carrier
type WellKnownCarrierRegistrationCommandPreclusionState int32

const (
	WellKnownCarrierRegistrationCommandPreclusionState_UNKNOWN_CARRIER_REGISTRATION_COMMAND_PRECLUSION_STATE WellKnownCarrierRegistrationCommandPreclusionState = 0
	// The device is actively registered with a mobile carrier, and can receive/process commands from the cloud if there
	// are no other causes of preclusion
	// Emitted by: device
	// Triggered by: DEVICE_REGISTERED_WITH_CARRIER
	WellKnownCarrierRegistrationCommandPreclusionState_COMMANDS_NOT_PRECLUDED_BY_CARRIER_REGISTRATION WellKnownCarrierRegistrationCommandPreclusionState = 1
	// The lack of an active carrier registration is blocking the device from receiving/processing commands from the
	// cloud
	// Emitted by: device
	// Triggered by: DEVICE_DEREGISTERED_FROM_CARRIER
	WellKnownCarrierRegistrationCommandPreclusionState_COMMANDS_PRECLUDED_BY_CARRIER_REGISTRATION WellKnownCarrierRegistrationCommandPreclusionState = 2
)

var WellKnownCarrierRegistrationCommandPreclusionState_name = map[int32]string{
	0: "UNKNOWN_CARRIER_REGISTRATION_COMMAND_PRECLUSION_STATE",
	1: "COMMANDS_NOT_PRECLUDED_BY_CARRIER_REGISTRATION",
	2: "COMMANDS_PRECLUDED_BY_CARRIER_REGISTRATION",
}

var WellKnownCarrierRegistrationCommandPreclusionState_value = map[string]int32{
	"UNKNOWN_CARRIER_REGISTRATION_COMMAND_PRECLUSION_STATE": 0,
	"COMMANDS_NOT_PRECLUDED_BY_CARRIER_REGISTRATION":        1,
	"COMMANDS_PRECLUDED_BY_CARRIER_REGISTRATION":            2,
}

func (x WellKnownCarrierRegistrationCommandPreclusionState) String() string {
	return proto.EnumName(WellKnownCarrierRegistrationCommandPreclusionState_name, int32(x))
}

func (WellKnownCarrierRegistrationCommandPreclusionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{6}
}

type WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger int32

const (
	WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger_UNKNOWN_CARRIER_REGISTRATION_COMMAND_PRECLUSION_TRANSITION WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger = 0
	WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger_DEVICE_DEREGISTERED_FROM_CARRIER                           WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger = 1
	WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger_DEVICE_REGISTERED_WITH_CARRIER                             WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger = 2
)

var WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger_name = map[int32]string{
	0: "UNKNOWN_CARRIER_REGISTRATION_COMMAND_PRECLUSION_TRANSITION",
	1: "DEVICE_DEREGISTERED_FROM_CARRIER",
	2: "DEVICE_REGISTERED_WITH_CARRIER",
}

var WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger_value = map[string]int32{
	"UNKNOWN_CARRIER_REGISTRATION_COMMAND_PRECLUSION_TRANSITION": 0,
	"DEVICE_DEREGISTERED_FROM_CARRIER":                           1,
	"DEVICE_REGISTERED_WITH_CARRIER":                             2,
}

func (x WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger) String() string {
	return proto.EnumName(WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger_name, int32(x))
}

func (WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{7}
}

// These states are emitted by devices to notify the cloud as to whether or not commands to a device are precluded due
// to the device reaching temperatures that exceed a threshold for safe operation
type WellKnownTemperatureThresholdCommandPreclusionState int32

const (
	WellKnownTemperatureThresholdCommandPreclusionState_UNKNOWN_TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_STATE WellKnownTemperatureThresholdCommandPreclusionState = 0
	// The device is operating within safe temperature thresholds, and thus the device can receive/process commands from
	// the cloud if there are no other causes of preclusion
	// Emitted by: device
	// Triggered by: DEVICE_TEMPERATURE_THRESHOLD_OPERABLE
	WellKnownTemperatureThresholdCommandPreclusionState_COMMANDS_NOT_PRECLUDED_BY_TEMPERATURE_THRESHOLD WellKnownTemperatureThresholdCommandPreclusionState = 1
	// The device is operating outside safe temperature thresholds, blocking the device from receiving/processing
	// commands from the cloud.
	// Emitted by: device
	// Triggered by: DEVICE_TEMPERATURE_THRESHOLD_EXCEEDED
	WellKnownTemperatureThresholdCommandPreclusionState_COMMANDS_PRECLUDED_BY_TEMPERATURE_THRESHOLD WellKnownTemperatureThresholdCommandPreclusionState = 2
)

var WellKnownTemperatureThresholdCommandPreclusionState_name = map[int32]string{
	0: "UNKNOWN_TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_STATE",
	1: "COMMANDS_NOT_PRECLUDED_BY_TEMPERATURE_THRESHOLD",
	2: "COMMANDS_PRECLUDED_BY_TEMPERATURE_THRESHOLD",
}

var WellKnownTemperatureThresholdCommandPreclusionState_value = map[string]int32{
	"UNKNOWN_TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_STATE": 0,
	"COMMANDS_NOT_PRECLUDED_BY_TEMPERATURE_THRESHOLD":        1,
	"COMMANDS_PRECLUDED_BY_TEMPERATURE_THRESHOLD":            2,
}

func (x WellKnownTemperatureThresholdCommandPreclusionState) String() string {
	return proto.EnumName(WellKnownTemperatureThresholdCommandPreclusionState_name, int32(x))
}

func (WellKnownTemperatureThresholdCommandPreclusionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{8}
}

type WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger int32

const (
	WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger_UNKNOWN_TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_TRANSITION WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger = 0
	WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger_DEVICE_TEMPERATURE_THRESHOLD_EXCEEDED                       WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger = 1
	WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger_DEVICE_TEMPERATURE_THRESHOLD_OPERABLE                       WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger = 2
)

var WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger_name = map[int32]string{
	0: "UNKNOWN_TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_TRANSITION",
	1: "DEVICE_TEMPERATURE_THRESHOLD_EXCEEDED",
	2: "DEVICE_TEMPERATURE_THRESHOLD_OPERABLE",
}

var WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger_value = map[string]int32{
	"UNKNOWN_TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_TRANSITION": 0,
	"DEVICE_TEMPERATURE_THRESHOLD_EXCEEDED":                       1,
	"DEVICE_TEMPERATURE_THRESHOLD_OPERABLE":                       2,
}

func (x WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger) String() string {
	return proto.EnumName(WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger_name, int32(x))
}

func (WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{9}
}

// This data informs consumers of preclusion causes which are active
type CommandPreclusionData struct {
	FirmwareUpgradePreclusionState      WellKnownFirmwareUpgradeCommandPreclusionState      `protobuf:"varint,1,opt,name=firmware_upgrade_preclusion_state,json=firmwareUpgradePreclusionState,proto3,enum=autonomic.ext.event.state.commandpreclusionstate.WellKnownFirmwareUpgradeCommandPreclusionState" json:"firmware_upgrade_preclusion_state,omitempty"`
	DeepSleepPreclusionState            WellKnownDeepSleepCommandPreclusionState            `protobuf:"varint,2,opt,name=deep_sleep_preclusion_state,json=deepSleepPreclusionState,proto3,enum=autonomic.ext.event.state.commandpreclusionstate.WellKnownDeepSleepCommandPreclusionState" json:"deep_sleep_preclusion_state,omitempty"`
	CarrierRegistrationPreclusionState  WellKnownCarrierRegistrationCommandPreclusionState  `protobuf:"varint,3,opt,name=carrier_registration_preclusion_state,json=carrierRegistrationPreclusionState,proto3,enum=autonomic.ext.event.state.commandpreclusionstate.WellKnownCarrierRegistrationCommandPreclusionState" json:"carrier_registration_preclusion_state,omitempty"`
	TemperatureThresholdPreclusionState WellKnownTemperatureThresholdCommandPreclusionState `protobuf:"varint,4,opt,name=temperature_threshold_preclusion_state,json=temperatureThresholdPreclusionState,proto3,enum=autonomic.ext.event.state.commandpreclusionstate.WellKnownTemperatureThresholdCommandPreclusionState" json:"temperature_threshold_preclusion_state,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                                            `json:"-"`
	XXX_unrecognized                    []byte                                              `json:"-"`
	XXX_sizecache                       int32                                               `json:"-"`
}

func (m *CommandPreclusionData) Reset()         { *m = CommandPreclusionData{} }
func (m *CommandPreclusionData) String() string { return proto.CompactTextString(m) }
func (*CommandPreclusionData) ProtoMessage()    {}
func (*CommandPreclusionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c89bd58b5e10995, []int{0}
}

func (m *CommandPreclusionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandPreclusionData.Unmarshal(m, b)
}
func (m *CommandPreclusionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandPreclusionData.Marshal(b, m, deterministic)
}
func (m *CommandPreclusionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandPreclusionData.Merge(m, src)
}
func (m *CommandPreclusionData) XXX_Size() int {
	return xxx_messageInfo_CommandPreclusionData.Size(m)
}
func (m *CommandPreclusionData) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandPreclusionData.DiscardUnknown(m)
}

var xxx_messageInfo_CommandPreclusionData proto.InternalMessageInfo

func (m *CommandPreclusionData) GetFirmwareUpgradePreclusionState() WellKnownFirmwareUpgradeCommandPreclusionState {
	if m != nil {
		return m.FirmwareUpgradePreclusionState
	}
	return WellKnownFirmwareUpgradeCommandPreclusionState_UNKNOWN_FIRMWARE_UPDATE_COMMAND_PRECLUSION_STATE
}

func (m *CommandPreclusionData) GetDeepSleepPreclusionState() WellKnownDeepSleepCommandPreclusionState {
	if m != nil {
		return m.DeepSleepPreclusionState
	}
	return WellKnownDeepSleepCommandPreclusionState_UNKNOWN_DEEP_SLEEP_COMMAND_PRECLUSION_STATE
}

func (m *CommandPreclusionData) GetCarrierRegistrationPreclusionState() WellKnownCarrierRegistrationCommandPreclusionState {
	if m != nil {
		return m.CarrierRegistrationPreclusionState
	}
	return WellKnownCarrierRegistrationCommandPreclusionState_UNKNOWN_CARRIER_REGISTRATION_COMMAND_PRECLUSION_STATE
}

func (m *CommandPreclusionData) GetTemperatureThresholdPreclusionState() WellKnownTemperatureThresholdCommandPreclusionState {
	if m != nil {
		return m.TemperatureThresholdPreclusionState
	}
	return WellKnownTemperatureThresholdCommandPreclusionState_UNKNOWN_TEMPERATURE_THRESHOLD_COMMAND_PRECLUSION_STATE
}

func init() {
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownCommandPreclusionState", WellKnownCommandPreclusionState_name, WellKnownCommandPreclusionState_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownCommandPreclusionStateTransitionTrigger", WellKnownCommandPreclusionStateTransitionTrigger_name, WellKnownCommandPreclusionStateTransitionTrigger_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownFirmwareUpgradeCommandPreclusionState", WellKnownFirmwareUpgradeCommandPreclusionState_name, WellKnownFirmwareUpgradeCommandPreclusionState_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger", WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger_name, WellKnownFirmwareUpgradeCommandPreclusionStateTransitionTrigger_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownDeepSleepCommandPreclusionState", WellKnownDeepSleepCommandPreclusionState_name, WellKnownDeepSleepCommandPreclusionState_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownDeepSleepCommandPreclusionStateTransitionTrigger", WellKnownDeepSleepCommandPreclusionStateTransitionTrigger_name, WellKnownDeepSleepCommandPreclusionStateTransitionTrigger_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownCarrierRegistrationCommandPreclusionState", WellKnownCarrierRegistrationCommandPreclusionState_name, WellKnownCarrierRegistrationCommandPreclusionState_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger", WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger_name, WellKnownCarrierRegistrationCommandPreclusionStateTransitionTrigger_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownTemperatureThresholdCommandPreclusionState", WellKnownTemperatureThresholdCommandPreclusionState_name, WellKnownTemperatureThresholdCommandPreclusionState_value)
	proto.RegisterEnum("autonomic.ext.event.state.commandpreclusionstate.WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger", WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger_name, WellKnownTemperatureThresholdCommandPreclusionStateTransitionTrigger_value)
	proto.RegisterType((*CommandPreclusionData)(nil), "autonomic.ext.event.state.commandpreclusionstate.CommandPreclusionData")
}

func init() {
	proto.RegisterFile("autonomic/ext/event/state/command_preclusion_state.proto", fileDescriptor_2c89bd58b5e10995)
}

var fileDescriptor_2c89bd58b5e10995 = []byte{
	// 897 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcf, 0x6f, 0xdc, 0x44,
	0x14, 0xee, 0xb8, 0xc0, 0xe1, 0xf1, 0x43, 0xc6, 0x12, 0x28, 0x2d, 0x6d, 0x08, 0x21, 0x41, 0x89,
	0x51, 0xd6, 0x51, 0x52, 0x10, 0x2d, 0x12, 0x95, 0xe3, 0x99, 0x24, 0x56, 0xbd, 0xf6, 0x6a, 0x3c,
	0xdb, 0x2d, 0xbd, 0x0c, 0xee, 0xee, 0x74, 0x63, 0x69, 0xd7, 0x5e, 0xcd, 0x7a, 0x69, 0xff, 0x15,
	0xae, 0x5c, 0x38, 0xf4, 0xc2, 0x0d, 0xc1, 0x09, 0xf1, 0x0f, 0x70, 0xe0, 0x00, 0x17, 0xfe, 0x0f,
	0x8e, 0xc8, 0xde, 0xdf, 0x6b, 0x7b, 0x53, 0x27, 0x97, 0x95, 0x76, 0xde, 0xf7, 0xde, 0xf7, 0xbd,
	0xef, 0xcd, 0x8c, 0x07, 0xbe, 0x0a, 0x46, 0x49, 0x1c, 0xc5, 0xfd, 0xb0, 0x6d, 0x88, 0x97, 0x89,
	0x21, 0xbe, 0x17, 0x51, 0x62, 0x0c, 0x93, 0x20, 0x11, 0x46, 0x3b, 0xee, 0xf7, 0x83, 0xa8, 0xc3,
	0x07, 0x52, 0xb4, 0x7b, 0xa3, 0x61, 0x18, 0x47, 0x3c, 0x0b, 0xd4, 0x06, 0x32, 0x4e, 0x62, 0xed,
	0x70, 0x96, 0x59, 0x13, 0x2f, 0x93, 0x5a, 0x96, 0x59, 0x1b, 0x03, 0x26, 0x99, 0xf3, 0xc4, 0x6c,
	0x79, 0xfb, 0x9f, 0x37, 0xe1, 0x03, 0x6b, 0x1c, 0x6a, 0xcc, 0x42, 0x38, 0x48, 0x02, 0xed, 0x15,
	0x82, 0x4f, 0x9e, 0x87, 0xb2, 0xff, 0x22, 0x90, 0x82, 0x8f, 0x06, 0x5d, 0x19, 0x74, 0x44, 0x8e,
	0x77, 0x03, 0x6d, 0xa1, 0xbd, 0xf7, 0x8e, 0xbe, 0xab, 0x55, 0x25, 0xae, 0xb5, 0x44, 0xaf, 0xf7,
	0x28, 0x8a, 0x5f, 0x44, 0xa7, 0x13, 0x8e, 0xe6, 0x98, 0x22, 0x27, 0xc6, 0x4f, 0xe1, 0x74, 0xf3,
	0xf9, 0x32, 0x6c, 0x25, 0xae, 0xfd, 0x80, 0xe0, 0xa3, 0x8e, 0x10, 0x03, 0x3e, 0xec, 0xa5, 0xbf,
	0x39, 0x9d, 0x4a, 0xa6, 0xf3, 0xe9, 0x35, 0x74, 0x62, 0x21, 0x06, 0x7e, 0x5a, 0xbc, 0x44, 0xe1,
	0x46, 0x67, 0x0a, 0x58, 0xd5, 0xf6, 0x0b, 0x82, 0xdd, 0x76, 0x20, 0x65, 0x28, 0x24, 0x97, 0xa2,
	0x1b, 0x0e, 0x13, 0x19, 0x24, 0xa9, 0xb4, 0x9c, 0xca, 0x9b, 0x99, 0xca, 0xce, 0x35, 0x54, 0x5a,
	0x63, 0x1e, 0xba, 0x40, 0x53, 0xa2, 0x77, 0xbb, 0x9d, 0x87, 0xae, 0x2a, 0xff, 0x0d, 0xc1, 0x67,
	0x89, 0xe8, 0x0f, 0x84, 0x0c, 0x92, 0x91, 0x14, 0x3c, 0xb9, 0x90, 0x62, 0x78, 0x11, 0xf7, 0xf2,
	0x1b, 0x70, 0xe3, 0x8d, 0x4c, 0xba, 0xb8, 0x86, 0x74, 0x36, 0x27, 0x62, 0x53, 0x9e, 0x12, 0xed,
	0x9f, 0x26, 0x05, 0xd8, 0x15, 0x90, 0xde, 0x81, 0x8f, 0xe7, 0xb6, 0x14, 0xd6, 0xd1, 0xde, 0x87,
	0x77, 0x9b, 0xee, 0x23, 0xd7, 0x6b, 0xb9, 0xdc, 0x67, 0x26, 0x23, 0xea, 0x0d, 0xed, 0x43, 0xd0,
	0x2c, 0xaf, 0x5e, 0x37, 0x5d, 0xec, 0xf3, 0x06, 0xa1, 0x75, 0x9b, 0x31, 0x82, 0x55, 0xb4, 0xbc,
	0x4e, 0x89, 0xe5, 0x34, 0x31, 0xc1, 0xaa, 0xa2, 0xff, 0x84, 0xe0, 0xf0, 0x12, 0x1a, 0x26, 0x83,
	0x68, 0x18, 0xa6, 0xfe, 0x32, 0x19, 0x76, 0xbb, 0x42, 0xa6, 0xc5, 0xa6, 0xbc, 0x8c, 0x9a, 0xae,
	0x6f, 0x33, 0xdb, 0x73, 0xd5, 0x1b, 0xda, 0x1d, 0xd8, 0x30, 0x1d, 0x67, 0x52, 0xdf, 0xb7, 0x3d,
	0xd7, 0xe7, 0x94, 0xf8, 0x9e, 0xf3, 0x98, 0x60, 0x15, 0xb4, 0xbb, 0x70, 0xcb, 0x25, 0xad, 0x85,
	0x28, 0xb7, 0x5d, 0x46, 0x3d, 0xdc, 0xb4, 0x08, 0x56, 0xdf, 0xd6, 0x36, 0xe1, 0xb6, 0x6f, 0xbb,
	0x67, 0x0e, 0x59, 0x44, 0xcc, 0xd2, 0xdf, 0xd1, 0x7f, 0x47, 0x50, 0xf1, 0xd4, 0x69, 0xf7, 0xe0,
	0x70, 0xaa, 0xf3, 0xd4, 0xa6, 0xf5, 0x96, 0x49, 0x09, 0x6f, 0x36, 0xb0, 0xc9, 0x08, 0x9f, 0x98,
	0xb1, 0xc8, 0x35, 0xb5, 0xf0, 0x00, 0xf6, 0x67, 0x56, 0xb9, 0x1e, 0x9b, 0xdb, 0xc5, 0x4f, 0xbe,
	0x5d, 0xad, 0xa3, 0x22, 0x6d, 0x1f, 0x76, 0xf3, 0xce, 0x16, 0x41, 0x15, 0xfd, 0x0f, 0x04, 0x0f,
	0xab, 0xb5, 0x90, 0xf7, 0xfe, 0x3e, 0x7c, 0x51, 0xa1, 0xa7, 0xa5, 0xf1, 0x6c, 0xc3, 0x66, 0xdd,
	0xc3, 0x4d, 0x87, 0xe4, 0x32, 0x7d, 0x66, 0xd2, 0xf1, 0x3e, 0xd9, 0x82, 0x3b, 0x25, 0x18, 0xe2,
	0x8e, 0x77, 0xcc, 0x2b, 0x04, 0x7b, 0xaf, 0x7b, 0xab, 0x68, 0x06, 0x7c, 0x3e, 0x55, 0x8b, 0x09,
	0x69, 0x70, 0xdf, 0x49, 0x7f, 0xd7, 0x98, 0xbf, 0x07, 0x3b, 0xe5, 0xe6, 0xcf, 0x4b, 0xa8, 0x48,
	0xdb, 0x81, 0xad, 0x62, 0xdf, 0x17, 0x50, 0x8a, 0xfe, 0x33, 0x82, 0xfb, 0xaf, 0xab, 0x36, 0x6f,
	0xf6, 0xc2, 0x06, 0x5a, 0x2f, 0x7f, 0xc9, 0xe7, 0x4d, 0xb8, 0x8d, 0xc9, 0x63, 0xdb, 0x4a, 0x3d,
	0x63, 0x84, 0xda, 0xee, 0xd9, 0xb2, 0xf2, 0xbb, 0x70, 0x6b, 0x1a, 0x7f, 0x62, 0xb3, 0x95, 0xb0,
	0xa2, 0xff, 0x85, 0xe0, 0xa8, 0xfa, 0x85, 0xb8, 0xb8, 0x31, 0x2c, 0x93, 0x52, 0x9b, 0x50, 0x4e,
	0xc9, 0x99, 0xed, 0x33, 0x6a, 0xa6, 0xba, 0xd6, 0x99, 0x7e, 0x04, 0xb5, 0x72, 0xd3, 0x8b, 0x8a,
	0xa9, 0x48, 0xab, 0x81, 0x5e, 0x6c, 0x7f, 0x21, 0x5e, 0xd1, 0xff, 0x44, 0x60, 0x55, 0xef, 0x2a,
	0x3f, 0x92, 0x6f, 0xe0, 0x41, 0xd5, 0x36, 0x97, 0x86, 0xb3, 0x03, 0x5b, 0x13, 0xf3, 0x31, 0x19,
	0x27, 0x12, 0x4a, 0x30, 0x3f, 0xa5, 0x5e, 0x7d, 0x5a, 0x50, 0x45, 0xe9, 0x51, 0x99, 0xa0, 0x16,
	0x30, 0x2d, 0x9b, 0x9d, 0xcf, 0x30, 0x8a, 0xfe, 0x37, 0x82, 0xe3, 0x2b, 0xdc, 0xfe, 0xda, 0x03,
	0xf8, 0x72, 0x76, 0x7b, 0x92, 0x7a, 0x83, 0x50, 0x93, 0x35, 0x29, 0xe1, 0xec, 0x9c, 0x12, 0xff,
	0xdc, 0x73, 0xf0, 0xba, 0x49, 0x1d, 0x83, 0x51, 0x3e, 0xa9, 0xc2, 0x6a, 0x2a, 0x4a, 0x0f, 0x61,
	0xf1, 0xa8, 0x8a, 0x13, 0x14, 0xfd, 0x5f, 0x04, 0xf8, 0x0a, 0x9d, 0xe5, 0x87, 0xf5, 0x10, 0xbe,
	0xae, 0xdc, 0xea, 0xd2, 0xb4, 0xf6, 0x61, 0x77, 0x32, 0x87, 0xe2, 0x7c, 0xf2, 0xc4, 0x22, 0x04,
	0x67, 0x37, 0xd7, 0x65, 0x50, 0x2f, 0x5d, 0x3b, 0x71, 0x88, 0xaa, 0x9c, 0xfc, 0x8a, 0xe0, 0x5e,
	0x3b, 0xee, 0x57, 0xfe, 0xd8, 0x9f, 0xec, 0x5c, 0xf2, 0xa9, 0x6c, 0xa4, 0xcf, 0xd8, 0x06, 0x7a,
	0xda, 0xe8, 0x86, 0xc9, 0xc5, 0xe8, 0x59, 0x5a, 0xc6, 0x98, 0x91, 0x1c, 0x04, 0x61, 0xfa, 0x20,
	0x16, 0x32, 0x0a, 0x7a, 0x07, 0xd9, 0x83, 0x77, 0x68, 0x0c, 0x65, 0xdb, 0xe8, 0x07, 0x61, 0x64,
	0x64, 0xff, 0x8d, 0xd2, 0x97, 0xf3, 0x7f, 0x08, 0xfd, 0xa8, 0xdc, 0x34, 0x9b, 0xec, 0xd9, 0x5b,
	0x19, 0xf2, 0xf8, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xac, 0xaa, 0x31, 0x75, 0x66, 0x0b, 0x00,
	0x00,
}
