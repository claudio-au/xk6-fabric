/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
syntax = "proto3";

package autonomic.ext.event.state.devicediagnostic;

option go_package = "xk6-fabric/proto/autonomic/ext/event/state";
option java_package = "com.autonomic.ext.event.state.devicediagnostic";
option java_outer_classname = "WellKnownDeviceDiagnosticStateProto";
option java_multiple_files = true;

option cc_enable_arenas = true;

option objc_class_prefix = "AUT";

enum WellKnownDeviceDiagnosticState {
    UNKNOWN_STATE = 0;

    // Request was received by cloud through API
    // Emitted by: cloud
    REQUESTED = 1;

    // Request was queued in the cloud, waiting for device
    // to connect.
    // Emitted by: cloud
    // Triggered by: REQUEST_QUEUED_FOR_DELIVERY
    REQUEST_DELIVERY_QUEUED = 2;

    // Cloud attempted delivery of request to device
    // Emitted by: cloud
    // Triggered by: DEVICE_CONNECTED_TO_CLOUD
    REQUEST_DELIVERY_IN_PROGRESS = 3;

    // Delivery of request attempt was not acknowledged by device in a timely fashion
    // Emitted by: cloud
    // Triggered by: REQUEST_DELIVERY_TIMEOUT_EXCEEDED
    REQUEST_DELIVERY_TIMED_OUT = 4;

    // Delivery of request attempt failed due to device disconnect
    // Emitted by: cloud
    // Triggered by: REQUEST_DELIVERY_FAILED
    REQUEST_DELIVERY_FAILURE = 5;

    // Request is acknowledged by device, queued, and the device will begin
    // processing the request when the device is ready.
    // Emitted by: device
    // Triggered by: REQUEST_QUEUED_ON_DEVICE
    REQUEST_QUEUED = 6;

    // Request is being decrypted and validated by device
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_STARTED
    REQUEST_VALIDATION_IN_PROGRESS = 7;

    // Request failed validation or decryption
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_FAILED
    REQUEST_VALIDATION_FAILURE = 8;

    // Device is being reconfigured based on this request
    // (e.g. increase logging, etc.)
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_SUCCEEDED
    RECONFIGURATION_IN_PROGRESS = 9;

    // Device could not be reconfigured for increased diagnostics
    // Emitted by: device
    // Triggered by: RECONFIGURATION_FAILED
    RECONFIGURATION_FAILURE = 10;

    // Data is being collected for a configured period of time
    // Emitted by: device
    // Triggered by: DATA_CAPTURE_STARTED
    DATA_CAPTURE_IN_PROGRESS = 11;

    // Data capture failed (e.g. out of disk, etc.)
    // Emitted by: device
    // Triggered by: DATA_CAPTURE_FAILED
    DATA_CAPTURE_FAILURE = 12;

    // Data archival has started (e.g. log compression, etc.)
    // Emitted by: device
    // Triggered by: DATA_ARCHIVAL_STARTED
    DATA_ARCHIVAL_IN_PROGRESS = 13;

    // Device Diagnostic Archival failed (e.g. out of space, etc.)
    // Emitted by: device
    // Triggered by: DATA_ARCHIVAL_FAILED
    DATA_ARCHIVAL_FAILURE = 14;

    // Device diagnostic archive is being uploaded to cloud SDN
    // Emitted by: device
    // Triggered by: ARCHIVE_UPLOAD_STARTED
    ARCHIVE_UPLOAD_IN_PROGRESS = 15;

    // Device diagnostic upload failed. Device may retry or transition into a
    // terminal failure state.
    // Emitted by: device
    // Triggered by: ARCHIVE_UPLOAD_FAILED
    ARCHIVE_UPLOAD_FAILURE = 16;

    // The device has successfully completed the device diagnostic command in question.
    // Triggered by: COMPLETED
    SUCCEEDED_ON_DEVICE = 26;

    // Device diagnostic upload succeeded, and the URI(s) of the archive(s) has been
    // added to the event containing this state.
    // This state is terminal
    // Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED
    SUCCESS = 17;

    // Device diagnostic failed. All intermediate failure states should transition to
    // this state.
    // Emitted by: device
    // Triggered by: FAILED
    FAILURE = 18;

    // Device diagnostic command expired. This event can be emitted by
    // the device or the cloud. In either case, it will cause
    // the command to be removed from the set of in-progress commands
    // on the cloud. However the cloud does not send this event to
    // the device. This state is terminal.
    // Triggered by: EXPIRATION_EXCEEDED
    EXPIRED = 19;

    // Command is being removed from set of in-progress
    // commands from the cloud. Emitted by cloud.
    // Triggered by: CANCELLATION_REQUESTED
    CANCELLATION_IN_PROGRESS = 21;

    // Command was successfully removed from set of in-progress
    // commands from the cloud. Emitted by cloud.
    // Triggered by: CANCELLATION_REQUEST_FULFILLED
    CANCELLED = 22;

    // Oem cloud attempted delivery of request
    // Emitted by: cloud
    // Triggered by: CLOUD_REQUEST_PROCESSING_SUCCEEDED
    OEM_CLOUD_DELIVERY_IN_PROGRESS = 23;

    // OEM Cloud attempted translation of request
    // Emitted by: cloud
    // Triggered by: OEM_CLOUD_DELIVERY_SUCCEEDED
    OEM_CLOUD_TRANSLATION_IN_PROGRESS = 24;

    // OEM Cloud attempted delivery of request
    // Emitted by: cloud
    // Triggered by: OEM_CLOUD_TRANSLATION_SUCCEEDED
    OEM_CLOUD_TO_DEVICE_DELIVERY_IN_PROGRESS = 28;

    // The cloud is in the process of validating the event emitted by the device indicating that the
    // command has succeeded.
    // Triggered by: SUCCEEDED_ON_DEVICE_EVENT_RECEIVED
    CLOUD_VALIDATION_IN_PROGRESS = 27;

    // Cloud failed to validate data provided by the device
    // Emitted by: cloud
    // Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED
    CLOUD_VALIDATION_FAILURE = 25;
}

// Device Diagnostic state transition triggers. See WellKnownDeviceDiagnosticState enum
// for documentation on when these triggers occur.
enum WellKnownDeviceDiagnosticTransitionTrigger {
    UNKNOWN_TRANSITION_TRIGGER = 0;

    REQUEST_QUEUED_FOR_DELIVERY = 1;                    // cloud
    DEVICE_CONNECTED_TO_CLOUD = 2;                      // cloud
    REQUEST_DELIVERY_FAILED = 3;                        // cloud
    REQUEST_DELIVERY_TIMEOUT_EXCEEDED = 4;              // cloud
    CLOUD_REQUEST_PROCESSING_SUCCEEDED = 30;            // cloud

    REQUEST_QUEUED_ON_DEVICE = 8;                       // device

    REQUEST_VALIDATION_STARTED = 9;                     // device
    REQUEST_VALIDATION_FAILED = 10;                     // device
    REQUEST_VALIDATION_SUCCEEDED = 28;                  // device

    RECONFIGURATION_STARTED = 11;                       // device
    RECONFIGURATION_FAILED = 12;                        // device

    DATA_CAPTURE_STARTED = 13;                          // device
    DATA_CAPTURE_FAILED = 14;                           // device

    DATA_ARCHIVAL_STARTED = 15;                         // device
    DATA_ARCHIVAL_FAILED = 16;                          // device

    ARCHIVE_UPLOAD_STARTED = 17;                        // device
    ARCHIVE_UPLOAD_FAILED = 18;                         // device

    COMPLETED = 19;                                     // device

    EXPIRATION_EXCEEDED = 20;                           // device or cloud

    CANCELLATION_REQUESTED = 21;                        // cloud
    CANCELLATION_REQUEST_FULFILLED = 22;                // cloud

    OEM_CLOUD_DELIVERY_SUCCEEDED = 23;                  // cloud
    OEM_CLOUD_TRANSLATION_SUCCEEDED = 24;               // cloud

    SUCCEEDED_ON_DEVICE_EVENT_RECEIVED = 29;            // cloud
    CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED = 25;     // cloud
    CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED = 26;        // cloud

    FAILED = 27;                                        // device
}
