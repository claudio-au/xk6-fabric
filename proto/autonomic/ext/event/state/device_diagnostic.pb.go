/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/event/state/device_diagnostic.proto

package state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WellKnownDeviceDiagnosticState int32

const (
	WellKnownDeviceDiagnosticState_UNKNOWN_STATE WellKnownDeviceDiagnosticState = 0
	// Request was received by cloud through API
	// Emitted by: cloud
	WellKnownDeviceDiagnosticState_REQUESTED WellKnownDeviceDiagnosticState = 1
	// Request was queued in the cloud, waiting for device
	// to connect.
	// Emitted by: cloud
	// Triggered by: REQUEST_QUEUED_FOR_DELIVERY
	WellKnownDeviceDiagnosticState_REQUEST_DELIVERY_QUEUED WellKnownDeviceDiagnosticState = 2
	// Cloud attempted delivery of request to device
	// Emitted by: cloud
	// Triggered by: OEM_CLOUD_TRANSLATION_SUCCEEDED
	WellKnownDeviceDiagnosticState_REQUEST_DELIVERY_IN_PROGRESS WellKnownDeviceDiagnosticState = 3
	// Delivery of request attempt was not acknowledged by device in a timely fashion
	// Emitted by: cloud
	// Triggered by: REQUEST_DELIVERY_TIMEOUT_EXCEEDED
	WellKnownDeviceDiagnosticState_REQUEST_DELIVERY_TIMED_OUT WellKnownDeviceDiagnosticState = 4
	// Delivery of request attempt failed due to device disconnect
	// Emitted by: cloud
	// Triggered by: REQUEST_DELIVERY_FAILED
	WellKnownDeviceDiagnosticState_REQUEST_DELIVERY_FAILURE WellKnownDeviceDiagnosticState = 5
	// Request is acknowledged by device, queued, and the device will begin
	// processing the request when the device is ready.
	// Emitted by: device
	// Triggered by: REQUEST_QUEUED_ON_DEVICE
	WellKnownDeviceDiagnosticState_REQUEST_QUEUED WellKnownDeviceDiagnosticState = 6
	// Request is being decrypted and validated by device
	// Emitted by: device
	// Triggered by: REQUEST_VALIDATION_STARTED
	WellKnownDeviceDiagnosticState_REQUEST_VALIDATION_IN_PROGRESS WellKnownDeviceDiagnosticState = 7
	// Request failed validation or decryption
	// Emitted by: device
	// Triggered by: REQUEST_VALIDATION_FAILED
	WellKnownDeviceDiagnosticState_REQUEST_VALIDATION_FAILURE WellKnownDeviceDiagnosticState = 8
	// Device is being reconfigured based on this request
	// (e.g. increase logging, etc.)
	// Emitted by: device
	// Triggered by: REQUEST_VALIDATION_SUCCEEDED
	WellKnownDeviceDiagnosticState_RECONFIGURATION_IN_PROGRESS WellKnownDeviceDiagnosticState = 9
	// Device could not be reconfigured for increased diagnostics
	// Emitted by: device
	// Triggered by: RECONFIGURATION_FAILED
	WellKnownDeviceDiagnosticState_RECONFIGURATION_FAILURE WellKnownDeviceDiagnosticState = 10
	// Data is being collected for a configured period of time
	// Emitted by: device
	// Triggered by: DATA_CAPTURE_STARTED
	WellKnownDeviceDiagnosticState_DATA_CAPTURE_IN_PROGRESS WellKnownDeviceDiagnosticState = 11
	// Data capture failed (e.g. out of disk, etc.)
	// Emitted by: device
	// Triggered by: DATA_CAPTURE_FAILED
	WellKnownDeviceDiagnosticState_DATA_CAPTURE_FAILURE WellKnownDeviceDiagnosticState = 12
	// Data archival has started (e.g. log compression, etc.)
	// Emitted by: device
	// Triggered by: DATA_ARCHIVAL_STARTED
	WellKnownDeviceDiagnosticState_DATA_ARCHIVAL_IN_PROGRESS WellKnownDeviceDiagnosticState = 13
	// Device Diagnostic Archival failed (e.g. out of space, etc.)
	// Emitted by: device
	// Triggered by: DATA_ARCHIVAL_FAILED
	WellKnownDeviceDiagnosticState_DATA_ARCHIVAL_FAILURE WellKnownDeviceDiagnosticState = 14
	// Device diagnostic archive is being uploaded to cloud SDN
	// Emitted by: device
	// Triggered by: ARCHIVE_UPLOAD_STARTED
	WellKnownDeviceDiagnosticState_ARCHIVE_UPLOAD_IN_PROGRESS WellKnownDeviceDiagnosticState = 15
	// Device diagnostic upload failed. Device may retry or transition into a
	// terminal failure state.
	// Emitted by: device
	// Triggered by: ARCHIVE_UPLOAD_FAILED
	WellKnownDeviceDiagnosticState_ARCHIVE_UPLOAD_FAILURE WellKnownDeviceDiagnosticState = 16
	// The device has successfully completed the device diagnostic command in question.
	// Triggered by: COMPLETED
	WellKnownDeviceDiagnosticState_SUCCEEDED_ON_DEVICE WellKnownDeviceDiagnosticState = 26
	// Device diagnostic upload succeeded, and the URI(s) of the archive(s) has been
	// added to the event containing this state.
	// This state is terminal
	// Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED
	WellKnownDeviceDiagnosticState_SUCCESS WellKnownDeviceDiagnosticState = 17
	// Device diagnostic failed. All intermediate failure states should transition to
	// this state.
	// Emitted by: device
	// Triggered by: FAILED
	WellKnownDeviceDiagnosticState_FAILURE WellKnownDeviceDiagnosticState = 18
	// Device diagnostic command expired. This event can be emitted by
	// the device or the cloud. In either case, it will cause
	// the command to be removed from the set of in-progress commands
	// on the cloud. However the cloud does not send this event to
	// the device. This state is terminal.
	// Triggered by: EXPIRATION_EXCEEDED
	WellKnownDeviceDiagnosticState_EXPIRED WellKnownDeviceDiagnosticState = 19
	// Command is being removed from set of in-progress
	// commands from the cloud. Emitted by cloud.
	// Triggered by: CANCELLATION_REQUESTED
	WellKnownDeviceDiagnosticState_CANCELLATION_IN_PROGRESS WellKnownDeviceDiagnosticState = 21
	// Command was successfully removed from set of in-progress
	// commands from the cloud. Emitted by cloud.
	// Triggered by: CANCELLATION_REQUEST_FULFILLED
	WellKnownDeviceDiagnosticState_CANCELLED WellKnownDeviceDiagnosticState = 22
	// Oem cloud attempted delivery of request
	// Emitted by: cloud
	// Triggered by: DEVICE_CONNECTED_TO_CLOUD
	WellKnownDeviceDiagnosticState_OEM_CLOUD_DELIVERY_IN_PROGRESS WellKnownDeviceDiagnosticState = 23
	// Cloud attempted translation of request
	// Emitted by: cloud
	// Triggered by: OEM_CLOUD_DELIVERY_SUCCEEDED
	WellKnownDeviceDiagnosticState_OEM_CLOUD_TRANSLATION_IN_PROGRESS WellKnownDeviceDiagnosticState = 24
	// The cloud is in the process of validating the event emitted by the device indicating that the
	// command has succeeded.
	// Triggered by: SUCCEEDED_ON_DEVICE_EVENT_RECEIVED
	WellKnownDeviceDiagnosticState_CLOUD_VALIDATION_IN_PROGRESS WellKnownDeviceDiagnosticState = 27
	// Cloud failed to validate data provided by the device
	// Emitted by: cloud
	// Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED
	WellKnownDeviceDiagnosticState_CLOUD_VALIDATION_FAILURE WellKnownDeviceDiagnosticState = 25
)

var WellKnownDeviceDiagnosticState_name = map[int32]string{
	0:  "UNKNOWN_STATE",
	1:  "REQUESTED",
	2:  "REQUEST_DELIVERY_QUEUED",
	3:  "REQUEST_DELIVERY_IN_PROGRESS",
	4:  "REQUEST_DELIVERY_TIMED_OUT",
	5:  "REQUEST_DELIVERY_FAILURE",
	6:  "REQUEST_QUEUED",
	7:  "REQUEST_VALIDATION_IN_PROGRESS",
	8:  "REQUEST_VALIDATION_FAILURE",
	9:  "RECONFIGURATION_IN_PROGRESS",
	10: "RECONFIGURATION_FAILURE",
	11: "DATA_CAPTURE_IN_PROGRESS",
	12: "DATA_CAPTURE_FAILURE",
	13: "DATA_ARCHIVAL_IN_PROGRESS",
	14: "DATA_ARCHIVAL_FAILURE",
	15: "ARCHIVE_UPLOAD_IN_PROGRESS",
	16: "ARCHIVE_UPLOAD_FAILURE",
	26: "SUCCEEDED_ON_DEVICE",
	17: "SUCCESS",
	18: "FAILURE",
	19: "EXPIRED",
	21: "CANCELLATION_IN_PROGRESS",
	22: "CANCELLED",
	23: "OEM_CLOUD_DELIVERY_IN_PROGRESS",
	24: "OEM_CLOUD_TRANSLATION_IN_PROGRESS",
	27: "CLOUD_VALIDATION_IN_PROGRESS",
	25: "CLOUD_VALIDATION_FAILURE",
}

var WellKnownDeviceDiagnosticState_value = map[string]int32{
	"UNKNOWN_STATE":                     0,
	"REQUESTED":                         1,
	"REQUEST_DELIVERY_QUEUED":           2,
	"REQUEST_DELIVERY_IN_PROGRESS":      3,
	"REQUEST_DELIVERY_TIMED_OUT":        4,
	"REQUEST_DELIVERY_FAILURE":          5,
	"REQUEST_QUEUED":                    6,
	"REQUEST_VALIDATION_IN_PROGRESS":    7,
	"REQUEST_VALIDATION_FAILURE":        8,
	"RECONFIGURATION_IN_PROGRESS":       9,
	"RECONFIGURATION_FAILURE":           10,
	"DATA_CAPTURE_IN_PROGRESS":          11,
	"DATA_CAPTURE_FAILURE":              12,
	"DATA_ARCHIVAL_IN_PROGRESS":         13,
	"DATA_ARCHIVAL_FAILURE":             14,
	"ARCHIVE_UPLOAD_IN_PROGRESS":        15,
	"ARCHIVE_UPLOAD_FAILURE":            16,
	"SUCCEEDED_ON_DEVICE":               26,
	"SUCCESS":                           17,
	"FAILURE":                           18,
	"EXPIRED":                           19,
	"CANCELLATION_IN_PROGRESS":          21,
	"CANCELLED":                         22,
	"OEM_CLOUD_DELIVERY_IN_PROGRESS":    23,
	"OEM_CLOUD_TRANSLATION_IN_PROGRESS": 24,
	"CLOUD_VALIDATION_IN_PROGRESS":      27,
	"CLOUD_VALIDATION_FAILURE":          25,
}

func (x WellKnownDeviceDiagnosticState) String() string {
	return proto.EnumName(WellKnownDeviceDiagnosticState_name, int32(x))
}

func (WellKnownDeviceDiagnosticState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_45b537272c2d36d4, []int{0}
}

// Device Diagnostic state transition triggers. See WellKnownDeviceDiagnosticState enum
// for documentation on when these triggers occur.
type WellKnownDeviceDiagnosticTransitionTrigger int32

const (
	WellKnownDeviceDiagnosticTransitionTrigger_UNKNOWN_TRANSITION_TRIGGER                WellKnownDeviceDiagnosticTransitionTrigger = 0
	WellKnownDeviceDiagnosticTransitionTrigger_REQUEST_QUEUED_FOR_DELIVERY               WellKnownDeviceDiagnosticTransitionTrigger = 1
	WellKnownDeviceDiagnosticTransitionTrigger_DEVICE_CONNECTED_TO_CLOUD                 WellKnownDeviceDiagnosticTransitionTrigger = 2
	WellKnownDeviceDiagnosticTransitionTrigger_REQUEST_DELIVERY_FAILED                   WellKnownDeviceDiagnosticTransitionTrigger = 3
	WellKnownDeviceDiagnosticTransitionTrigger_REQUEST_DELIVERY_TIMEOUT_EXCEEDED         WellKnownDeviceDiagnosticTransitionTrigger = 4
	WellKnownDeviceDiagnosticTransitionTrigger_REQUEST_QUEUED_ON_DEVICE                  WellKnownDeviceDiagnosticTransitionTrigger = 8
	WellKnownDeviceDiagnosticTransitionTrigger_REQUEST_VALIDATION_STARTED                WellKnownDeviceDiagnosticTransitionTrigger = 9
	WellKnownDeviceDiagnosticTransitionTrigger_REQUEST_VALIDATION_FAILED                 WellKnownDeviceDiagnosticTransitionTrigger = 10
	WellKnownDeviceDiagnosticTransitionTrigger_REQUEST_VALIDATION_SUCCEEDED              WellKnownDeviceDiagnosticTransitionTrigger = 28
	WellKnownDeviceDiagnosticTransitionTrigger_RECONFIGURATION_STARTED                   WellKnownDeviceDiagnosticTransitionTrigger = 11
	WellKnownDeviceDiagnosticTransitionTrigger_RECONFIGURATION_FAILED                    WellKnownDeviceDiagnosticTransitionTrigger = 12
	WellKnownDeviceDiagnosticTransitionTrigger_DATA_CAPTURE_STARTED                      WellKnownDeviceDiagnosticTransitionTrigger = 13
	WellKnownDeviceDiagnosticTransitionTrigger_DATA_CAPTURE_FAILED                       WellKnownDeviceDiagnosticTransitionTrigger = 14
	WellKnownDeviceDiagnosticTransitionTrigger_DATA_ARCHIVAL_STARTED                     WellKnownDeviceDiagnosticTransitionTrigger = 15
	WellKnownDeviceDiagnosticTransitionTrigger_DATA_ARCHIVAL_FAILED                      WellKnownDeviceDiagnosticTransitionTrigger = 16
	WellKnownDeviceDiagnosticTransitionTrigger_ARCHIVE_UPLOAD_STARTED                    WellKnownDeviceDiagnosticTransitionTrigger = 17
	WellKnownDeviceDiagnosticTransitionTrigger_ARCHIVE_UPLOAD_FAILED                     WellKnownDeviceDiagnosticTransitionTrigger = 18
	WellKnownDeviceDiagnosticTransitionTrigger_COMPLETED                                 WellKnownDeviceDiagnosticTransitionTrigger = 19
	WellKnownDeviceDiagnosticTransitionTrigger_EXPIRATION_EXCEEDED                       WellKnownDeviceDiagnosticTransitionTrigger = 20
	WellKnownDeviceDiagnosticTransitionTrigger_CANCELLATION_REQUESTED                    WellKnownDeviceDiagnosticTransitionTrigger = 21
	WellKnownDeviceDiagnosticTransitionTrigger_CANCELLATION_REQUEST_FULFILLED            WellKnownDeviceDiagnosticTransitionTrigger = 22
	WellKnownDeviceDiagnosticTransitionTrigger_OEM_CLOUD_DELIVERY_SUCCEEDED              WellKnownDeviceDiagnosticTransitionTrigger = 23
	WellKnownDeviceDiagnosticTransitionTrigger_OEM_CLOUD_TRANSLATION_SUCCEEDED           WellKnownDeviceDiagnosticTransitionTrigger = 24
	WellKnownDeviceDiagnosticTransitionTrigger_SUCCEEDED_ON_DEVICE_EVENT_RECEIVED        WellKnownDeviceDiagnosticTransitionTrigger = 29
	WellKnownDeviceDiagnosticTransitionTrigger_CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED WellKnownDeviceDiagnosticTransitionTrigger = 25
	WellKnownDeviceDiagnosticTransitionTrigger_CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED    WellKnownDeviceDiagnosticTransitionTrigger = 26
	WellKnownDeviceDiagnosticTransitionTrigger_FAILED                                    WellKnownDeviceDiagnosticTransitionTrigger = 27
)

var WellKnownDeviceDiagnosticTransitionTrigger_name = map[int32]string{
	0:  "UNKNOWN_TRANSITION_TRIGGER",
	1:  "REQUEST_QUEUED_FOR_DELIVERY",
	2:  "DEVICE_CONNECTED_TO_CLOUD",
	3:  "REQUEST_DELIVERY_FAILED",
	4:  "REQUEST_DELIVERY_TIMEOUT_EXCEEDED",
	8:  "REQUEST_QUEUED_ON_DEVICE",
	9:  "REQUEST_VALIDATION_STARTED",
	10: "REQUEST_VALIDATION_FAILED",
	28: "REQUEST_VALIDATION_SUCCEEDED",
	11: "RECONFIGURATION_STARTED",
	12: "RECONFIGURATION_FAILED",
	13: "DATA_CAPTURE_STARTED",
	14: "DATA_CAPTURE_FAILED",
	15: "DATA_ARCHIVAL_STARTED",
	16: "DATA_ARCHIVAL_FAILED",
	17: "ARCHIVE_UPLOAD_STARTED",
	18: "ARCHIVE_UPLOAD_FAILED",
	19: "COMPLETED",
	20: "EXPIRATION_EXCEEDED",
	21: "CANCELLATION_REQUESTED",
	22: "CANCELLATION_REQUEST_FULFILLED",
	23: "OEM_CLOUD_DELIVERY_SUCCEEDED",
	24: "OEM_CLOUD_TRANSLATION_SUCCEEDED",
	29: "SUCCEEDED_ON_DEVICE_EVENT_RECEIVED",
	25: "CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED",
	26: "CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED",
	27: "FAILED",
}

var WellKnownDeviceDiagnosticTransitionTrigger_value = map[string]int32{
	"UNKNOWN_TRANSITION_TRIGGER":                0,
	"REQUEST_QUEUED_FOR_DELIVERY":               1,
	"DEVICE_CONNECTED_TO_CLOUD":                 2,
	"REQUEST_DELIVERY_FAILED":                   3,
	"REQUEST_DELIVERY_TIMEOUT_EXCEEDED":         4,
	"REQUEST_QUEUED_ON_DEVICE":                  8,
	"REQUEST_VALIDATION_STARTED":                9,
	"REQUEST_VALIDATION_FAILED":                 10,
	"REQUEST_VALIDATION_SUCCEEDED":              28,
	"RECONFIGURATION_STARTED":                   11,
	"RECONFIGURATION_FAILED":                    12,
	"DATA_CAPTURE_STARTED":                      13,
	"DATA_CAPTURE_FAILED":                       14,
	"DATA_ARCHIVAL_STARTED":                     15,
	"DATA_ARCHIVAL_FAILED":                      16,
	"ARCHIVE_UPLOAD_STARTED":                    17,
	"ARCHIVE_UPLOAD_FAILED":                     18,
	"COMPLETED":                                 19,
	"EXPIRATION_EXCEEDED":                       20,
	"CANCELLATION_REQUESTED":                    21,
	"CANCELLATION_REQUEST_FULFILLED":            22,
	"OEM_CLOUD_DELIVERY_SUCCEEDED":              23,
	"OEM_CLOUD_TRANSLATION_SUCCEEDED":           24,
	"SUCCEEDED_ON_DEVICE_EVENT_RECEIVED":        29,
	"CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED": 25,
	"CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED":    26,
	"FAILED":                                    27,
}

func (x WellKnownDeviceDiagnosticTransitionTrigger) String() string {
	return proto.EnumName(WellKnownDeviceDiagnosticTransitionTrigger_name, int32(x))
}

func (WellKnownDeviceDiagnosticTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_45b537272c2d36d4, []int{1}
}

func init() {
	proto.RegisterEnum("autonomic.ext.event.state.devicediagnostic.WellKnownDeviceDiagnosticState", WellKnownDeviceDiagnosticState_name, WellKnownDeviceDiagnosticState_value)
	proto.RegisterEnum("autonomic.ext.event.state.devicediagnostic.WellKnownDeviceDiagnosticTransitionTrigger", WellKnownDeviceDiagnosticTransitionTrigger_name, WellKnownDeviceDiagnosticTransitionTrigger_value)
}

func init() {
	proto.RegisterFile("autonomic/ext/event/state/device_diagnostic.proto", fileDescriptor_45b537272c2d36d4)
}

var fileDescriptor_45b537272c2d36d4 = []byte{
	// 789 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xed, 0x6e, 0xdb, 0x36,
	0x14, 0xad, 0x93, 0xd5, 0x6d, 0x98, 0x3a, 0x65, 0x98, 0xa6, 0xfe, 0x6c, 0xda, 0xb5, 0x58, 0x81,
	0x19, 0x88, 0x85, 0x61, 0x4f, 0xa0, 0x8a, 0xd7, 0x9e, 0x10, 0x45, 0x52, 0x28, 0xca, 0xc9, 0xf6,
	0x87, 0x70, 0x1c, 0xc1, 0x13, 0x90, 0x48, 0x83, 0xad, 0x64, 0x79, 0x9e, 0x3d, 0xc2, 0xde, 0x69,
	0xef, 0x30, 0x60, 0x7f, 0x06, 0x52, 0xa6, 0x6d, 0x45, 0xf2, 0xd6, 0x7f, 0xa6, 0xce, 0x3d, 0x97,
	0xf7, 0x5e, 0x9e, 0xe3, 0x8b, 0x7e, 0x98, 0xdc, 0x67, 0x69, 0x92, 0xde, 0xc5, 0x53, 0x23, 0x7a,
	0xcc, 0x8c, 0xe8, 0x21, 0x4a, 0x32, 0x63, 0x91, 0x4d, 0xb2, 0xc8, 0xb8, 0x89, 0x1e, 0xe2, 0x69,
	0x24, 0x6e, 0xe2, 0xc9, 0x2c, 0x49, 0x17, 0x59, 0x3c, 0x1d, 0xfc, 0x36, 0x4f, 0xb3, 0x94, 0xf4,
	0x57, 0x94, 0x41, 0xf4, 0x98, 0x0d, 0x14, 0x65, 0xa0, 0x28, 0x83, 0x9c, 0xb2, 0x66, 0xf4, 0xff,
	0x79, 0x8e, 0x4e, 0x2e, 0xa3, 0xdb, 0xdb, 0xb3, 0x24, 0xfd, 0x3d, 0xa1, 0x0a, 0xa5, 0x2b, 0x34,
	0x90, 0x1c, 0x72, 0x88, 0x1a, 0xa1, 0x7b, 0xe6, 0x7a, 0x97, 0xae, 0x08, 0xb8, 0xc9, 0x01, 0x3f,
	0x23, 0x0d, 0xb4, 0xc7, 0xe0, 0x22, 0x84, 0x80, 0x03, 0xc5, 0x35, 0xd2, 0x45, 0xcd, 0xe5, 0x51,
	0x50, 0x70, 0xec, 0x31, 0xb0, 0x9f, 0xc5, 0x45, 0x08, 0x21, 0x50, 0xbc, 0x43, 0x3e, 0xa0, 0x5e,
	0x09, 0xb4, 0x5d, 0xe1, 0x33, 0x6f, 0xc4, 0x20, 0x08, 0xf0, 0x2e, 0x39, 0x41, 0x9d, 0x52, 0x04,
	0xb7, 0xcf, 0x81, 0x0a, 0x2f, 0xe4, 0xf8, 0x1b, 0xd2, 0x43, 0xad, 0x12, 0x3e, 0x34, 0x6d, 0x27,
	0x64, 0x80, 0x9f, 0x13, 0x82, 0x0e, 0x34, 0xba, 0xbc, 0xb3, 0x4e, 0x3e, 0xa2, 0x13, 0xfd, 0x6d,
	0x6c, 0x3a, 0x36, 0x35, 0xb9, 0xed, 0xb9, 0x85, 0x5b, 0x5f, 0x6c, 0xde, 0xba, 0x11, 0xa3, 0xf3,
	0xbe, 0x24, 0xef, 0x51, 0x97, 0x81, 0xe5, 0xb9, 0x43, 0x7b, 0x14, 0xb2, 0x72, 0x82, 0xbd, 0xbc,
	0xeb, 0x62, 0x80, 0x66, 0x23, 0x59, 0x33, 0x35, 0xb9, 0x29, 0x2c, 0xd3, 0xe7, 0x21, 0x83, 0x02,
	0x75, 0x9f, 0xb4, 0xd0, 0x9b, 0x02, 0xaa, 0x79, 0xaf, 0xc8, 0x3b, 0xd4, 0x56, 0x88, 0xc9, 0xac,
	0x9f, 0xec, 0xb1, 0xe9, 0x14, 0x88, 0x0d, 0xd2, 0x46, 0xc7, 0x45, 0x58, 0x33, 0x0f, 0x64, 0x3f,
	0xf9, 0x57, 0x10, 0xa1, 0xef, 0x78, 0x26, 0x2d, 0x50, 0x5f, 0x93, 0x0e, 0x7a, 0xfb, 0x04, 0xd7,
	0x5c, 0x4c, 0x9a, 0xe8, 0x28, 0x08, 0x2d, 0x0b, 0x80, 0xca, 0xa1, 0xbb, 0x82, 0xc2, 0xd8, 0xb6,
	0x00, 0x77, 0xc8, 0x3e, 0x7a, 0xa1, 0x80, 0x20, 0xc0, 0x87, 0xf2, 0xa0, 0x29, 0x44, 0x1e, 0xe0,
	0xca, 0xb7, 0x19, 0x50, 0x7c, 0x24, 0xbb, 0xb5, 0x4c, 0xd7, 0x02, 0xc7, 0x29, 0x0f, 0xea, 0x58,
	0xaa, 0x65, 0x89, 0x02, 0xc5, 0x6f, 0xe5, 0xe3, 0x78, 0x70, 0x2e, 0x2c, 0xc7, 0x0b, 0x69, 0xb5,
	0x24, 0x9a, 0xe4, 0x3b, 0xf4, 0xed, 0x3a, 0x86, 0x33, 0xd3, 0x0d, 0x2a, 0x32, 0xb7, 0xa4, 0xb6,
	0xf2, 0x90, 0x2d, 0xaf, 0xdc, 0x55, 0x95, 0x3d, 0x8d, 0xd0, 0x4d, 0xb4, 0xfb, 0x7f, 0xd5, 0x51,
	0x7f, 0xab, 0xfa, 0xf9, 0x7c, 0x92, 0x2c, 0xe2, 0x2c, 0x4e, 0x13, 0x3e, 0x8f, 0x67, 0xb3, 0x68,
	0x2e, 0x47, 0xac, 0x9d, 0xa0, 0x6a, 0xb2, 0x55, 0x3a, 0xce, 0xec, 0xd1, 0x08, 0x18, 0x7e, 0x96,
	0x4b, 0x66, 0x53, 0x8a, 0x62, 0xe8, 0xb1, 0x55, 0x8b, 0xb8, 0xa6, 0x5e, 0x57, 0x8d, 0x56, 0x58,
	0x9e, 0xeb, 0x82, 0xc5, 0x81, 0x0a, 0xee, 0xe5, 0x6d, 0xe2, 0x9d, 0x4a, 0x1f, 0xc9, 0x62, 0x81,
	0xe2, 0x5d, 0x39, 0x92, 0x4a, 0x97, 0x78, 0x21, 0x17, 0x70, 0x95, 0xbf, 0x5d, 0xd1, 0x2c, 0xcb,
	0x1a, 0xd6, 0xef, 0xf9, 0x72, 0x8b, 0xe8, 0x03, 0x6e, 0x32, 0xe9, 0xe4, 0x3d, 0x59, 0xe0, 0x16,
	0x53, 0x00, 0xc5, 0x68, 0xd3, 0xcb, 0x9b, 0x74, 0x2d, 0x1d, 0xdc, 0xab, 0x32, 0x85, 0xce, 0xbe,
	0x2f, 0x25, 0x58, 0xe5, 0x18, 0xa0, 0xf8, 0x55, 0xc9, 0x12, 0x9a, 0xd5, 0x90, 0xe2, 0x2c, 0x99,
	0x05, 0x28, 0x3e, 0x28, 0x9b, 0x41, 0x73, 0x5e, 0xaf, 0xb2, 0x15, 0x7c, 0x02, 0x14, 0xe3, 0x0a,
	0x1b, 0x68, 0xd6, 0xa1, 0x4c, 0x58, 0x61, 0x11, 0xa0, 0x98, 0x28, 0x0d, 0x7b, 0xe7, 0xbe, 0x03,
	0x5c, 0x09, 0xbe, 0x89, 0x8e, 0x94, 0xfa, 0xf3, 0x26, 0x56, 0xe3, 0x7f, 0x23, 0xd3, 0x17, 0x9c,
	0xb0, 0xfe, 0x9b, 0x3c, 0x96, 0xc2, 0xaf, 0xc2, 0xc4, 0x30, 0x74, 0x86, 0xf6, 0xd2, 0x1c, 0x1f,
	0x50, 0xaf, 0xc2, 0x1c, 0xeb, 0x09, 0x37, 0xc9, 0x27, 0xf4, 0xbe, 0xda, 0x1a, 0xeb, 0xa0, 0x16,
	0xf9, 0x8c, 0x3e, 0x56, 0x18, 0x5a, 0xc0, 0x18, 0x5c, 0x2e, 0x18, 0x58, 0x60, 0x8f, 0x81, 0xe2,
	0x77, 0xe4, 0x14, 0x7d, 0x5f, 0xb2, 0x87, 0x37, 0xd4, 0xe1, 0x6a, 0x84, 0xeb, 0xb4, 0x6d, 0xd2,
	0x47, 0x9f, 0xff, 0x2f, 0x7c, 0x39, 0xb1, 0x0e, 0x41, 0xa8, 0xbe, 0xfc, 0xdd, 0xfd, 0xf2, 0x67,
	0x0d, 0x0d, 0xa6, 0xe9, 0xdd, 0xe0, 0xeb, 0x17, 0xd3, 0x97, 0x4f, 0xff, 0xbd, 0x95, 0x7c, 0xb9,
	0xe9, 0xfc, 0xda, 0x2f, 0xfe, 0x2c, 0xce, 0x7e, 0xbd, 0xbf, 0x96, 0xd9, 0x8d, 0x55, 0xf6, 0xd3,
	0x49, 0x2c, 0x97, 0x65, 0x34, 0x4f, 0x26, 0xb7, 0xa7, 0x6a, 0x27, 0x2e, 0x8c, 0xc5, 0x7c, 0x6a,
	0xdc, 0x4d, 0xe2, 0xc4, 0x50, 0x67, 0x63, 0xeb, 0x56, 0xfd, 0xbb, 0x56, 0xfb, 0x63, 0x67, 0xd7,
	0x0c, 0xf9, 0x75, 0x5d, 0x45, 0xfe, 0xf8, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x64, 0x65, 0x29,
	0x87, 0x82, 0x07, 0x00, 0x00,
}
