/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
syntax = "proto3";

package autonomic.ext.event.state.binding;

option go_package = "xk6-fabric/proto/autonomic/ext/event/state";
option java_package = "com.autonomic.ext.event.state.binding";
option java_outer_classname = "WellKnownBindingStateProto";
option java_multiple_files = true;

option cc_enable_arenas = true;

option objc_class_prefix = "AUT";

// Well-known binding assertion states.  All state transitions for this fsm are emitted by the
// cloud.
enum WellKnownBindingAssertionState {
    UNKNOWN_STATE = 0;

    // A device has attempted to assert a binding.
    // triggered by: BOOTSTRAP_REQUEST_RECEIVED
    BOOTSTRAP_REQUESTED = 1;

    // A binding assertion was deliberately not performed because the operation was not supported
    // for the device type.
    // triggered by: DEVICE_NOT_SUPPORTED
    BINDING_UNSUPPORTED = 2;

    // A binding assertion was deliberately not performed because no VIN was specified in the
    // request.
    // triggered by: DEVICE_ASSERTED_NO_VIN
    BINDING_NOT_REQUESTED = 3;

    // A binding assertion has succeeded and the current device / vehicle binding relationship has
    // been removed.
    // triggered by: DEVICE_ASSERTED_NOT_BOUND_TO_VEHICLE
    BINDING_CLEARED = 4;

    // A binding assertion has failed because the provided VIN was malformed.
    // triggered by: DEVICE_ASSERTED_MALFORMED_VIN
    MALFORMED_VIN_FAILURE = 5;

    // A binding assertion failed because an OEM could not be properly resolved based on either the
    // device identifier in the bootstrap request or the device metadata stored in the cloud.
    // triggered by: OEM_RESOLUTION_FAILED
    OEM_RESOLUTION_FAILURE = 6;

    // A binding assertion has failed because the provided VIN is not valid for the OEM associated
    // with the device identified in the bootstrap request.
    // triggered by: DEVICE_ASSERTED_OUT_OF_SCOPE_VIN
    OEM_VIN_MISMATCH_FAILURE = 7;

    // The VIN from the device bootstrap request has been determined to be valid and the cloud is
    // currently attempting to resolve the correct vehicle asset associated with this VIN.
    // triggered by: DEVICE_ASSERTED_VALID_VIN
    VEHICLE_RESOLUTION_IN_PROGRESS = 8;

    // The cloud is in the process of provisioning a new vehicle associated with the VIN parsed
    // from the bootstrap request.
    // triggered by: VEHICLE_ASSET_NOT_FOUND
    VEHICLE_CREATION_IN_PROGRESS = 9;

    // The cloud failed to provision a new vehicle asset as a result of processing a binding
    // assertion for an otherwise valid VIN.
    // triggered by: VEHICLE_CREATION_TRANSIENT_ERROR_OCCURRED
    VEHICLE_CREATION_TRANSIENT_FAILURE = 10;

    // The cloud does not have an existing vehicle asset associated with the VIN parsed from the
    // bootstrap request and vehicle creation is not allowed for the OEM associated with the device
    // identified in the bootstrap request
    // triggered by: VEHICLE_CREATION_FOR_OEM_DISABLED
    VEHICLE_CREATION_UNSUPPORTED_FOR_OEM_FAILURE = 11;

    // The cloud successfully created a new vehicle asset associated with the VIN parsed from the
    // bootstrap request.
    // triggered by: VEHICLE_CREATION_SUCCEEDED
    VEHICLE_CREATION_SUCCESS = 12;

    // The cloud failed to lookup the vehicle asset associated with the VIN parsed from the
    // bootstrap request as a result of a transient error.
    // triggered by: VEHICLE_LOOKUP_TRANSIENT_ERROR_OCCURRED
    VEHICLE_LOOKUP_TRANSIENT_FAILURE = 13;

    // The cloud succeeded in resolving a vehicle associated with the valid VIN provided by the
    // device in the bootstrap request and is in the process of applying the appropriate OEM
    // permissions to the vehicle asset
    // triggered by: VEHICLE_ASSET_FOUND
    OEM_PERMISSIONS_APPLICATION_IN_PROGRESS = 14;

    // The cloud failed to apply the appropriate OEM permissions onto the resolved vehicle asset
    // due to a transient error.
    // triggered by: PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED
    OEM_PERMISSIONS_APPLICATION_TRANSIENT_FAILURE = 15;

    // The cloud successfully applied OEM-scoped permissions to the resolved vehicle and is now in
    // the process of asserting the binding relationship between the device identified in the
    // bootstrap request and the vehicle asset resolved from the VIN in the bootstrap request.
    // triggered by: OEM_PERMISSIONS_APPLICATION_SUCCEEDED
    BINDING_ASSERTION_IN_PROGRESS = 16;

    // The cloud failed to create a binding relationship between the device identified in the
    // bootstrap request and the resolved vehicle due to a transient error.
    // triggered by: BINDING_ASSERTION_TRANSIENT_ERROR_OCCURRED
    BINDING_ASSERTION_TRANSIENT_FAILURE = 17;

    // A binding relationship between the device identified in the bootstrap request and the
    // resolved vehicle has been created and the cloud is in the process of applying permissions
    // to the vehicle that have been inferred from the device.
    // triggered by: BINDING_ASSERTED_NEW_VEHICLE
    INFERRED_PERMISSIONS_APPLICATION_IN_PROGRESS = 18;

    // A transient error occured while attempting to apply permissions to the newly bound vehicle
    // that were inferred from the device.
    // triggered by: INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED
    INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_FAILURE = 19;

    // The cloud has applied permissions to the vehicle that were inferred from the current
    // permissions on the device. The device / vehicle binding assertion has been updated
    // successfully such that the device is now bound to a NEW vehicle or a DIFFERENT vehicle than
    // it was previously bound to.
    // triggered by: INFERRED_PERMISSIONS_APPLICATION_SUCCEEDED
    BINDING_ASSERTION_UPDATED = 20;

    // A binding assertion between the device and the resolved vehicle from the request completed
    // successfully.  The result of the binding assertion is that the device is bound to the SAME
    // vehicle it was previously bound to.
    // triggered by: BINDING_ASSERTED_EXISTING_VEHICLE
    BINDING_ASSERTION_UNMODIFIED = 21;

    // A binding assertion was attempted as part of handling a bootstrap request that contained a
    // valid VIN, but did not complete due to the bootstrap RPC deadline specified by the device
    // not allowing enough time for the RPC to complete.
    // triggered by: DEVICE_DEADLINE_EXCEEDED
    CANCELLED_BY_DEVICE = 22;
}

enum WellKnownBindingAssertionTransitionTrigger {
    UNKNOWN_TRANSITION_TRIGGER = 0;

    BOOTSTRAP_REQUEST_RECEIVED = 1;
    DEVICE_NOT_SUPPORTED = 2;
    DEVICE_ASSERTED_NO_VIN = 3;
    DEVICE_ASSERTED_NOT_BOUND_TO_VEHICLE = 4;
    DEVICE_ASSERTED_MALFORMED_VIN = 5;
    OEM_RESOLUTION_FAILED = 6;
    DEVICE_ASSERTED_OUT_OF_SCOPE_VIN = 7;
    DEVICE_ASSERTED_VALID_VIN = 8;
    VEHICLE_ASSET_NOT_FOUND = 9;
    VEHICLE_CREATION_TRANSIENT_ERROR_OCCURRED = 10;
    VEHICLE_CREATION_FOR_OEM_DISABLED = 11;
    VEHICLE_CREATION_SUCCEEDED = 12;
    VEHICLE_LOOKUP_TRANSIENT_ERROR_OCCURRED = 13;
    VEHICLE_ASSET_FOUND = 14;
    OEM_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED = 15;
    OEM_PERMISSIONS_APPLICATION_SUCCEEDED = 16;
    BINDING_ASSERTION_TRANSIENT_ERROR_OCCURRED = 17;
    BINDING_ASSERTED_NEW_VEHICLE = 18;
    INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED = 19;
    INFERRED_PERMISSIONS_APPLICATION_SUCCEEDED = 20;
    BINDING_ASSERTED_EXISTING_VEHICLE = 21;
    DEVICE_DEADLINE_EXCEEDED = 22;
}
