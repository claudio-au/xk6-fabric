/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/event/state/key_rotation.proto

package state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WellKnownKeyRotationState int32

const (
	WellKnownKeyRotationState_UNKNOWN_STATE WellKnownKeyRotationState = 0
	// Key rotation request has been received. A precondition to requesting a key rotation
	// is that the key has been successfully imported into the platform. Imported keys are
	// placed into a 'pending' state. A successful key rotation on the device will cause
	// the cloud to commit the appropriate pending key  into the role of active key, resulting
	// in a successful rotation on both cloud and device.
	// Emitted by: cloud
	// Triggered by: REQUEST_CREATED
	WellKnownKeyRotationState_REQUESTED WellKnownKeyRotationState = 1
	// Key rotation request has been queued for delivery to the device
	// Emitted by: cloud
	// Triggered by: REQUEST_QUEUED_FOR_DELIVERY
	WellKnownKeyRotationState_REQUEST_DELIVERY_QUEUED WellKnownKeyRotationState = 2
	// The server has attempted delivery of the request to the device
	// Emitted by: cloud
	// Triggered by: OEM_CLOUD_TRANSLATION_SUCCEEDED
	WellKnownKeyRotationState_REQUEST_DELIVERY_IN_PROGRESS WellKnownKeyRotationState = 3
	// Delivery attempt of request was not acknowledged by device
	// Emitted by: cloud
	// Triggered by: REQUEST_DELIVERY_TIMEOUT_EXCEEDED
	WellKnownKeyRotationState_REQUEST_DELIVERY_TIMEOUT WellKnownKeyRotationState = 4
	// Key rotation request delivery failed due to a connection-related issue.
	// Emitted by: cloud
	// Triggered by: REQUEST_DELIVERY_FAILED
	WellKnownKeyRotationState_REQUEST_DELIVERY_FAILURE WellKnownKeyRotationState = 5
	// A queued key rotation request has been cancelled
	// Emitted by: cloud
	// Triggered by: CANCELLATION_REQUEST_FULFILLED
	WellKnownKeyRotationState_CANCELLED WellKnownKeyRotationState = 6
	// A queued key rotation request has expired
	// Emitted by: cloud
	// Triggered by: EXPIRATION_EXCEEDED
	WellKnownKeyRotationState_EXPIRED WellKnownKeyRotationState = 7
	// The server is in the process of rotating the active key to the new key, as a result of
	// being notified by the device that the rotation was successful on the device.
	// Emitted by: cloud
	// Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED
	WellKnownKeyRotationState_CLOUD_ROTATION_IN_PROGRESS WellKnownKeyRotationState = 8
	// The server has failed to rotate its stored key for the targeted device.
	// Emitted by: cloud
	// Triggered by: CLOUD_KEY_ROTATION_FAILED
	WellKnownKeyRotationState_CLOUD_ROTATION_FAILURE WellKnownKeyRotationState = 9
	// The cloud rotation has queued a request to commit the pending key into the active key
	// Emitted by: cloud
	// Triggered by: COMMAND_SUCCEEDED_EVENT_RECEIVED
	WellKnownKeyRotationState_CLOUD_ROTATION_QUEUED WellKnownKeyRotationState = 10
	// Oem cloud attempted delivery of request
	// Emitted by: cloud
	// Triggered by: DEVICE_CONNECTED_TO_CLOUD
	WellKnownKeyRotationState_OEM_CLOUD_DELIVERY_IN_PROGRESS WellKnownKeyRotationState = 11
	// Cloud attempted translation of request
	// Emitted by: cloud
	// Triggered by: OEM_CLOUD_DELIVERY_SUCCEEDED
	WellKnownKeyRotationState_OEM_CLOUD_TRANSLATION_IN_PROGRESS WellKnownKeyRotationState = 12
	// Cloud failed to validate data provided by the device
	// Emitted by: cloud
	// Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED
	WellKnownKeyRotationState_CLOUD_VALIDATION_FAILURE WellKnownKeyRotationState = 13
	// The cloud is in the process of validating the event emitted by the device indicating that the
	// command has succeeded.
	// Triggered by: SUCCEEDED_ON_DEVICE_EVENT_RECEIVED
	WellKnownKeyRotationState_CLOUD_VALIDATION_IN_PROGRESS WellKnownKeyRotationState = 24
	// Key rotation request has succeeded.  Terminal success state
	// Emitted by: cloud
	// Triggered by: CLOUD_KEY_ROTATION_SUCCEEDED
	WellKnownKeyRotationState_SUCCESS WellKnownKeyRotationState = 20
	// Key rotation request has failed.  Final failure terminal state.
	// Emitted by: device or cloud
	// Triggered by: FAILED
	WellKnownKeyRotationState_FAILURE WellKnownKeyRotationState = 31
	// Request is queued on the device and acknowledged.
	// Cloud will no longer periodically re-emit the
	// request when the vehicle connects to the cloud.
	// Emitted by: device
	// Triggered by: REQUEST_QUEUED_ON_DEVICE
	WellKnownKeyRotationState_REQUEST_QUEUED WellKnownKeyRotationState = 60
	// Device has begun validation of the key rotation request
	// Emitted by: device
	// Triggered by: REQUEST_VALIDATION_STARTED
	WellKnownKeyRotationState_REQUEST_VALIDATION_IN_PROGRESS WellKnownKeyRotationState = 68
	// Validation of the request has failed.
	// Emitted by: device
	// Triggered by: REQUEST_VALIDATION_FAILED
	WellKnownKeyRotationState_REQUEST_VALIDATION_FAILURE WellKnownKeyRotationState = 69
	// Execution of the request command has started
	// Emitted by: device
	// Triggered by: REQUEST_VALIDATION_SUCCEEDED
	WellKnownKeyRotationState_COMMAND_IN_PROGRESS WellKnownKeyRotationState = 63
	// Execution of the request command has succeeded
	// Emitted by: device
	// Triggered by: COMMAND_COMPLETED
	WellKnownKeyRotationState_SUCCEEDED_ON_DEVICE WellKnownKeyRotationState = 50
	// Execution of the request command has failed
	// Emitted by: device
	// Triggered by: COMMAND_EXECUTION_ERROR_OCCURRED
	WellKnownKeyRotationState_COMMAND_FAILURE WellKnownKeyRotationState = 66
	// Command is being removed from set of in-progress
	// commands from the cloud. Emitted by cloud.
	// Triggered by: CANCELLATION_REQUESTED
	WellKnownKeyRotationState_CANCELLATION_IN_PROGRESS WellKnownKeyRotationState = 67
	// The key from the request is in the process of being imported into the cloud.
	// Triggered by: REQUEST_RECEIVED
	WellKnownKeyRotationState_CLOUD_IMPORT_IN_PROGRESS WellKnownKeyRotationState = 70
	// The cloud failed to import the key from the request
	// Triggered by: CLOUD_IMPORT_FAILED
	WellKnownKeyRotationState_CLOUD_IMPORT_FAILURE WellKnownKeyRotationState = 71
	// The cloud is performing OEM-specific actions associated with the device type and key type
	// that represent preconditions to a command being queued for the device itself.
	// Triggered by: OEM_SPECIFIC_KEY_TYPE_DETECTED
	WellKnownKeyRotationState_OEM_PROCESSING_IN_PROGRESS WellKnownKeyRotationState = 72
	// The cloud failed to perform the OEM-specific processing that is necessary as a pre-condition
	// for a command to be queued for the device.
	// Triggered by: OEM_PROCESSING_FAILED
	WellKnownKeyRotationState_OEM_PROCESSING_FAILURE WellKnownKeyRotationState = 73
	// The cloud successfully completed all OEM-specific processing that is necessary as a
	// pre-condition for a command to be queued for the device.
	// Triggered by: OEM_PROCESSING_SUCCEEDED
	WellKnownKeyRotationState_OEM_PROCESSING_SUCCESS WellKnownKeyRotationState = 74
	// The cloud has successfully imported the key parsed from the request.
	// Triggered by: CLOUD_IMPORT_SUCCEEDED
	WellKnownKeyRotationState_CLOUD_IMPORT_SUCCESS WellKnownKeyRotationState = 75
	// Device has begun validation of the key rotation request.  This state is
	// deprecated in favor of REQUEST_VALIDATION_IN_PROGRESS
	// Emitted by: device
	// Triggered by: REQUEST_VALIDATION_STARTED
	WellKnownKeyRotationState_COMMAND_VALIDATION_IN_PROGRESS WellKnownKeyRotationState = 61 // Deprecated: Do not use.
	// Validation of the request has failed.  This state is deprecated in favor
	// of REQUEST_VALIDATION_FAILED
	// Emitted by: device
	// Triggered by: REQUEST_VALIDATION_FAILED
	WellKnownKeyRotationState_COMMAND_VALIDATION_FAILURE WellKnownKeyRotationState = 62 // Deprecated: Do not use.
	// Execution of the request command has succeeded
	// Emitted by: device
	// Triggered by: COMMAND_COMPLETED
	WellKnownKeyRotationState_COMMAND_SUCCESS WellKnownKeyRotationState = 65 // Deprecated: Do not use.
)

var WellKnownKeyRotationState_name = map[int32]string{
	0:  "UNKNOWN_STATE",
	1:  "REQUESTED",
	2:  "REQUEST_DELIVERY_QUEUED",
	3:  "REQUEST_DELIVERY_IN_PROGRESS",
	4:  "REQUEST_DELIVERY_TIMEOUT",
	5:  "REQUEST_DELIVERY_FAILURE",
	6:  "CANCELLED",
	7:  "EXPIRED",
	8:  "CLOUD_ROTATION_IN_PROGRESS",
	9:  "CLOUD_ROTATION_FAILURE",
	10: "CLOUD_ROTATION_QUEUED",
	11: "OEM_CLOUD_DELIVERY_IN_PROGRESS",
	12: "OEM_CLOUD_TRANSLATION_IN_PROGRESS",
	13: "CLOUD_VALIDATION_FAILURE",
	24: "CLOUD_VALIDATION_IN_PROGRESS",
	20: "SUCCESS",
	31: "FAILURE",
	60: "REQUEST_QUEUED",
	68: "REQUEST_VALIDATION_IN_PROGRESS",
	69: "REQUEST_VALIDATION_FAILURE",
	63: "COMMAND_IN_PROGRESS",
	50: "SUCCEEDED_ON_DEVICE",
	66: "COMMAND_FAILURE",
	67: "CANCELLATION_IN_PROGRESS",
	70: "CLOUD_IMPORT_IN_PROGRESS",
	71: "CLOUD_IMPORT_FAILURE",
	72: "OEM_PROCESSING_IN_PROGRESS",
	73: "OEM_PROCESSING_FAILURE",
	74: "OEM_PROCESSING_SUCCESS",
	75: "CLOUD_IMPORT_SUCCESS",
	61: "COMMAND_VALIDATION_IN_PROGRESS",
	62: "COMMAND_VALIDATION_FAILURE",
	65: "COMMAND_SUCCESS",
}

var WellKnownKeyRotationState_value = map[string]int32{
	"UNKNOWN_STATE":                     0,
	"REQUESTED":                         1,
	"REQUEST_DELIVERY_QUEUED":           2,
	"REQUEST_DELIVERY_IN_PROGRESS":      3,
	"REQUEST_DELIVERY_TIMEOUT":          4,
	"REQUEST_DELIVERY_FAILURE":          5,
	"CANCELLED":                         6,
	"EXPIRED":                           7,
	"CLOUD_ROTATION_IN_PROGRESS":        8,
	"CLOUD_ROTATION_FAILURE":            9,
	"CLOUD_ROTATION_QUEUED":             10,
	"OEM_CLOUD_DELIVERY_IN_PROGRESS":    11,
	"OEM_CLOUD_TRANSLATION_IN_PROGRESS": 12,
	"CLOUD_VALIDATION_FAILURE":          13,
	"CLOUD_VALIDATION_IN_PROGRESS":      24,
	"SUCCESS":                           20,
	"FAILURE":                           31,
	"REQUEST_QUEUED":                    60,
	"REQUEST_VALIDATION_IN_PROGRESS":    68,
	"REQUEST_VALIDATION_FAILURE":        69,
	"COMMAND_IN_PROGRESS":               63,
	"SUCCEEDED_ON_DEVICE":               50,
	"COMMAND_FAILURE":                   66,
	"CANCELLATION_IN_PROGRESS":          67,
	"CLOUD_IMPORT_IN_PROGRESS":          70,
	"CLOUD_IMPORT_FAILURE":              71,
	"OEM_PROCESSING_IN_PROGRESS":        72,
	"OEM_PROCESSING_FAILURE":            73,
	"OEM_PROCESSING_SUCCESS":            74,
	"CLOUD_IMPORT_SUCCESS":              75,
	"COMMAND_VALIDATION_IN_PROGRESS":    61,
	"COMMAND_VALIDATION_FAILURE":        62,
	"COMMAND_SUCCESS":                   65,
}

func (x WellKnownKeyRotationState) String() string {
	return proto.EnumName(WellKnownKeyRotationState_name, int32(x))
}

func (WellKnownKeyRotationState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4f8a5907eb2aef7b, []int{0}
}

type WellKnownKeyRotationTransitionTrigger int32

const (
	WellKnownKeyRotationTransitionTrigger_UNKNOWN_TRIGGER                           WellKnownKeyRotationTransitionTrigger = 0
	WellKnownKeyRotationTransitionTrigger_REQUEST_CREATED                           WellKnownKeyRotationTransitionTrigger = 1
	WellKnownKeyRotationTransitionTrigger_REQUEST_QUEUED_FOR_DELIVERY               WellKnownKeyRotationTransitionTrigger = 2
	WellKnownKeyRotationTransitionTrigger_REQUEST_DELIVERY_TIMEOUT_EXCEEDED         WellKnownKeyRotationTransitionTrigger = 3
	WellKnownKeyRotationTransitionTrigger_EXPIRATION_EXCEEDED                       WellKnownKeyRotationTransitionTrigger = 4
	WellKnownKeyRotationTransitionTrigger_CANCELLATION_REQUESTED                    WellKnownKeyRotationTransitionTrigger = 5
	WellKnownKeyRotationTransitionTrigger_DEVICE_CONNECTED_TO_CLOUD                 WellKnownKeyRotationTransitionTrigger = 6
	WellKnownKeyRotationTransitionTrigger_REQUEST_DELIVERY_FAILED                   WellKnownKeyRotationTransitionTrigger = 7
	WellKnownKeyRotationTransitionTrigger_COMMAND_SUCCEEDED_EVENT_RECEIVED          WellKnownKeyRotationTransitionTrigger = 9
	WellKnownKeyRotationTransitionTrigger_CLOUD_KEY_ROTATION_SUCCEEDED              WellKnownKeyRotationTransitionTrigger = 10
	WellKnownKeyRotationTransitionTrigger_CLOUD_KEY_ROTATION_FAILED                 WellKnownKeyRotationTransitionTrigger = 11
	WellKnownKeyRotationTransitionTrigger_CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED WellKnownKeyRotationTransitionTrigger = 12
	WellKnownKeyRotationTransitionTrigger_CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED    WellKnownKeyRotationTransitionTrigger = 13
	WellKnownKeyRotationTransitionTrigger_REQUEST_RECEIVED                          WellKnownKeyRotationTransitionTrigger = 16
	WellKnownKeyRotationTransitionTrigger_CLOUD_IMPORT_FAILED                       WellKnownKeyRotationTransitionTrigger = 17
	WellKnownKeyRotationTransitionTrigger_OEM_SPECIFIC_KEY_TYPE_DETECTED            WellKnownKeyRotationTransitionTrigger = 18
	WellKnownKeyRotationTransitionTrigger_OEM_PROCESSING_FAILED                     WellKnownKeyRotationTransitionTrigger = 19
	WellKnownKeyRotationTransitionTrigger_OEM_PROCESSING_SUCCEEDED                  WellKnownKeyRotationTransitionTrigger = 20
	WellKnownKeyRotationTransitionTrigger_CLOUD_IMPORT_SUCCEEDED                    WellKnownKeyRotationTransitionTrigger = 21
	WellKnownKeyRotationTransitionTrigger_OEM_CLOUD_DELIVERY_SUCCEEDED              WellKnownKeyRotationTransitionTrigger = 14
	WellKnownKeyRotationTransitionTrigger_OEM_CLOUD_TRANSLATION_SUCCEEDED           WellKnownKeyRotationTransitionTrigger = 15
	WellKnownKeyRotationTransitionTrigger_FAILED                                    WellKnownKeyRotationTransitionTrigger = 31
	WellKnownKeyRotationTransitionTrigger_REQUEST_QUEUED_ON_DEVICE                  WellKnownKeyRotationTransitionTrigger = 60
	WellKnownKeyRotationTransitionTrigger_REQUEST_VALIDATION_STARTED                WellKnownKeyRotationTransitionTrigger = 61
	WellKnownKeyRotationTransitionTrigger_REQUEST_VALIDATION_SUCCEEDED              WellKnownKeyRotationTransitionTrigger = 62
	WellKnownKeyRotationTransitionTrigger_REQUEST_VALIDATION_FAILED                 WellKnownKeyRotationTransitionTrigger = 63
	WellKnownKeyRotationTransitionTrigger_COMMAND_EXECUTION_ERROR_OCCURRED          WellKnownKeyRotationTransitionTrigger = 65
	WellKnownKeyRotationTransitionTrigger_COMMAND_COMPLETED                         WellKnownKeyRotationTransitionTrigger = 66
	WellKnownKeyRotationTransitionTrigger_CANCELLATION_REQUEST_FULFILLED            WellKnownKeyRotationTransitionTrigger = 67
)

var WellKnownKeyRotationTransitionTrigger_name = map[int32]string{
	0:  "UNKNOWN_TRIGGER",
	1:  "REQUEST_CREATED",
	2:  "REQUEST_QUEUED_FOR_DELIVERY",
	3:  "REQUEST_DELIVERY_TIMEOUT_EXCEEDED",
	4:  "EXPIRATION_EXCEEDED",
	5:  "CANCELLATION_REQUESTED",
	6:  "DEVICE_CONNECTED_TO_CLOUD",
	7:  "REQUEST_DELIVERY_FAILED",
	9:  "COMMAND_SUCCEEDED_EVENT_RECEIVED",
	10: "CLOUD_KEY_ROTATION_SUCCEEDED",
	11: "CLOUD_KEY_ROTATION_FAILED",
	12: "CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED",
	13: "CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED",
	16: "REQUEST_RECEIVED",
	17: "CLOUD_IMPORT_FAILED",
	18: "OEM_SPECIFIC_KEY_TYPE_DETECTED",
	19: "OEM_PROCESSING_FAILED",
	20: "OEM_PROCESSING_SUCCEEDED",
	21: "CLOUD_IMPORT_SUCCEEDED",
	14: "OEM_CLOUD_DELIVERY_SUCCEEDED",
	15: "OEM_CLOUD_TRANSLATION_SUCCEEDED",
	31: "FAILED",
	60: "REQUEST_QUEUED_ON_DEVICE",
	61: "REQUEST_VALIDATION_STARTED",
	62: "REQUEST_VALIDATION_SUCCEEDED",
	63: "REQUEST_VALIDATION_FAILED",
	65: "COMMAND_EXECUTION_ERROR_OCCURRED",
	66: "COMMAND_COMPLETED",
	67: "CANCELLATION_REQUEST_FULFILLED",
}

var WellKnownKeyRotationTransitionTrigger_value = map[string]int32{
	"UNKNOWN_TRIGGER":                           0,
	"REQUEST_CREATED":                           1,
	"REQUEST_QUEUED_FOR_DELIVERY":               2,
	"REQUEST_DELIVERY_TIMEOUT_EXCEEDED":         3,
	"EXPIRATION_EXCEEDED":                       4,
	"CANCELLATION_REQUESTED":                    5,
	"DEVICE_CONNECTED_TO_CLOUD":                 6,
	"REQUEST_DELIVERY_FAILED":                   7,
	"COMMAND_SUCCEEDED_EVENT_RECEIVED":          9,
	"CLOUD_KEY_ROTATION_SUCCEEDED":              10,
	"CLOUD_KEY_ROTATION_FAILED":                 11,
	"CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED": 12,
	"CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED":    13,
	"REQUEST_RECEIVED":                          16,
	"CLOUD_IMPORT_FAILED":                       17,
	"OEM_SPECIFIC_KEY_TYPE_DETECTED":            18,
	"OEM_PROCESSING_FAILED":                     19,
	"OEM_PROCESSING_SUCCEEDED":                  20,
	"CLOUD_IMPORT_SUCCEEDED":                    21,
	"OEM_CLOUD_DELIVERY_SUCCEEDED":              14,
	"OEM_CLOUD_TRANSLATION_SUCCEEDED":           15,
	"FAILED":                                    31,
	"REQUEST_QUEUED_ON_DEVICE":                  60,
	"REQUEST_VALIDATION_STARTED":                61,
	"REQUEST_VALIDATION_SUCCEEDED":              62,
	"REQUEST_VALIDATION_FAILED":                 63,
	"COMMAND_EXECUTION_ERROR_OCCURRED":          65,
	"COMMAND_COMPLETED":                         66,
	"CANCELLATION_REQUEST_FULFILLED":            67,
}

func (x WellKnownKeyRotationTransitionTrigger) String() string {
	return proto.EnumName(WellKnownKeyRotationTransitionTrigger_name, int32(x))
}

func (WellKnownKeyRotationTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4f8a5907eb2aef7b, []int{1}
}

func init() {
	proto.RegisterEnum("autonomic.ext.event.state.keyrotation.WellKnownKeyRotationState", WellKnownKeyRotationState_name, WellKnownKeyRotationState_value)
	proto.RegisterEnum("autonomic.ext.event.state.keyrotation.WellKnownKeyRotationTransitionTrigger", WellKnownKeyRotationTransitionTrigger_name, WellKnownKeyRotationTransitionTrigger_value)
}

func init() {
	proto.RegisterFile("autonomic/ext/event/state/key_rotation.proto", fileDescriptor_4f8a5907eb2aef7b)
}

var fileDescriptor_4f8a5907eb2aef7b = []byte{
	// 879 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x5b, 0x53, 0x1b, 0x37,
	0x14, 0x8e, 0x21, 0x81, 0x20, 0x42, 0x22, 0x04, 0x94, 0x4b, 0x52, 0x48, 0xd3, 0x92, 0x99, 0x30,
	0xc5, 0x3b, 0xd3, 0xbe, 0xe6, 0x32, 0x8b, 0x74, 0xec, 0xaa, 0x5e, 0xaf, 0x36, 0x5a, 0xad, 0x03,
	0x7d, 0xd1, 0x38, 0xcc, 0x0e, 0xf5, 0x04, 0xbc, 0x1d, 0xb3, 0x69, 0xe1, 0xbf, 0xf4, 0xa9, 0x2f,
	0xed, 0x4f, 0xec, 0x63, 0x47, 0xda, 0x95, 0xd7, 0xc6, 0xeb, 0x69, 0xde, 0xac, 0xfd, 0x3e, 0x1d,
	0x9d, 0xcb, 0x77, 0xce, 0x31, 0xfa, 0xbe, 0xff, 0x39, 0xcf, 0x86, 0xd9, 0xd5, 0xe0, 0xdc, 0x4b,
	0x6f, 0x72, 0x2f, 0xfd, 0x3d, 0x1d, 0xe6, 0xde, 0x75, 0xde, 0xcf, 0x53, 0xef, 0x53, 0x7a, 0xab,
	0x47, 0x59, 0xde, 0xcf, 0x07, 0xd9, 0xb0, 0xf9, 0xdb, 0x28, 0xcb, 0x33, 0x72, 0x38, 0x66, 0x37,
	0xd3, 0x9b, 0xbc, 0x69, 0xd9, 0x4d, 0xcb, 0x6e, 0x7e, 0x4a, 0x6f, 0x1d, 0xf9, 0xe8, 0xcf, 0x65,
	0xb4, 0xfb, 0x21, 0xbd, 0xbc, 0xec, 0x0c, 0xb3, 0x3f, 0x86, 0x9d, 0xf4, 0x56, 0x96, 0x40, 0x6c,
	0x98, 0x64, 0x1d, 0xad, 0x25, 0x61, 0x27, 0x14, 0x1f, 0x42, 0x1d, 0x2b, 0x5f, 0x01, 0xbe, 0x47,
	0xd6, 0xd0, 0x8a, 0x84, 0xf7, 0x09, 0xc4, 0x0a, 0x18, 0x6e, 0x90, 0xa7, 0x68, 0xbb, 0x3c, 0x6a,
	0x06, 0x01, 0xef, 0x81, 0x3c, 0xd3, 0xef, 0x13, 0x48, 0x80, 0xe1, 0x05, 0xf2, 0x1c, 0x3d, 0x9b,
	0x01, 0x79, 0xa8, 0x23, 0x29, 0xda, 0x12, 0xe2, 0x18, 0x2f, 0x92, 0x67, 0x68, 0x67, 0x86, 0xa1,
	0x78, 0x17, 0x44, 0xa2, 0xf0, 0xfd, 0x5a, 0xb4, 0xe5, 0xf3, 0x20, 0x91, 0x80, 0x1f, 0x18, 0x4f,
	0xa8, 0x1f, 0x52, 0x08, 0x02, 0x60, 0x78, 0x89, 0xac, 0xa2, 0x65, 0x38, 0x8d, 0xb8, 0x04, 0x86,
	0x97, 0xc9, 0x3e, 0xda, 0xa3, 0x81, 0x48, 0x98, 0x96, 0x42, 0xf9, 0x8a, 0x8b, 0x70, 0xea, 0xdd,
	0x87, 0x64, 0x0f, 0x7d, 0x75, 0x07, 0x77, 0x76, 0x57, 0xc8, 0x2e, 0xda, 0xba, 0x83, 0x95, 0x01,
	0x21, 0xf2, 0x02, 0xed, 0x0b, 0xe8, 0xea, 0x02, 0xae, 0x0d, 0x69, 0x95, 0x1c, 0xa2, 0x6f, 0x2a,
	0x8e, 0x92, 0x7e, 0x18, 0x07, 0xb3, 0x1e, 0x3c, 0x32, 0xb1, 0x15, 0x94, 0x9e, 0x1f, 0x70, 0x36,
	0xed, 0xc3, 0x9a, 0xc9, 0xdc, 0x0c, 0x3a, 0x79, 0x7f, 0xc7, 0x84, 0x1b, 0x27, 0x94, 0x9a, 0xc3,
	0xa6, 0x39, 0xb8, 0xbb, 0x07, 0x84, 0xa0, 0xc7, 0x2e, 0x6b, 0xa5, 0xe3, 0xaf, 0x8d, 0xe3, 0xee,
	0xdb, 0x1c, 0x8b, 0xcc, 0xe4, 0xac, 0x86, 0xe3, 0xec, 0x02, 0xd9, 0x46, 0x1b, 0x54, 0x74, 0xbb,
	0x7e, 0xc8, 0xa6, 0x2e, 0xbe, 0x33, 0x80, 0x75, 0x05, 0x18, 0x30, 0x2d, 0x42, 0xcd, 0xa0, 0xc7,
	0x29, 0xe0, 0x1f, 0xc8, 0x06, 0x7a, 0xe2, 0x6e, 0x38, 0x33, 0x27, 0x36, 0xf0, 0xa2, 0x6c, 0xb3,
	0x4e, 0xd0, 0x2a, 0x2d, 0xbc, 0x1b, 0x09, 0xa9, 0xa6, 0xd0, 0x16, 0xd9, 0x41, 0x9b, 0x53, 0xa8,
	0xb3, 0xda, 0x36, 0xce, 0x9b, 0xac, 0x47, 0x52, 0x98, 0x94, 0xf0, 0xb0, 0x3d, 0x75, 0xf3, 0x27,
	0x53, 0xf0, 0x3b, 0xb8, 0xbb, 0xcb, 0x6b, 0x30, 0x97, 0xd9, 0x9f, 0x67, 0x5e, 0x74, 0x48, 0x87,
	0xbc, 0x44, 0xfb, 0x2e, 0xb8, 0x39, 0x29, 0x7d, 0xb3, 0xb7, 0xf0, 0xb0, 0x41, 0x5e, 0xa0, 0xbd,
	0x1a, 0x9e, 0x7b, 0xfd, 0xad, 0xe5, 0x6c, 0x57, 0x89, 0x72, 0x0f, 0xf8, 0x06, 0x38, 0xfa, 0x7b,
	0x19, 0x1d, 0xd6, 0xb5, 0xa7, 0x1a, 0xf5, 0x87, 0xd7, 0x83, 0xe2, 0xd7, 0xe0, 0xe2, 0x22, 0x1d,
	0x99, 0x5c, 0xbb, 0x56, 0x55, 0x92, 0xb7, 0xdb, 0x20, 0xf1, 0x3d, 0xf3, 0xd1, 0x95, 0x94, 0x4a,
	0xf0, 0x8b, 0x96, 0x3d, 0x40, 0x4f, 0xa7, 0xf5, 0xa1, 0x5b, 0x42, 0x8e, 0xd5, 0x8c, 0x17, 0x8c,
	0x82, 0xe7, 0x35, 0xa5, 0x86, 0xd3, 0xa2, 0xce, 0x78, 0xd1, 0x94, 0xdd, 0x36, 0x5c, 0x11, 0xd0,
	0x18, 0xb8, 0x6f, 0x9b, 0x6b, 0xb2, 0xc2, 0xd5, 0xbc, 0x78, 0x40, 0xbe, 0x46, 0xbb, 0x85, 0x3c,
	0x34, 0x15, 0x61, 0x08, 0x54, 0x01, 0xd3, 0x4a, 0x14, 0xdd, 0x82, 0x97, 0x6a, 0xc7, 0x89, 0x49,
	0x95, 0x6d, 0xea, 0xef, 0xd0, 0xf3, 0xa9, 0x2c, 0x59, 0xbd, 0x41, 0x0f, 0x42, 0xa5, 0x25, 0x50,
	0xe0, 0x3d, 0x60, 0x78, 0xa5, 0x6a, 0x9d, 0x0e, 0x9c, 0x55, 0x2d, 0x3c, 0xbe, 0x80, 0x91, 0xf1,
	0xa1, 0x86, 0x51, 0x3e, 0xb3, 0x4a, 0x8e, 0xd1, 0xab, 0x99, 0xde, 0x13, 0xad, 0x52, 0xd5, 0x9a,
	0xf9, 0xca, 0x9f, 0xb0, 0xf6, 0x88, 0x1c, 0xa1, 0x97, 0xff, 0x47, 0x2f, 0x4d, 0xaf, 0x91, 0x4d,
	0x84, 0x5d, 0x78, 0x63, 0x8f, 0xb1, 0x6d, 0xac, 0xbb, 0xaa, 0x06, 0x86, 0xd7, 0xdd, 0xb8, 0x89,
	0x23, 0xa0, 0xbc, 0xc5, 0xa9, 0xf5, 0x57, 0x9d, 0x45, 0xa0, 0x19, 0x28, 0x9b, 0x3a, 0x4c, 0xcc,
	0xb4, 0xaa, 0x11, 0x36, 0x30, 0xbc, 0x61, 0x7a, 0xa9, 0x4e, 0xd7, 0xd6, 0xef, 0xcd, 0x6a, 0x04,
	0x4e, 0x2a, 0xdb, 0x62, 0x5b, 0x26, 0x87, 0x35, 0x73, 0xae, 0x62, 0x3c, 0x26, 0xdf, 0xa2, 0x83,
	0xfa, 0x29, 0x57, 0x91, 0x9e, 0x10, 0x84, 0x96, 0x4a, 0x67, 0x0e, 0x26, 0x67, 0x79, 0xa9, 0xba,
	0x6a, 0x52, 0xbc, 0x9e, 0x33, 0x7b, 0x62, 0xe5, 0x4b, 0x13, 0xe5, 0x9b, 0xc9, 0x4d, 0x32, 0x89,
	0x8f, 0xdf, 0x7a, 0x6b, 0x8a, 0x3a, 0x67, 0x7a, 0x01, 0xc3, 0xef, 0x26, 0xb5, 0x03, 0xa7, 0x40,
	0x93, 0x42, 0xb3, 0x52, 0x0a, 0xa9, 0x05, 0xa5, 0x89, 0x34, 0x6b, 0xc3, 0x27, 0x5b, 0x68, 0xdd,
	0xb1, 0xa8, 0xe8, 0x46, 0x01, 0x98, 0xd7, 0x4f, 0x4c, 0x1d, 0xea, 0x04, 0xad, 0x5b, 0x49, 0xd0,
	0xe2, 0x76, 0xfd, 0xd0, 0x93, 0x7f, 0x1a, 0xe8, 0xd5, 0x79, 0x76, 0xd5, 0xfc, 0xa2, 0xb5, 0x7b,
	0xb2, 0x3f, 0x77, 0xe7, 0x46, 0x66, 0x7b, 0x47, 0x8d, 0x5f, 0xa2, 0x8b, 0x41, 0xfe, 0xeb, 0xe7,
	0x8f, 0xcd, 0xf3, 0xec, 0xca, 0x1b, 0xdb, 0x3c, 0xee, 0x0f, 0xcc, 0xee, 0x4f, 0x47, 0xc3, 0xfe,
	0xe5, 0xb1, 0xdd, 0xf3, 0xd7, 0xde, 0xf5, 0xe8, 0xdc, 0xbb, 0xea, 0x0f, 0x86, 0x9e, 0x3d, 0x7b,
	0x73, 0xff, 0x24, 0xfc, 0xdb, 0x68, 0xfc, 0xb5, 0xb0, 0xe8, 0x27, 0xea, 0xe3, 0x92, 0x65, 0xfe,
	0xf8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0xbb, 0x9d, 0x42, 0x51, 0x08, 0x00, 0x00,
}
