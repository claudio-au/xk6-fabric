/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
syntax = "proto3";

package autonomic.ext.event.state.keyrotation;

option go_package = "xk6-fabric/proto/autonomic/ext/event/state";
option java_package = "com.autonomic.ext.event.state.keyrotation";
option java_outer_classname = "WellKnownKeyRotationStateProto";
option java_multiple_files = true;

option cc_enable_arenas = true;

option objc_class_prefix = "AUT";

enum WellKnownKeyRotationState {
    UNKNOWN_STATE = 0;

    // Key rotation request has been received. A precondition to requesting a key rotation
    // is that the key has been successfully imported into the platform. Imported keys are
    // placed into a 'pending' state. A successful key rotation on the device will cause
    // the cloud to commit the appropriate pending key  into the role of active key, resulting
    // in a successful rotation on both cloud and device.
    // Emitted by: cloud
    // Triggered by: REQUEST_CREATED
    REQUESTED = 1;

    // Key rotation request has been queued for delivery to the device
    // Emitted by: cloud
    // Triggered by: REQUEST_QUEUED_FOR_DELIVERY
    REQUEST_DELIVERY_QUEUED = 2;

    // The server has attempted delivery of the request to the device
    // Emitted by: cloud
    // Triggered by: DEVICE_CONNECTED_TO_CLOUD
    REQUEST_DELIVERY_IN_PROGRESS = 3;

    // Delivery attempt of request was not acknowledged by device
    // Emitted by: cloud
    // Triggered by: REQUEST_DELIVERY_TIMEOUT_EXCEEDED
    REQUEST_DELIVERY_TIMEOUT = 4;

    // Key rotation request delivery failed due to a connection-related issue.
    // Emitted by: cloud
    // Triggered by: REQUEST_DELIVERY_FAILED
    REQUEST_DELIVERY_FAILURE = 5;

    // A queued key rotation request has been cancelled
    // Emitted by: cloud
    // Triggered by: CANCELLATION_REQUEST_FULFILLED
    CANCELLED = 6;

    // A queued key rotation request has expired
    // Emitted by: cloud
    // Triggered by: EXPIRATION_EXCEEDED
    EXPIRED = 7;

    // The server is in the process of rotating the active key to the new key, as a result of
    // being notified by the device that the rotation was successful on the device.
    // Emitted by: cloud
    // Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED
    CLOUD_ROTATION_IN_PROGRESS = 8;

    // The server has failed to rotate its stored key for the targeted device.
    // Emitted by: cloud
    // Triggered by: CLOUD_KEY_ROTATION_FAILED
    CLOUD_ROTATION_FAILURE = 9;

    // The cloud rotation has queued a request to commit the pending key into the active key
    // Emitted by: cloud
    // Triggered by: COMMAND_SUCCEEDED_EVENT_RECEIVED
    CLOUD_ROTATION_QUEUED = 10;

    // Oem cloud attempted delivery of request
    // Emitted by: cloud
    // Triggered by: CLOUD_REQUEST_PROCESSING_SUCCEEDED
    OEM_CLOUD_DELIVERY_IN_PROGRESS = 11;

    // OEM Cloud attempted translation of request
    // Emitted by: cloud
    // Triggered by: OEM_CLOUD_DELIVERY_SUCCEEDED
    OEM_CLOUD_TRANSLATION_IN_PROGRESS = 12;

    // OEM Cloud attempted delivery of request
    // Emitted by: cloud
    // Triggered by: OEM_CLOUD_TRANSLATION_SUCCEEDED
    OEM_CLOUD_TO_DEVICE_DELIVERY_IN_PROGRESS = 14;

    // Cloud failed to validate data provided by the device
    // Emitted by: cloud
    // Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED
    CLOUD_VALIDATION_FAILURE = 13;

    // The cloud is in the process of validating the event emitted by the device indicating that the
    // command has succeeded.
    // Triggered by: SUCCEEDED_ON_DEVICE_EVENT_RECEIVED
    CLOUD_VALIDATION_IN_PROGRESS = 24;

    // Key rotation request has succeeded.  Terminal success state
    // Emitted by: cloud
    // Triggered by: CLOUD_KEY_ROTATION_SUCCEEDED
    SUCCESS = 20;

    // Key rotation request has failed.  Final failure terminal state.
    // Emitted by: device or cloud
    // Triggered by: FAILED
    FAILURE = 31;

    // Request is queued on the device and acknowledged.
    // Cloud will no longer periodically re-emit the
    // request when the vehicle connects to the cloud.
    // Emitted by: device
    // Triggered by: REQUEST_QUEUED_ON_DEVICE
    REQUEST_QUEUED = 60;

    // Device has begun validation of the key rotation request
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_STARTED
    REQUEST_VALIDATION_IN_PROGRESS = 68;

    // Validation of the request has failed.
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_FAILED
    REQUEST_VALIDATION_FAILURE = 69;

    // Execution of the request command has started
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_SUCCEEDED
    COMMAND_IN_PROGRESS = 63;

    // Execution of the request command has succeeded
    // Emitted by: device
    // Triggered by: COMMAND_COMPLETED
    SUCCEEDED_ON_DEVICE = 50;

    // Execution of the request command has failed
    // Emitted by: device
    // Triggered by: COMMAND_EXECUTION_ERROR_OCCURRED
    COMMAND_FAILURE = 66;

    // Command is being removed from set of in-progress
    // commands from the cloud. Emitted by cloud.
    // Triggered by: CANCELLATION_REQUESTED
    CANCELLATION_IN_PROGRESS = 67;

    // The key from the request is in the process of being imported into the cloud.
    // Triggered by: REQUEST_RECEIVED
    CLOUD_IMPORT_IN_PROGRESS = 70;

    // The cloud failed to import the key from the request
    // Triggered by: CLOUD_IMPORT_FAILED
    CLOUD_IMPORT_FAILURE = 71;

    // The cloud is performing OEM-specific actions associated with the device type and key type
    // that represent preconditions to a command being queued for the device itself.
    // Triggered by: OEM_SPECIFIC_KEY_TYPE_DETECTED
    OEM_PROCESSING_IN_PROGRESS = 72;

    // The cloud failed to perform the OEM-specific processing that is necessary as a pre-condition
    // for a command to be queued for the device.
    // Triggered by: OEM_PROCESSING_FAILED
    OEM_PROCESSING_FAILURE = 73;

    // The cloud successfully completed all OEM-specific processing that is necessary as a
    // pre-condition for a command to be queued for the device.
    // Triggered by: OEM_PROCESSING_SUCCEEDED
    OEM_PROCESSING_SUCCESS = 74;

    // The cloud has successfully imported the key parsed from the request.
    // Triggered by: CLOUD_IMPORT_SUCCEEDED
    CLOUD_IMPORT_SUCCESS = 75;

    // Device has begun validation of the key rotation request.  This state is
    // deprecated in favor of REQUEST_VALIDATION_IN_PROGRESS
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_STARTED
    COMMAND_VALIDATION_IN_PROGRESS = 61 [deprecated = true];

    // Validation of the request has failed.  This state is deprecated in favor
    // of REQUEST_VALIDATION_FAILED
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_FAILED
    COMMAND_VALIDATION_FAILURE = 62 [deprecated = true];

    // Execution of the request command has succeeded
    // Emitted by: device
    // Triggered by: COMMAND_COMPLETED
    COMMAND_SUCCESS = 65 [deprecated = true];
}


enum WellKnownKeyRotationTransitionTrigger {
    UNKNOWN_TRIGGER = 0;

    REQUEST_CREATED = 1;                              // cloud only
    REQUEST_QUEUED_FOR_DELIVERY = 2;                  // cloud only
    REQUEST_DELIVERY_TIMEOUT_EXCEEDED = 3;            // cloud only
    CLOUD_REQUEST_PROCESSING_SUCCEEDED = 22;          // cloud only
    EXPIRATION_EXCEEDED = 4;                          // cloud only
    CANCELLATION_REQUESTED = 5;                       // cloud only
    DEVICE_CONNECTED_TO_CLOUD = 6;                    // cloud only
    REQUEST_DELIVERY_FAILED = 7;                      // cloud only
    COMMAND_SUCCEEDED_EVENT_RECEIVED = 9;             // cloud only
    CLOUD_KEY_ROTATION_SUCCEEDED = 10;                // cloud only
    CLOUD_KEY_ROTATION_FAILED = 11;                   // cloud only
    CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED = 12;   // cloud only
    CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED = 13;      // cloud only
    REQUEST_RECEIVED = 16;                            // cloud only
    CLOUD_IMPORT_FAILED = 17;                         // cloud only
    OEM_SPECIFIC_KEY_TYPE_DETECTED = 18;              // cloud only
    OEM_PROCESSING_FAILED = 19;                       // cloud only
    OEM_PROCESSING_SUCCEEDED = 20;                    // cloud only
    CLOUD_IMPORT_SUCCEEDED = 21;                      // cloud only

    OEM_CLOUD_DELIVERY_SUCCEEDED = 14;                // cloud
    OEM_CLOUD_TRANSLATION_SUCCEEDED = 15;             // cloud

    FAILED = 31;                                      // device or cloud

    REQUEST_QUEUED_ON_DEVICE = 60;                    // device only
    REQUEST_VALIDATION_STARTED = 61;                  // device only
    REQUEST_VALIDATION_SUCCEEDED = 62;                // device only
    REQUEST_VALIDATION_FAILED = 63;                   // device only
    COMMAND_EXECUTION_ERROR_OCCURRED = 65;            // device only
    COMMAND_COMPLETED = 66;                           // device only

    CANCELLATION_REQUEST_FULFILLED = 67;              // cloud only
}
