/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/event/state/binding.proto

package state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Well-known binding assertion states.  All state transitions for this fsm are emitted by the
// cloud.
type WellKnownBindingAssertionState int32

const (
	WellKnownBindingAssertionState_UNKNOWN_STATE WellKnownBindingAssertionState = 0
	// A device has attempted to assert a binding.
	// triggered by: BOOTSTRAP_REQUEST_RECEIVED
	WellKnownBindingAssertionState_BOOTSTRAP_REQUESTED WellKnownBindingAssertionState = 1
	// A binding assertion was deliberately not performed because the operation was not supported
	// for the device type.
	// triggered by: DEVICE_NOT_SUPPORTED
	WellKnownBindingAssertionState_BINDING_UNSUPPORTED WellKnownBindingAssertionState = 2
	// A binding assertion was deliberately not performed because no VIN was specified in the
	// request.
	// triggered by: DEVICE_ASSERTED_NO_VIN
	WellKnownBindingAssertionState_BINDING_NOT_REQUESTED WellKnownBindingAssertionState = 3
	// A binding assertion has succeeded and the current device / vehicle binding relationship has
	// been removed.
	// triggered by: DEVICE_ASSERTED_NOT_BOUND_TO_VEHICLE
	WellKnownBindingAssertionState_BINDING_CLEARED WellKnownBindingAssertionState = 4
	// A binding assertion has failed because the provided VIN was malformed.
	// triggered by: DEVICE_ASSERTED_MALFORMED_VIN
	WellKnownBindingAssertionState_MALFORMED_VIN_FAILURE WellKnownBindingAssertionState = 5
	// A binding assertion failed because an OEM could not be properly resolved based on either the
	// device identifier in the bootstrap request or the device metadata stored in the cloud.
	// triggered by: OEM_RESOLUTION_FAILED
	WellKnownBindingAssertionState_OEM_RESOLUTION_FAILURE WellKnownBindingAssertionState = 6
	// A binding assertion has failed because the provided VIN is not valid for the OEM associated
	// with the device identified in the bootstrap request.
	// triggered by: DEVICE_ASSERTED_OUT_OF_SCOPE_VIN
	WellKnownBindingAssertionState_OEM_VIN_MISMATCH_FAILURE WellKnownBindingAssertionState = 7
	// The VIN from the device bootstrap request has been determined to be valid and the cloud is
	// currently attempting to resolve the correct vehicle asset associated with this VIN.
	// triggered by: DEVICE_ASSERTED_VALID_VIN
	WellKnownBindingAssertionState_VEHICLE_RESOLUTION_IN_PROGRESS WellKnownBindingAssertionState = 8
	// The cloud is in the process of provisioning a new vehicle associated with the VIN parsed
	// from the bootstrap request.
	// triggered by: VEHICLE_ASSET_NOT_FOUND
	WellKnownBindingAssertionState_VEHICLE_CREATION_IN_PROGRESS WellKnownBindingAssertionState = 9
	// The cloud failed to provision a new vehicle asset as a result of processing a binding
	// assertion for an otherwise valid VIN.
	// triggered by: VEHICLE_CREATION_TRANSIENT_ERROR_OCCURRED
	WellKnownBindingAssertionState_VEHICLE_CREATION_TRANSIENT_FAILURE WellKnownBindingAssertionState = 10
	// The cloud does not have an existing vehicle asset associated with the VIN parsed from the
	// bootstrap request and vehicle creation is not allowed for the OEM associated with the device
	// identified in the bootstrap request
	// triggered by: VEHICLE_CREATION_FOR_OEM_DISABLED
	WellKnownBindingAssertionState_VEHICLE_CREATION_UNSUPPORTED_FOR_OEM_FAILURE WellKnownBindingAssertionState = 11
	// The cloud successfully created a new vehicle asset associated with the VIN parsed from the
	// bootstrap request.
	// triggered by: VEHICLE_CREATION_SUCCEEDED
	WellKnownBindingAssertionState_VEHICLE_CREATION_SUCCESS WellKnownBindingAssertionState = 12
	// The cloud failed to lookup the vehicle asset associated with the VIN parsed from the
	// bootstrap request as a result of a transient error.
	// triggered by: VEHICLE_LOOKUP_TRANSIENT_ERROR_OCCURRED
	WellKnownBindingAssertionState_VEHICLE_LOOKUP_TRANSIENT_FAILURE WellKnownBindingAssertionState = 13
	// The cloud succeeded in resolving a vehicle associated with the valid VIN provided by the
	// device in the bootstrap request and is in the process of applying the appropriate OEM
	// permissions to the vehicle asset
	// triggered by: VEHICLE_ASSET_FOUND
	WellKnownBindingAssertionState_OEM_PERMISSIONS_APPLICATION_IN_PROGRESS WellKnownBindingAssertionState = 14
	// The cloud failed to apply the appropriate OEM permissions onto the resolved vehicle asset
	// due to a transient error.
	// triggered by: PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED
	WellKnownBindingAssertionState_OEM_PERMISSIONS_APPLICATION_TRANSIENT_FAILURE WellKnownBindingAssertionState = 15
	// The cloud successfully applied OEM-scoped permissions to the resolved vehicle and is now in
	// the process of asserting the binding relationship between the device identified in the
	// bootstrap request and the vehicle asset resolved from the VIN in the bootstrap request.
	// triggered by: OEM_PERMISSIONS_APPLICATION_SUCCEEDED
	WellKnownBindingAssertionState_BINDING_ASSERTION_IN_PROGRESS WellKnownBindingAssertionState = 16
	// The cloud failed to create a binding relationship between the device identified in the
	// bootstrap request and the resolved vehicle due to a transient error.
	// triggered by: BINDING_ASSERTION_TRANSIENT_ERROR_OCCURRED
	WellKnownBindingAssertionState_BINDING_ASSERTION_TRANSIENT_FAILURE WellKnownBindingAssertionState = 17
	// A binding relationship between the device identified in the bootstrap request and the
	// resolved vehicle has been created and the cloud is in the process of applying permissions
	// to the vehicle that have been inferred from the device.
	// triggered by: BINDING_ASSERTED_NEW_VEHICLE
	WellKnownBindingAssertionState_INFERRED_PERMISSIONS_APPLICATION_IN_PROGRESS WellKnownBindingAssertionState = 18
	// A transient error occured while attempting to apply permissions to the newly bound vehicle
	// that were inferred from the device.
	// triggered by: INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED
	WellKnownBindingAssertionState_INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_FAILURE WellKnownBindingAssertionState = 19
	// The cloud has applied permissions to the vehicle that were inferred from the current
	// permissions on the device. The device / vehicle binding assertion has been updated
	// successfully such that the device is now bound to a NEW vehicle or a DIFFERENT vehicle than
	// it was previously bound to.
	// triggered by: INFERRED_PERMISSIONS_APPLICATION_SUCCEEDED
	WellKnownBindingAssertionState_BINDING_ASSERTION_UPDATED WellKnownBindingAssertionState = 20
	// A binding assertion between the device and the resolved vehicle from the request completed
	// successfully.  The result of the binding assertion is that the device is bound to the SAME
	// vehicle it was previously bound to.
	// triggered by: BINDING_ASSERTED_EXISTING_VEHICLE
	WellKnownBindingAssertionState_BINDING_ASSERTION_UNMODIFIED WellKnownBindingAssertionState = 21
	// A binding assertion was attempted as part of handling a bootstrap request that contained a
	// valid VIN, but did not complete due to the bootstrap RPC deadline specified by the device
	// not allowing enough time for the RPC to complete.
	// triggered by: DEVICE_DEADLINE_EXCEEDED
	WellKnownBindingAssertionState_CANCELLED_BY_DEVICE WellKnownBindingAssertionState = 22
)

var WellKnownBindingAssertionState_name = map[int32]string{
	0:  "UNKNOWN_STATE",
	1:  "BOOTSTRAP_REQUESTED",
	2:  "BINDING_UNSUPPORTED",
	3:  "BINDING_NOT_REQUESTED",
	4:  "BINDING_CLEARED",
	5:  "MALFORMED_VIN_FAILURE",
	6:  "OEM_RESOLUTION_FAILURE",
	7:  "OEM_VIN_MISMATCH_FAILURE",
	8:  "VEHICLE_RESOLUTION_IN_PROGRESS",
	9:  "VEHICLE_CREATION_IN_PROGRESS",
	10: "VEHICLE_CREATION_TRANSIENT_FAILURE",
	11: "VEHICLE_CREATION_UNSUPPORTED_FOR_OEM_FAILURE",
	12: "VEHICLE_CREATION_SUCCESS",
	13: "VEHICLE_LOOKUP_TRANSIENT_FAILURE",
	14: "OEM_PERMISSIONS_APPLICATION_IN_PROGRESS",
	15: "OEM_PERMISSIONS_APPLICATION_TRANSIENT_FAILURE",
	16: "BINDING_ASSERTION_IN_PROGRESS",
	17: "BINDING_ASSERTION_TRANSIENT_FAILURE",
	18: "INFERRED_PERMISSIONS_APPLICATION_IN_PROGRESS",
	19: "INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_FAILURE",
	20: "BINDING_ASSERTION_UPDATED",
	21: "BINDING_ASSERTION_UNMODIFIED",
	22: "CANCELLED_BY_DEVICE",
}

var WellKnownBindingAssertionState_value = map[string]int32{
	"UNKNOWN_STATE":                                      0,
	"BOOTSTRAP_REQUESTED":                                1,
	"BINDING_UNSUPPORTED":                                2,
	"BINDING_NOT_REQUESTED":                              3,
	"BINDING_CLEARED":                                    4,
	"MALFORMED_VIN_FAILURE":                              5,
	"OEM_RESOLUTION_FAILURE":                             6,
	"OEM_VIN_MISMATCH_FAILURE":                           7,
	"VEHICLE_RESOLUTION_IN_PROGRESS":                     8,
	"VEHICLE_CREATION_IN_PROGRESS":                       9,
	"VEHICLE_CREATION_TRANSIENT_FAILURE":                 10,
	"VEHICLE_CREATION_UNSUPPORTED_FOR_OEM_FAILURE":       11,
	"VEHICLE_CREATION_SUCCESS":                           12,
	"VEHICLE_LOOKUP_TRANSIENT_FAILURE":                   13,
	"OEM_PERMISSIONS_APPLICATION_IN_PROGRESS":            14,
	"OEM_PERMISSIONS_APPLICATION_TRANSIENT_FAILURE":      15,
	"BINDING_ASSERTION_IN_PROGRESS":                      16,
	"BINDING_ASSERTION_TRANSIENT_FAILURE":                17,
	"INFERRED_PERMISSIONS_APPLICATION_IN_PROGRESS":       18,
	"INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_FAILURE": 19,
	"BINDING_ASSERTION_UPDATED":                          20,
	"BINDING_ASSERTION_UNMODIFIED":                       21,
	"CANCELLED_BY_DEVICE":                                22,
}

func (x WellKnownBindingAssertionState) String() string {
	return proto.EnumName(WellKnownBindingAssertionState_name, int32(x))
}

func (WellKnownBindingAssertionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aaff459aed4aa8a4, []int{0}
}

type WellKnownBindingAssertionTransitionTrigger int32

const (
	WellKnownBindingAssertionTransitionTrigger_UNKNOWN_TRANSITION_TRIGGER                                WellKnownBindingAssertionTransitionTrigger = 0
	WellKnownBindingAssertionTransitionTrigger_BOOTSTRAP_REQUEST_RECEIVED                                WellKnownBindingAssertionTransitionTrigger = 1
	WellKnownBindingAssertionTransitionTrigger_DEVICE_NOT_SUPPORTED                                      WellKnownBindingAssertionTransitionTrigger = 2
	WellKnownBindingAssertionTransitionTrigger_DEVICE_ASSERTED_NO_VIN                                    WellKnownBindingAssertionTransitionTrigger = 3
	WellKnownBindingAssertionTransitionTrigger_DEVICE_ASSERTED_NOT_BOUND_TO_VEHICLE                      WellKnownBindingAssertionTransitionTrigger = 4
	WellKnownBindingAssertionTransitionTrigger_DEVICE_ASSERTED_MALFORMED_VIN                             WellKnownBindingAssertionTransitionTrigger = 5
	WellKnownBindingAssertionTransitionTrigger_OEM_RESOLUTION_FAILED                                     WellKnownBindingAssertionTransitionTrigger = 6
	WellKnownBindingAssertionTransitionTrigger_DEVICE_ASSERTED_OUT_OF_SCOPE_VIN                          WellKnownBindingAssertionTransitionTrigger = 7
	WellKnownBindingAssertionTransitionTrigger_DEVICE_ASSERTED_VALID_VIN                                 WellKnownBindingAssertionTransitionTrigger = 8
	WellKnownBindingAssertionTransitionTrigger_VEHICLE_ASSET_NOT_FOUND                                   WellKnownBindingAssertionTransitionTrigger = 9
	WellKnownBindingAssertionTransitionTrigger_VEHICLE_CREATION_TRANSIENT_ERROR_OCCURRED                 WellKnownBindingAssertionTransitionTrigger = 10
	WellKnownBindingAssertionTransitionTrigger_VEHICLE_CREATION_FOR_OEM_DISABLED                         WellKnownBindingAssertionTransitionTrigger = 11
	WellKnownBindingAssertionTransitionTrigger_VEHICLE_CREATION_SUCCEEDED                                WellKnownBindingAssertionTransitionTrigger = 12
	WellKnownBindingAssertionTransitionTrigger_VEHICLE_LOOKUP_TRANSIENT_ERROR_OCCURRED                   WellKnownBindingAssertionTransitionTrigger = 13
	WellKnownBindingAssertionTransitionTrigger_VEHICLE_ASSET_FOUND                                       WellKnownBindingAssertionTransitionTrigger = 14
	WellKnownBindingAssertionTransitionTrigger_OEM_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED      WellKnownBindingAssertionTransitionTrigger = 15
	WellKnownBindingAssertionTransitionTrigger_OEM_PERMISSIONS_APPLICATION_SUCCEEDED                     WellKnownBindingAssertionTransitionTrigger = 16
	WellKnownBindingAssertionTransitionTrigger_BINDING_ASSERTION_TRANSIENT_ERROR_OCCURRED                WellKnownBindingAssertionTransitionTrigger = 17
	WellKnownBindingAssertionTransitionTrigger_BINDING_ASSERTED_NEW_VEHICLE                              WellKnownBindingAssertionTransitionTrigger = 18
	WellKnownBindingAssertionTransitionTrigger_INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED WellKnownBindingAssertionTransitionTrigger = 19
	WellKnownBindingAssertionTransitionTrigger_INFERRED_PERMISSIONS_APPLICATION_SUCCEEDED                WellKnownBindingAssertionTransitionTrigger = 20
	WellKnownBindingAssertionTransitionTrigger_BINDING_ASSERTED_EXISTING_VEHICLE                         WellKnownBindingAssertionTransitionTrigger = 21
	WellKnownBindingAssertionTransitionTrigger_DEVICE_DEADLINE_EXCEEDED                                  WellKnownBindingAssertionTransitionTrigger = 22
)

var WellKnownBindingAssertionTransitionTrigger_name = map[int32]string{
	0:  "UNKNOWN_TRANSITION_TRIGGER",
	1:  "BOOTSTRAP_REQUEST_RECEIVED",
	2:  "DEVICE_NOT_SUPPORTED",
	3:  "DEVICE_ASSERTED_NO_VIN",
	4:  "DEVICE_ASSERTED_NOT_BOUND_TO_VEHICLE",
	5:  "DEVICE_ASSERTED_MALFORMED_VIN",
	6:  "OEM_RESOLUTION_FAILED",
	7:  "DEVICE_ASSERTED_OUT_OF_SCOPE_VIN",
	8:  "DEVICE_ASSERTED_VALID_VIN",
	9:  "VEHICLE_ASSET_NOT_FOUND",
	10: "VEHICLE_CREATION_TRANSIENT_ERROR_OCCURRED",
	11: "VEHICLE_CREATION_FOR_OEM_DISABLED",
	12: "VEHICLE_CREATION_SUCCEEDED",
	13: "VEHICLE_LOOKUP_TRANSIENT_ERROR_OCCURRED",
	14: "VEHICLE_ASSET_FOUND",
	15: "OEM_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED",
	16: "OEM_PERMISSIONS_APPLICATION_SUCCEEDED",
	17: "BINDING_ASSERTION_TRANSIENT_ERROR_OCCURRED",
	18: "BINDING_ASSERTED_NEW_VEHICLE",
	19: "INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED",
	20: "INFERRED_PERMISSIONS_APPLICATION_SUCCEEDED",
	21: "BINDING_ASSERTED_EXISTING_VEHICLE",
	22: "DEVICE_DEADLINE_EXCEEDED",
}

var WellKnownBindingAssertionTransitionTrigger_value = map[string]int32{
	"UNKNOWN_TRANSITION_TRIGGER":                                0,
	"BOOTSTRAP_REQUEST_RECEIVED":                                1,
	"DEVICE_NOT_SUPPORTED":                                      2,
	"DEVICE_ASSERTED_NO_VIN":                                    3,
	"DEVICE_ASSERTED_NOT_BOUND_TO_VEHICLE":                      4,
	"DEVICE_ASSERTED_MALFORMED_VIN":                             5,
	"OEM_RESOLUTION_FAILED":                                     6,
	"DEVICE_ASSERTED_OUT_OF_SCOPE_VIN":                          7,
	"DEVICE_ASSERTED_VALID_VIN":                                 8,
	"VEHICLE_ASSET_NOT_FOUND":                                   9,
	"VEHICLE_CREATION_TRANSIENT_ERROR_OCCURRED":                 10,
	"VEHICLE_CREATION_FOR_OEM_DISABLED":                         11,
	"VEHICLE_CREATION_SUCCEEDED":                                12,
	"VEHICLE_LOOKUP_TRANSIENT_ERROR_OCCURRED":                   13,
	"VEHICLE_ASSET_FOUND":                                       14,
	"OEM_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED":      15,
	"OEM_PERMISSIONS_APPLICATION_SUCCEEDED":                     16,
	"BINDING_ASSERTION_TRANSIENT_ERROR_OCCURRED":                17,
	"BINDING_ASSERTED_NEW_VEHICLE":                              18,
	"INFERRED_PERMISSIONS_APPLICATION_TRANSIENT_ERROR_OCCURRED": 19,
	"INFERRED_PERMISSIONS_APPLICATION_SUCCEEDED":                20,
	"BINDING_ASSERTED_EXISTING_VEHICLE":                         21,
	"DEVICE_DEADLINE_EXCEEDED":                                  22,
}

func (x WellKnownBindingAssertionTransitionTrigger) String() string {
	return proto.EnumName(WellKnownBindingAssertionTransitionTrigger_name, int32(x))
}

func (WellKnownBindingAssertionTransitionTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aaff459aed4aa8a4, []int{1}
}

func init() {
	proto.RegisterEnum("autonomic.ext.event.state.binding.WellKnownBindingAssertionState", WellKnownBindingAssertionState_name, WellKnownBindingAssertionState_value)
	proto.RegisterEnum("autonomic.ext.event.state.binding.WellKnownBindingAssertionTransitionTrigger", WellKnownBindingAssertionTransitionTrigger_name, WellKnownBindingAssertionTransitionTrigger_value)
}

func init() {
	proto.RegisterFile("autonomic/ext/event/state/binding.proto", fileDescriptor_aaff459aed4aa8a4)
}

var fileDescriptor_aaff459aed4aa8a4 = []byte{
	// 823 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x5d, 0x53, 0xdb, 0x46,
	0x14, 0x8d, 0x43, 0x02, 0xc9, 0x4d, 0x08, 0x62, 0xf9, 0x48, 0x42, 0x13, 0x26, 0xa4, 0xa1, 0x34,
	0xb4, 0x58, 0xfd, 0x9a, 0x4e, 0xfb, 0xd0, 0x07, 0x59, 0x7b, 0x4d, 0x76, 0x90, 0x77, 0xd5, 0xdd,
	0x95, 0x49, 0xfb, 0xb2, 0x63, 0xa8, 0x86, 0x6a, 0x06, 0xe4, 0x8e, 0xad, 0xb4, 0xf9, 0x1f, 0xfd,
	0x03, 0x9d, 0xfe, 0x90, 0xfe, 0xae, 0x3e, 0x76, 0xae, 0x6c, 0x19, 0x62, 0x81, 0xa1, 0x6f, 0xa0,
	0x73, 0xee, 0xbd, 0x67, 0x77, 0xcf, 0xf1, 0x85, 0x9d, 0xde, 0xbb, 0xa2, 0x9f, 0xf7, 0xcf, 0xb2,
	0x63, 0x3f, 0x7d, 0x5f, 0xf8, 0xe9, 0xef, 0x69, 0x5e, 0xf8, 0xc3, 0xa2, 0x57, 0xa4, 0xfe, 0x51,
	0x96, 0xff, 0x92, 0xe5, 0x27, 0xcd, 0xdf, 0x06, 0xfd, 0xa2, 0xcf, 0xb6, 0x26, 0xc4, 0x66, 0xfa,
	0xbe, 0x68, 0x96, 0xc4, 0x66, 0x49, 0x6c, 0x8e, 0x89, 0xbb, 0xff, 0xcc, 0xc3, 0xe6, 0x61, 0x7a,
	0x7a, 0x7a, 0x90, 0xf7, 0xff, 0xc8, 0x5b, 0xa3, 0x8f, 0xc1, 0x70, 0x98, 0x0e, 0x8a, 0xac, 0x9f,
	0x1b, 0xa2, 0xb2, 0x65, 0x58, 0x4c, 0xe4, 0x81, 0x54, 0x87, 0xd2, 0x19, 0x1b, 0x58, 0xf4, 0x6e,
	0xb1, 0xc7, 0xb0, 0xd2, 0x52, 0xca, 0x1a, 0xab, 0x83, 0xd8, 0x69, 0xfc, 0x31, 0x41, 0x63, 0x91,
	0x7b, 0x8d, 0x12, 0x10, 0x92, 0x0b, 0xb9, 0xef, 0x12, 0x69, 0x92, 0x38, 0x56, 0x9a, 0x80, 0xdb,
	0xec, 0x29, 0xac, 0x55, 0x80, 0x54, 0xf6, 0x42, 0xcd, 0x1c, 0x5b, 0x81, 0xa5, 0x0a, 0x0a, 0x23,
	0x0c, 0x34, 0x72, 0xef, 0x0e, 0xf1, 0x3b, 0x41, 0xd4, 0x56, 0xba, 0x83, 0xdc, 0x75, 0x85, 0x74,
	0xed, 0x40, 0x44, 0x89, 0x46, 0xef, 0x2e, 0xdb, 0x80, 0x75, 0x85, 0x1d, 0xa7, 0xd1, 0xa8, 0x28,
	0xb1, 0x42, 0x9d, 0x63, 0xf3, 0xec, 0x19, 0x3c, 0x21, 0x8c, 0x0a, 0x3a, 0xc2, 0x74, 0x02, 0x1b,
	0xbe, 0x99, 0xa0, 0x0b, 0xec, 0x25, 0x6c, 0x76, 0xf1, 0x8d, 0x08, 0x23, 0xbc, 0x58, 0x2d, 0xa4,
	0x8b, 0xb5, 0xda, 0xd7, 0x68, 0x8c, 0x77, 0x8f, 0xbd, 0x80, 0x67, 0x15, 0x27, 0xd4, 0x18, 0xd4,
	0x18, 0xf7, 0xd9, 0x27, 0xf0, 0xb2, 0xc6, 0xb0, 0x3a, 0x90, 0x46, 0xa0, 0xb4, 0x93, 0x69, 0xc0,
	0xbe, 0x80, 0xcf, 0x6b, 0xbc, 0x0b, 0x97, 0xe2, 0xda, 0x4a, 0x3b, 0x12, 0x5b, 0x55, 0x3c, 0x20,
	0xf5, 0xb5, 0x0a, 0x93, 0x84, 0x21, 0xcd, 0x7d, 0xc8, 0x5e, 0xc1, 0x8b, 0x0a, 0x8d, 0x94, 0x3a,
	0x48, 0xe2, 0x4b, 0xa6, 0x2e, 0xb2, 0xcf, 0x60, 0x87, 0x9a, 0xc6, 0xa8, 0x3b, 0xc2, 0x18, 0xa1,
	0xa4, 0x71, 0x41, 0x1c, 0x47, 0x22, 0xac, 0x1f, 0xe5, 0x11, 0xfb, 0x12, 0xf6, 0x66, 0x91, 0xeb,
	0xfd, 0x97, 0xd8, 0x16, 0x3c, 0xaf, 0x5e, 0x2b, 0x30, 0x06, 0x75, 0xad, 0xab, 0xc7, 0x76, 0xe0,
	0xe3, 0x3a, 0xa5, 0xde, 0x6b, 0x99, 0x6e, 0x48, 0xc8, 0x36, 0x6a, 0x8d, 0xfc, 0x46, 0x82, 0x19,
	0xfb, 0x16, 0xbe, 0xba, 0xb6, 0xa2, 0x3e, 0x69, 0x85, 0x3d, 0x87, 0xa7, 0x75, 0x49, 0x49, 0xcc,
	0x03, 0xb2, 0xe0, 0x2a, 0x3d, 0xfa, 0x25, 0xb0, 0xec, 0x28, 0x2e, 0xda, 0x02, 0xb9, 0xb7, 0x46,
	0xc6, 0x0e, 0x03, 0x19, 0x62, 0x14, 0x21, 0x77, 0xad, 0x9f, 0x1c, 0xc7, 0xae, 0x08, 0xd1, 0x5b,
	0xdf, 0xfd, 0x73, 0x01, 0x76, 0xaf, 0x0c, 0x90, 0x1d, 0xf4, 0xf2, 0x61, 0x36, 0xfa, 0x2b, 0x3b,
	0x39, 0x49, 0x07, 0x6c, 0x13, 0x36, 0xaa, 0x30, 0x8d, 0x74, 0x8e, 0x25, 0x8b, 0xfd, 0x7d, 0xd4,
	0xde, 0x2d, 0xc2, 0x6b, 0xc9, 0x72, 0x1a, 0x43, 0x14, 0xdd, 0x32, 0x60, 0x4f, 0x60, 0x75, 0x34,
	0xba, 0x8c, 0xd1, 0xc5, 0x84, 0x6d, 0xc0, 0xfa, 0x18, 0x19, 0x1d, 0x01, 0xb9, 0x93, 0x8a, 0x92,
	0xe0, 0xcd, 0xb1, 0x4f, 0xe1, 0x55, 0x1d, 0xb3, 0xae, 0xa5, 0x12, 0xc9, 0x9d, 0x55, 0x6e, 0xec,
	0x2b, 0xef, 0x0e, 0x3d, 0xef, 0x34, 0xf3, 0x83, 0x1c, 0x7a, 0x77, 0x29, 0x9a, 0x97, 0xe4, 0x0f,
	0xb9, 0x37, 0x4f, 0x16, 0x9d, 0xae, 0x56, 0x89, 0x75, 0xaa, 0xed, 0x4c, 0xa8, 0x62, 0x2c, 0x1b,
	0x2c, 0xd0, 0x63, 0x4c, 0xb3, 0xba, 0x41, 0x24, 0x46, 0xfd, 0xef, 0xb1, 0x8f, 0xe0, 0x71, 0xe5,
	0x73, 0xc2, 0x6d, 0x29, 0xb5, 0x4d, 0x52, 0xbd, 0xfb, 0x6c, 0x0f, 0x5e, 0xcf, 0x08, 0x1f, 0x6a,
	0x4d, 0xa1, 0x0a, 0xc3, 0x84, 0x1c, 0xe2, 0x01, 0xdb, 0x86, 0xad, 0x1a, 0xbd, 0xca, 0x1d, 0x17,
	0x26, 0x68, 0x91, 0xee, 0x07, 0x74, 0xeb, 0x97, 0x07, 0x0f, 0x39, 0x72, 0xef, 0x21, 0x85, 0xea,
	0xca, 0xe8, 0x4d, 0xcd, 0x5c, 0x24, 0xab, 0x7c, 0xa8, 0x7f, 0xa4, 0xfd, 0x11, 0xfb, 0x0e, 0xbe,
	0xb9, 0x59, 0xda, 0xa6, 0x5a, 0x2e, 0xb1, 0xd7, 0xb0, 0x3d, 0xab, 0xf2, 0x5c, 0xaa, 0xc7, 0x9a,
	0xb0, 0x3b, 0x2b, 0x7c, 0x53, 0xad, 0x97, 0xeb, 0xd6, 0x27, 0x6f, 0xe0, 0xe1, 0xc4, 0x12, 0x8c,
	0xfd, 0x00, 0xdf, 0xff, 0x8f, 0xcc, 0x4d, 0x0d, 0x58, 0x21, 0x41, 0xd7, 0x96, 0x9f, 0x1f, 0x60,
	0x95, 0x9e, 0xac, 0x26, 0x08, 0xdf, 0x0a, 0x63, 0xe9, 0x4b, 0xa5, 0x6a, 0x8d, 0x7e, 0x2b, 0xc7,
	0x26, 0xe2, 0x18, 0xf0, 0x48, 0x48, 0x74, 0xf8, 0x76, 0xdc, 0x64, 0xbd, 0xf5, 0x57, 0x03, 0xb6,
	0x8f, 0xfb, 0x67, 0xcd, 0x6b, 0x17, 0x60, 0x6b, 0x63, 0x3a, 0xbc, 0xe5, 0xd2, 0x8b, 0x69, 0x7f,
	0xc6, 0x8d, 0x9f, 0xe3, 0x93, 0xac, 0xf8, 0xf5, 0xdd, 0x51, 0xf3, 0xb8, 0x7f, 0xe6, 0x4f, 0x7a,
	0xed, 0xf5, 0x32, 0x5a, 0xbc, 0xe9, 0x20, 0xef, 0x9d, 0xee, 0x95, 0x9b, 0x76, 0xe8, 0x0f, 0x07,
	0xc7, 0xfe, 0x59, 0x2f, 0xcb, 0xfd, 0xf2, 0x7f, 0xff, 0xca, 0x0d, 0xfd, 0x6f, 0xa3, 0xf1, 0xf7,
	0xed, 0xb9, 0x20, 0xb1, 0x47, 0xf3, 0x25, 0xf3, 0xeb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd2,
	0x87, 0x38, 0xe2, 0xce, 0x07, 0x00, 0x00,
}
