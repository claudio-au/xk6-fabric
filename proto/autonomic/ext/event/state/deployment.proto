/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
syntax = "proto3";

package autonomic.ext.event.state.deployment;

option go_package = "xk6-fabric/proto/autonomic/ext/event/state";
option java_package = "com.autonomic.ext.event.state.deployment";
option java_outer_classname = "WellKnownDeploymentStateProto";
option java_multiple_files = true;

option cc_enable_arenas = true;

option objc_class_prefix = "AUT";

// Those well-known from_state and to_state fields in StateTransition events
enum WellKnownDeploymentState {
    UNKNOWN_STATE = 0;

    // Deployment request was received by cloud through API
    // Emitted by: cloud
    REQUESTED = 1;

    // Request was queued in the cloud, waiting for device
    // to connect.
    // Emitted by: cloud
    // Triggered by: REQUEST_QUEUED_FOR_DELIVERY
    REQUEST_DELIVERY_QUEUED = 2;

    // Cloud attempted delivery of request to device
    // Emitted by: cloud
    // Triggered by: DEVICE_CONNECTED_TO_CLOUD
    REQUEST_DELIVERY_IN_PROGRESS = 3;

    // Delivery attempt was not acknowledged by device
    // Emitted by: cloud
    // Triggered by: DELIVERY_TIMEOUT_EXCEEDED
    REQUEST_DELIVERY_TIMED_OUT = 4;

    // Delivery of request attempt failed due to device disconnect
    // Emitted by: cloud
    // Triggered by: DELIVERY_FAILED
    REQUEST_DELIVERY_FAILURE = 5;

    // Cancellation removes the request from the list of
    // in-progress commands in the cloud, but does not
    // cancel the operation on the device. Emitted by cloud.
    // Triggered by: CANCELLATION_REQUESTED
    CANCELLATION_IN_PROGRESS = 6;

    // Command was successfully removed from set of in-progress
    // commands from the cloud. Emitted by cloud.
    // Triggered by: CANCELLATION_REQUEST_FULFILLED
    CANCELLED = 7;

    // Command expired before reaching a terminal state.
    // This event can be emitted by the device or the cloud.
    // In either case, it will cause the command to be removed
    // from the set of in-progress commands on the cloud.
    // However the cloud does not send this event to the device.
    // This state is terminal.
    // Emitted by: cloud or device
    // Triggered by: EXPIRATION_EXCEEDED
    EXPIRED = 30;

    // Request is acknowledged by device, queued, and the device will begin
    // processing the request when the device is ready.
    // Emitted by: device
    // Triggered by: REQUEST_QUEUED_ON_DEVICE
    REQUEST_QUEUED = 10;

    // Request is being decrypted and validated by device
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_STARTED
    REQUEST_VALIDATION_IN_PROGRESS = 9;

    // Request failed validation or decryption
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_FAILED
    REQUEST_VALIDATION_FAILURE = 8;

    // Request is acknowledged by device, queued, and the device may begin
    // downloading artifacts when it is ready to begin the deployment
    // process.
    // Emitted by: device
    // Triggered by: REQUEST_VALIDATION_SUCCEEDED
    ARTIFACT_RETRIEVAL_QUEUED = 60;

    // Device has begun actively downloading artifacts from cloud
    // Emitted by: device
    // Triggered by: ARTIFACT_RETRIEVAL_STARTED
    ARTIFACT_RETRIEVAL_IN_PROGRESS = 61;

    // Device encountered an error downlaoding artifacts. It may either re-try at
    // its discretion or transition into a terminal failure.
    // Emitted by: device
    // Triggered by:  ARTIFACT_RETRIEVAL_FAILED
    ARTIFACT_RETRIEVAL_FAILURE = 62;

    // Artifact retrieval is successful, and the device has queued installation
    // to begin at its discretion.
    // Emitted by: device
    // Triggered by: ARTIFACT_RETRIVAL_SUCCEDED
    INSTALLATION_QUEUED = 63;

    // Device has begin installation of artifacts
    // Emitted by: device
    // Triggered by: INSTALLER_STARTED_ON_DEVICE
    INSTALLATION_IN_PROGRESS = 64;

    // Installation failed. The device may retry or tansition into a terminal failed state
    // Emitted by: device
    // Triggered by: INSTALLER_FAILED_ON_DEVICE
    INSTALLATION_FAILURE = 65;

    // Post-installation tasks are in-progress. This state covers any work that may be needed
    // after installation, before final success or failure
    // Emitted by: device
    // Triggered by: STARTED_ON_DEVICE
    DEPLOYING = 66;

    // A non-fatal deployment error has occurred on the device. This error may transition into
    // any other state on the device, depending on what caused the failure. This state allows
    // OEM Developers to easily identify non-fatal issues with OTA. OEM developers may attach
    // additional oem-specific context to this state in order to articulate the root cause
    // information of the failure.
    NON_FATAL_DEVICE_ERROR_STATE = 22;

    // The device has successfully completed the deployment in question.
    // Triggered by: DEPLOYMENT_SUCCEEDED_ON_DEVICE
    SUCCEEDED_ON_DEVICE = 23;

    // The cloud is in the process of validating the event emitted by the device indicating that the
    // command has succeeded.
    // Triggered by: SUCCEEDED_ON_DEVICE_EVENT_RECEIVED
    CLOUD_VALIDATION_IN_PROGRESS = 24;

    // Cloud failed to validate data provided by the device
    // Emitted by: cloud
    // Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED
    CLOUD_VALIDATION_FAILURE = 12;

    // Deployment was successful on device. This state is terminal.
    // Emitted by: device
    // Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED
    SUCCESS = 67;

    // Deployment failed. This state is reachable from all intermediate failed states, if the
    // device determines that the failure is non-recoverable. This state is terminal.
    // Emitted by: device
    // Triggered by: DEPLOYMENT_FAILED_ON_DEVICE
    FAILURE = 68;
}

// Those well-Known trigger field values in StateTransition events
// See WellKnownDeploymentState enum for information as to when these triggers are used
enum WellKnownDeploymentTransitionTrigger {
    UNKNOWN_TRIGGER = 0;

    REQUEST_QUEUED_FOR_DELIVERY = 1;       // cloud
    DEVICE_CONNECTED_TO_CLOUD = 2;         // cloud
    REQUEST_DELIVERY_FAILED = 3;           // cloud
    REQUEST_DELIVERY_TIMEOUT_EXCEEDED = 4; // cloud

    CANCELLATION_REQUEST_RECEIVED = 5;     // cloud
    CANCELLATION_REQUEST_FULFILLED = 6;    // cloud

    EXPIRATION_EXCEEDED = 30;              // cloud or device

    REQUEST_QUEUED_ON_DEVICE = 60;         // device
    REQUEST_VALIDATION_FAILED = 7;         // device
    REQUEST_VALIDATION_STARTED = 8;        // device
    REQUEST_VALIDATION_SUCCEEDED = 23;     // device
    NON_FATAL_DEVICE_ERROR_OCCURRED = 22;  // device

    STARTED_ON_DEVICE = 61;                // device
    DEPLOYMENT_SUCCEEDED_ON_DEVICE = 62;   // device
    DEPLOYMENT_FAILED_ON_DEVICE = 63;      // device
    INSTALLER_STARTED_ON_DEVICE = 64;      // device
    INSTALLER_FAILED_ON_DEVICE = 65;       // device

    ARTIFACT_RETRIEVAL_STARTED = 80;       // device
    ARTIFACT_RETRIEVAL_SUCCEEDED = 81;     // device
    ARTIFACT_RETRIEVAL_FAILED = 82;        // device

    SUCCEEDED_ON_DEVICE_EVENT_RECEIVED = 24;          // cloud
    CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED = 13;   // cloud
    CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED = 14;      // cloud
}
