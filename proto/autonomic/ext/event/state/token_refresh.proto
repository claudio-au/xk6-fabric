/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
syntax = "proto3";

package autonomic.ext.event.state.tokenrefresh;

option go_package = "xk6-fabric/proto/autonomic/ext/event/state";
option java_package = "com.autonomic.ext.event.state.tokenrefresh";
option java_outer_classname = "WellKnownTokenRefreshStateProto";
option java_multiple_files = true;

option cc_enable_arenas = true;

option objc_class_prefix = "AUT";

enum WellKnownTokenRefreshState {
  UNKNOWN_STATE = 0;

  // Request was received by cloud through API
  // Emitted by: cloud
  REQUESTED = 1;

  // Request was queued in the cloud, waiting for device
  // to connect.
  // Emitted by: cloud
  // Triggered by: REQUEST_QUEUED_FOR_DELIVERY
  REQUEST_DELIVERY_QUEUED = 2;

  // Cloud attempted delivery of request to device
  // Emitted by: cloud
  // Triggered by: DEVICE_CONNECTED_TO_CLOUD
  REQUEST_DELIVERY_IN_PROGRESS = 3;

  // Delivery of request attempt was not acknowledged by device in a timely fashion
  // Emitted by: cloud
  // Triggered by: REQUEST_DELIVERY_TIMEOUT_EXCEEDED
  REQUEST_DELIVERY_TIMED_OUT = 4;

  // Delivery of request attempt failed due to device disconnect
  // Emitted by: cloud
  // Triggered by: REQUEST_DELIVERY_FAILED
  REQUEST_DELIVERY_FAILURE = 5;

  // Request is acknowledged by device, queued, and the device will begin
  // processing the request when the device is ready.
  // Emitted by: device
  // Triggered by: REQUEST_QUEUED_ON_DEVICE
  REQUEST_QUEUED = 6;

  // Request is being decrypted and validated by device
  // Emitted by: device
  // Triggered by: REQUEST_VALIDATION_STARTED
  REQUEST_VALIDATION_IN_PROGRESS = 7;

  // Request failed validation or decryption
  // Emitted by: device
  // Triggered by: REQUEST_VALIDATION_FAILED
  REQUEST_VALIDATION_FAILURE = 8;

  // TokenRefresh is in the process of being reset
  // Emitted by: device
  // Triggered by: REQUEST_VALIDATION_SUCCEEDED
  TOKEN_REFRESH_IN_PROGRESS = 9;

  // The device has successfully completed the actuation in question.
  // Triggered by: TOKEN_REFRESH_SUCCEEDED
  SUCCEEDED_ON_DEVICE = 23;

  // Oem cloud attempted delivery of request
  // Emitted by: cloud
  // Triggered by: CLOUD_REQUEST_PROCESSING_SUCCEEDED
  OEM_CLOUD_DELIVERY_IN_PROGRESS = 10;

  // OEM Cloud attempted translation of request
  // Emitted by: cloud
  // Triggered by: OEM_CLOUD_DELIVERY_SUCCEEDED
  OEM_CLOUD_TRANSLATION_IN_PROGRESS = 11;

  // OEM Cloud attempted delivery of request
  // Emitted by: cloud
  // Triggered by: OEM_CLOUD_TRANSLATION_SUCCEEDED
  OEM_CLOUD_TO_DEVICE_DELIVERY_IN_PROGRESS = 13;

  // The cloud is in the process of validating the event emitted by the device indicating that the
  // command has succeeded.
  // Triggered by: SUCCEEDED_ON_DEVICE_EVENT_RECEIVED
  CLOUD_VALIDATION_IN_PROGRESS = 24;

  // Cloud failed to validate data provided by the device
  // Emitted by: cloud
  // Triggered by: CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED
  CLOUD_VALIDATION_FAILURE = 12;

  // TokenRefresh upload succeeded, and the URI(s) of the archive(s) has been
  // added to the event containing this state.
  // This state is terminal
  // Triggered by: TOKEN_REFRESH_SUCCEEDED
  SUCCESS = 17;

  // TokenRefresh failed. All intermediate failure states should transition to
  // this state.
  // Emitted by: device
  // Triggered by: TOKEN_REFRESH_FAILED
  FAILURE = 18;

  // TokenRefresh command expired. This event can be emitted by
  // the device or the cloud. In either case, it will cause
  // the command to be removed from the set of in-progress commands
  // on the cloud. However the cloud does not send this event to
  // the device. This state is terminal.
  // Triggered by: EXPIRATION_EXCEEDED
  EXPIRED = 19;

  // Command is being removed from set of in-progress
  // commands from the cloud. Emitted by cloud.
  // Triggered by: CANCELLATION_REQUEST_ACKNOWLEDGED
  CANCELLATION_IN_PROGRESS = 21;

  // Command was successfully removed from set of in-progress
  // commands from the cloud. Emitted by cloud.
  // Triggered by: CANCELLATION_REQUEST_FULFILLED
  CANCELLED = 22;
}

// TokenRefresh state transition triggers. See WellKnownTokenRefreshState enum
// for documentation on when these triggers occur.
enum WellKnownTokenRefreshTransitionTrigger {
  UNKNOWN_TRANSITION_TRIGGER = 0;

  REQUEST_QUEUED_FOR_DELIVERY = 1;                  // cloud
  DEVICE_CONNECTED_TO_CLOUD = 2;                    // cloud
  REQUEST_DELIVERY_FAILED = 3;                      // cloud
  REQUEST_DELIVERY_TIMEOUT_EXCEEDED = 4;            // cloud
  CLOUD_REQUEST_PROCESSING_SUCCEEDED = 15;          // cloud

  REQUEST_QUEUED_ON_DEVICE = 5;                     // device
  REQUEST_VALIDATION_STARTED = 6;                   // device
  REQUEST_VALIDATION_FAILED = 7;                    // device
  REQUEST_VALIDATION_SUCCEEDED = 23;                // device

  TOKEN_REFRESH_STARTED = 8;                        // device
  TOKEN_REFRESH_SUCCEEDED = 9;                      // device
  TOKEN_REFRESH_FAILED = 10;                        // device

  OEM_CLOUD_DELIVERY_SUCCEEDED = 11;                // cloud
  OEM_CLOUD_TRANSLATION_SUCCEEDED = 12;             // cloud

  SUCCEEDED_ON_DEVICE_EVENT_RECEIVED = 24;          // cloud
  CLOUD_VALIDATION_OF_DEVICE_DATA_SUCCEEDED = 13;   // cloud
  CLOUD_VALIDATION_OF_DEVICE_DATA_FAILED = 14;      // cloud

  FAILED = 19;                                      // reserved for future use

  EXPIRATION_EXCEEDED = 20;                         // device or cloud

  CANCELLATION_REQUESTED = 21;                      // cloud
  CANCELLATION_REQUEST_FULFILLED = 22;              // cloud
}
