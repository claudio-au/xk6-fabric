/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2018 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */

syntax = "proto3";

package autonomic.ext.telemetry.enumerations.error;

option go_package = "xk6-fabric/proto/autonomic/ext/telemetry/enumerations";
option java_package = "com.autonomic.ext.telemetry.enumerations";
option java_outer_classname = "ErrorProto";
option java_multiple_files = true;

option cc_enable_arenas = true;

option objc_class_prefix = "AUT";

// Error representation for signals.
enum Error {

  reserved 2;

  UNKNOWN = 0; // Could not map the Error type to one of the existing ones.
  FAULT = 1 [deprecated = true];

  INVALID = 3; // The received data type on a signal was incorrect
  OUT_OF_RANGE = 4; // The data has the correct type but outside of the expected boundaries by the source
  FAILURE = 5; // The signal was indentified to be incomprehensive or unrepresentable.
}

enum ErrorSource {
  ERROR_SOURCE_UNKNOWN = 0;
  DEVICE = 1;
}