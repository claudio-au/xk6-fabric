/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/telemetry/enumerations/diesel_exhaust_fluid_level_status.proto

package enumerations

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DieselExhaustFluidLevelStatus int32

const (
	DieselExhaustFluidLevelStatus_UNKNOWN                  DieselExhaustFluidLevelStatus = 0
	DieselExhaustFluidLevelStatus_OVER_HALF_FULL           DieselExhaustFluidLevelStatus = 1 // Deprecated: Do not use.
	DieselExhaustFluidLevelStatus_UNDER_HALF_FULL          DieselExhaustFluidLevelStatus = 2 // Deprecated: Do not use.
	DieselExhaustFluidLevelStatus_RANGE_WARNING            DieselExhaustFluidLevelStatus = 3 // Deprecated: Do not use.
	DieselExhaustFluidLevelStatus_SPEED_LIMIT_IN_RANGE     DieselExhaustFluidLevelStatus = 4 // Deprecated: Do not use.
	DieselExhaustFluidLevelStatus_SPEED_LIMIT_UPON_RESTART DieselExhaustFluidLevelStatus = 5 // Deprecated: Do not use.
	DieselExhaustFluidLevelStatus_SPEED_LIMITED            DieselExhaustFluidLevelStatus = 6 // Deprecated: Do not use.
	DieselExhaustFluidLevelStatus_ENGINE_IDLED_UPON_REFUEL DieselExhaustFluidLevelStatus = 7 // Deprecated: Do not use.
	DieselExhaustFluidLevelStatus_ENGINE_IDLED_SEE_MANUAL  DieselExhaustFluidLevelStatus = 8 // Deprecated: Do not use.
	DieselExhaustFluidLevelStatus_NORMAL                   DieselExhaustFluidLevelStatus = 9
	DieselExhaustFluidLevelStatus_TANK_LEVEL_LOW_WARNING   DieselExhaustFluidLevelStatus = 10
	DieselExhaustFluidLevelStatus_TANK_LEVEL_EMPTY_WARNING DieselExhaustFluidLevelStatus = 11
)

var DieselExhaustFluidLevelStatus_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "OVER_HALF_FULL",
	2:  "UNDER_HALF_FULL",
	3:  "RANGE_WARNING",
	4:  "SPEED_LIMIT_IN_RANGE",
	5:  "SPEED_LIMIT_UPON_RESTART",
	6:  "SPEED_LIMITED",
	7:  "ENGINE_IDLED_UPON_REFUEL",
	8:  "ENGINE_IDLED_SEE_MANUAL",
	9:  "NORMAL",
	10: "TANK_LEVEL_LOW_WARNING",
	11: "TANK_LEVEL_EMPTY_WARNING",
}

var DieselExhaustFluidLevelStatus_value = map[string]int32{
	"UNKNOWN":                  0,
	"OVER_HALF_FULL":           1,
	"UNDER_HALF_FULL":          2,
	"RANGE_WARNING":            3,
	"SPEED_LIMIT_IN_RANGE":     4,
	"SPEED_LIMIT_UPON_RESTART": 5,
	"SPEED_LIMITED":            6,
	"ENGINE_IDLED_UPON_REFUEL": 7,
	"ENGINE_IDLED_SEE_MANUAL":  8,
	"NORMAL":                   9,
	"TANK_LEVEL_LOW_WARNING":   10,
	"TANK_LEVEL_EMPTY_WARNING": 11,
}

func (x DieselExhaustFluidLevelStatus) String() string {
	return proto.EnumName(DieselExhaustFluidLevelStatus_name, int32(x))
}

func (DieselExhaustFluidLevelStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_354aee9380130a9a, []int{0}
}

func init() {
	proto.RegisterEnum("autonomic.ext.telemetry.enumerations.dieselExhaustFluidLevelStatus.DieselExhaustFluidLevelStatus", DieselExhaustFluidLevelStatus_name, DieselExhaustFluidLevelStatus_value)
}

func init() {
	proto.RegisterFile("autonomic/ext/telemetry/enumerations/diesel_exhaust_fluid_level_status.proto", fileDescriptor_354aee9380130a9a)
}

var fileDescriptor_354aee9380130a9a = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xdd, 0x6a, 0xd4, 0x40,
	0x14, 0x80, 0x4d, 0xaa, 0xdb, 0x3a, 0x45, 0x1d, 0x82, 0xb6, 0xa5, 0x54, 0x14, 0xaf, 0x44, 0x68,
	0xe6, 0xc2, 0x27, 0x98, 0x25, 0x27, 0x6b, 0xe8, 0x64, 0x12, 0xf2, 0xd3, 0x45, 0xbd, 0x18, 0xd2,
	0xec, 0xe8, 0x06, 0xf2, 0x23, 0xc9, 0x44, 0xd6, 0xd7, 0xf1, 0x21, 0x7c, 0x12, 0x1f, 0xc6, 0x4b,
	0xc9, 0x2c, 0x1b, 0xb2, 0x37, 0xcb, 0x5e, 0x26, 0xdf, 0x77, 0x3e, 0x18, 0xce, 0x41, 0x2c, 0xeb,
	0x55, 0x53, 0x37, 0x55, 0x91, 0x13, 0xb9, 0x51, 0x44, 0xc9, 0x52, 0x56, 0x52, 0xb5, 0xbf, 0x88,
	0xac, 0xfb, 0x4a, 0xb6, 0x99, 0x2a, 0x9a, 0xba, 0x23, 0xab, 0x42, 0x76, 0xb2, 0x14, 0x72, 0xb3,
	0xce, 0xfa, 0x4e, 0x89, 0x6f, 0x65, 0x5f, 0xac, 0x44, 0x29, 0x7f, 0xca, 0x52, 0x74, 0x2a, 0x53,
	0x7d, 0x67, 0xff, 0x68, 0x1b, 0xd5, 0x58, 0xf3, 0xb1, 0x66, 0xcb, 0x8d, 0xb2, 0xc7, 0x9a, 0x3d,
	0xad, 0xd9, 0xdb, 0x1a, 0x6c, 0x63, 0xee, 0xd0, 0x62, 0x43, 0x2a, 0xd6, 0xa5, 0x0f, 0x7f, 0x4d,
	0xf4, 0xda, 0x39, 0x64, 0x58, 0xe7, 0xe8, 0x34, 0xe5, 0x77, 0x3c, 0x58, 0x72, 0xfc, 0xc8, 0xba,
	0x40, 0xcf, 0x83, 0x7b, 0x88, 0xc4, 0x27, 0xca, 0x5c, 0xe1, 0xa6, 0x8c, 0x61, 0xe3, 0xda, 0x3c,
	0x33, 0xac, 0x4b, 0xf4, 0x22, 0xe5, 0xce, 0x1e, 0x30, 0x35, 0x78, 0x85, 0x9e, 0x45, 0x94, 0x2f,
	0x40, 0x2c, 0x69, 0xc4, 0x3d, 0xbe, 0xc0, 0x27, 0xfa, 0xf7, 0x0d, 0x7a, 0x19, 0x87, 0x00, 0x8e,
	0x60, 0x9e, 0xef, 0x25, 0xc2, 0xe3, 0x42, 0x5b, 0xf8, 0xb1, 0xa6, 0x6f, 0xd1, 0xd5, 0x94, 0xa6,
	0x61, 0xc0, 0x45, 0x04, 0x71, 0x42, 0xa3, 0x04, 0x3f, 0xd9, 0x65, 0x27, 0x06, 0x38, 0x78, 0xb6,
	0x1b, 0x04, 0xbe, 0xf0, 0x38, 0x08, 0xcf, 0x61, 0xe0, 0xec, 0x26, 0xdd, 0x14, 0x18, 0x3e, 0xd5,
	0xc6, 0x1b, 0x74, 0xb9, 0x67, 0xc4, 0x00, 0xc2, 0xa7, 0x3c, 0xa5, 0x0c, 0x9f, 0x69, 0x01, 0xa1,
	0x19, 0x0f, 0x22, 0x9f, 0x32, 0xfc, 0xd4, 0xba, 0x46, 0x17, 0x09, 0xe5, 0x77, 0x82, 0xc1, 0x3d,
	0x30, 0xc1, 0x82, 0xe5, 0xf8, 0x0a, 0x64, 0xdd, 0xa0, 0xab, 0x09, 0x03, 0x3f, 0x4c, 0x3e, 0x8f,
	0xf4, 0x7c, 0xfe, 0xc7, 0x40, 0xef, 0xf3, 0xa6, 0xb2, 0x8f, 0xd9, 0xd0, 0xfc, 0xdd, 0xc1, 0x05,
	0x84, 0xc3, 0xae, 0x43, 0xe3, 0xcb, 0xd7, 0xef, 0x85, 0x5a, 0xf7, 0x0f, 0x76, 0xde, 0x54, 0x64,
	0xcc, 0xde, 0x66, 0xc5, 0x70, 0x49, 0xb2, 0xad, 0xb3, 0xf2, 0x56, 0x5f, 0x45, 0x47, 0xba, 0x36,
	0x27, 0x55, 0x56, 0xd4, 0x44, 0x7f, 0x93, 0x63, 0x4e, 0xee, 0x9f, 0x61, 0xfc, 0x36, 0x4f, 0x68,
	0x9a, 0x3c, 0xcc, 0xf4, 0xd0, 0xc7, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xce, 0x80, 0xf3, 0xd2,
	0xaa, 0x02, 0x00, 0x00,
}
