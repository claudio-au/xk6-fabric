/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// autonomic/ext/telemetry/ev.proto is a deprecated file.

package telemetry

import (
	fmt "fmt"
	enumerations "xk6-fabric/proto/autonomic/ext/telemetry/enumerations"
	//enumerations "xk6-fabric/proto/autonomic/ext/telemetry/enumerations"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Temperature struct {
	// Types that are valid to be assigned to Value:
	//	*Temperature_Temperature
	//	*Temperature_WkErrorName
	Value                isTemperature_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Temperature) Reset()         { *m = Temperature{} }
func (m *Temperature) String() string { return proto.CompactTextString(m) }
func (*Temperature) ProtoMessage()    {}
func (*Temperature) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{0}
}

func (m *Temperature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temperature.Unmarshal(m, b)
}
func (m *Temperature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temperature.Marshal(b, m, deterministic)
}
func (m *Temperature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temperature.Merge(m, src)
}
func (m *Temperature) XXX_Size() int {
	return xxx_messageInfo_Temperature.Size(m)
}
func (m *Temperature) XXX_DiscardUnknown() {
	xxx_messageInfo_Temperature.DiscardUnknown(m)
}

var xxx_messageInfo_Temperature proto.InternalMessageInfo

type isTemperature_Value interface {
	isTemperature_Value()
}

type Temperature_Temperature struct {
	Temperature float64 `protobuf:"fixed64,1,opt,name=temperature,proto3,oneof"`
}

type Temperature_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*Temperature_Temperature) isTemperature_Value() {}

func (*Temperature_WkErrorName) isTemperature_Value() {}

func (m *Temperature) GetValue() isTemperature_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Temperature) GetTemperature() float64 {
	if x, ok := m.GetValue().(*Temperature_Temperature); ok {
		return x.Temperature
	}
	return 0
}

func (m *Temperature) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*Temperature_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Temperature) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Temperature_Temperature)(nil),
		(*Temperature_WkErrorName)(nil),
	}
}

type Voltage struct {
	// Types that are valid to be assigned to Value:
	//	*Voltage_Voltage
	//	*Voltage_WkErrorName
	Value                isVoltage_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Voltage) Reset()         { *m = Voltage{} }
func (m *Voltage) String() string { return proto.CompactTextString(m) }
func (*Voltage) ProtoMessage()    {}
func (*Voltage) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{1}
}

func (m *Voltage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Voltage.Unmarshal(m, b)
}
func (m *Voltage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Voltage.Marshal(b, m, deterministic)
}
func (m *Voltage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Voltage.Merge(m, src)
}
func (m *Voltage) XXX_Size() int {
	return xxx_messageInfo_Voltage.Size(m)
}
func (m *Voltage) XXX_DiscardUnknown() {
	xxx_messageInfo_Voltage.DiscardUnknown(m)
}

var xxx_messageInfo_Voltage proto.InternalMessageInfo

type isVoltage_Value interface {
	isVoltage_Value()
}

type Voltage_Voltage struct {
	Voltage float64 `protobuf:"fixed64,1,opt,name=voltage,proto3,oneof"`
}

type Voltage_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*Voltage_Voltage) isVoltage_Value() {}

func (*Voltage_WkErrorName) isVoltage_Value() {}

func (m *Voltage) GetValue() isVoltage_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Voltage) GetVoltage() float64 {
	if x, ok := m.GetValue().(*Voltage_Voltage); ok {
		return x.Voltage
	}
	return 0
}

func (m *Voltage) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*Voltage_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Voltage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Voltage_Voltage)(nil),
		(*Voltage_WkErrorName)(nil),
	}
}

type Current struct {
	// Types that are valid to be assigned to Value:
	//	*Current_Current
	//	*Current_WkErrorName
	Value                isCurrent_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Current) Reset()         { *m = Current{} }
func (m *Current) String() string { return proto.CompactTextString(m) }
func (*Current) ProtoMessage()    {}
func (*Current) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{2}
}

func (m *Current) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Current.Unmarshal(m, b)
}
func (m *Current) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Current.Marshal(b, m, deterministic)
}
func (m *Current) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Current.Merge(m, src)
}
func (m *Current) XXX_Size() int {
	return xxx_messageInfo_Current.Size(m)
}
func (m *Current) XXX_DiscardUnknown() {
	xxx_messageInfo_Current.DiscardUnknown(m)
}

var xxx_messageInfo_Current proto.InternalMessageInfo

type isCurrent_Value interface {
	isCurrent_Value()
}

type Current_Current struct {
	Current float64 `protobuf:"fixed64,1,opt,name=current,proto3,oneof"`
}

type Current_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*Current_Current) isCurrent_Value() {}

func (*Current_WkErrorName) isCurrent_Value() {}

func (m *Current) GetValue() isCurrent_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Current) GetCurrent() float64 {
	if x, ok := m.GetValue().(*Current_Current); ok {
		return x.Current
	}
	return 0
}

func (m *Current) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*Current_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Current) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Current_Current)(nil),
		(*Current_WkErrorName)(nil),
	}
}

// a EV battery package could include multiple battery cells and probes
type EvBatteryPackage struct {
	PackageId            string                `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	Current              *Current              `protobuf:"bytes,5,opt,name=current,proto3" json:"current,omitempty"`
	Voltage              *Voltage              `protobuf:"bytes,6,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Temperature          *Temperature          `protobuf:"bytes,7,opt,name=temperature,proto3" json:"temperature,omitempty"`
	EvBatteryCell        []*EvBatteryCell      `protobuf:"bytes,8,rep,name=ev_battery_cell,json=evBatteryCell,proto3" json:"ev_battery_cell,omitempty"`    // Deprecated: Do not use.
	EvBatteryProbe       []*EvBatteryProbe     `protobuf:"bytes,9,rep,name=ev_battery_probe,json=evBatteryProbe,proto3" json:"ev_battery_probe,omitempty"` // Deprecated: Do not use.
	CellCount            int64                 `protobuf:"varint,10,opt,name=cell_count,json=cellCount,proto3" json:"cell_count,omitempty"`
	ProbeCount           int64                 `protobuf:"varint,11,opt,name=probe_count,json=probeCount,proto3" json:"probe_count,omitempty"`
	EvBatteryCellInfo    []*EvBatteryCellInfo  `protobuf:"bytes,12,rep,name=ev_battery_cell_info,json=evBatteryCellInfo,proto3" json:"ev_battery_cell_info,omitempty"`
	EvBatteryProbeInfo   []*EvBatteryProbeInfo `protobuf:"bytes,13,rep,name=ev_battery_probe_info,json=evBatteryProbeInfo,proto3" json:"ev_battery_probe_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EvBatteryPackage) Reset()         { *m = EvBatteryPackage{} }
func (m *EvBatteryPackage) String() string { return proto.CompactTextString(m) }
func (*EvBatteryPackage) ProtoMessage()    {}
func (*EvBatteryPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{3}
}

func (m *EvBatteryPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryPackage.Unmarshal(m, b)
}
func (m *EvBatteryPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryPackage.Marshal(b, m, deterministic)
}
func (m *EvBatteryPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryPackage.Merge(m, src)
}
func (m *EvBatteryPackage) XXX_Size() int {
	return xxx_messageInfo_EvBatteryPackage.Size(m)
}
func (m *EvBatteryPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryPackage.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryPackage proto.InternalMessageInfo

func (m *EvBatteryPackage) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *EvBatteryPackage) GetCurrent() *Current {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *EvBatteryPackage) GetVoltage() *Voltage {
	if m != nil {
		return m.Voltage
	}
	return nil
}

func (m *EvBatteryPackage) GetTemperature() *Temperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryPackage) GetEvBatteryCell() []*EvBatteryCell {
	if m != nil {
		return m.EvBatteryCell
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryPackage) GetEvBatteryProbe() []*EvBatteryProbe {
	if m != nil {
		return m.EvBatteryProbe
	}
	return nil
}

func (m *EvBatteryPackage) GetCellCount() int64 {
	if m != nil {
		return m.CellCount
	}
	return 0
}

func (m *EvBatteryPackage) GetProbeCount() int64 {
	if m != nil {
		return m.ProbeCount
	}
	return 0
}

func (m *EvBatteryPackage) GetEvBatteryCellInfo() []*EvBatteryCellInfo {
	if m != nil {
		return m.EvBatteryCellInfo
	}
	return nil
}

func (m *EvBatteryPackage) GetEvBatteryProbeInfo() []*EvBatteryProbeInfo {
	if m != nil {
		return m.EvBatteryProbeInfo
	}
	return nil
}

type EvBatteryPackageInfo struct {
	// Types that are valid to be assigned to Value:
	//	*EvBatteryPackageInfo_EvBatteryPackage
	//	*EvBatteryPackageInfo_WkErrorName
	Value                isEvBatteryPackageInfo_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *EvBatteryPackageInfo) Reset()         { *m = EvBatteryPackageInfo{} }
func (m *EvBatteryPackageInfo) String() string { return proto.CompactTextString(m) }
func (*EvBatteryPackageInfo) ProtoMessage()    {}
func (*EvBatteryPackageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{4}
}

func (m *EvBatteryPackageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryPackageInfo.Unmarshal(m, b)
}
func (m *EvBatteryPackageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryPackageInfo.Marshal(b, m, deterministic)
}
func (m *EvBatteryPackageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryPackageInfo.Merge(m, src)
}
func (m *EvBatteryPackageInfo) XXX_Size() int {
	return xxx_messageInfo_EvBatteryPackageInfo.Size(m)
}
func (m *EvBatteryPackageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryPackageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryPackageInfo proto.InternalMessageInfo

type isEvBatteryPackageInfo_Value interface {
	isEvBatteryPackageInfo_Value()
}

type EvBatteryPackageInfo_EvBatteryPackage struct {
	EvBatteryPackage *EvBatteryPackage `protobuf:"bytes,1,opt,name=ev_battery_package,json=evBatteryPackage,proto3,oneof"`
}

type EvBatteryPackageInfo_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*EvBatteryPackageInfo_EvBatteryPackage) isEvBatteryPackageInfo_Value() {}

func (*EvBatteryPackageInfo_WkErrorName) isEvBatteryPackageInfo_Value() {}

func (m *EvBatteryPackageInfo) GetValue() isEvBatteryPackageInfo_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *EvBatteryPackageInfo) GetEvBatteryPackage() *EvBatteryPackage {
	if x, ok := m.GetValue().(*EvBatteryPackageInfo_EvBatteryPackage); ok {
		return x.EvBatteryPackage
	}
	return nil
}

func (m *EvBatteryPackageInfo) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*EvBatteryPackageInfo_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EvBatteryPackageInfo) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EvBatteryPackageInfo_EvBatteryPackage)(nil),
		(*EvBatteryPackageInfo_WkErrorName)(nil),
	}
}

type EvBatteryCell struct {
	CellId               string       `protobuf:"bytes,1,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
	PackageId            string       `protobuf:"bytes,2,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	Voltage              *Voltage     `protobuf:"bytes,5,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Temperature          *Temperature `protobuf:"bytes,6,opt,name=temperature,proto3" json:"temperature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EvBatteryCell) Reset()         { *m = EvBatteryCell{} }
func (m *EvBatteryCell) String() string { return proto.CompactTextString(m) }
func (*EvBatteryCell) ProtoMessage()    {}
func (*EvBatteryCell) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{5}
}

func (m *EvBatteryCell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryCell.Unmarshal(m, b)
}
func (m *EvBatteryCell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryCell.Marshal(b, m, deterministic)
}
func (m *EvBatteryCell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryCell.Merge(m, src)
}
func (m *EvBatteryCell) XXX_Size() int {
	return xxx_messageInfo_EvBatteryCell.Size(m)
}
func (m *EvBatteryCell) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryCell.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryCell proto.InternalMessageInfo

func (m *EvBatteryCell) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

func (m *EvBatteryCell) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *EvBatteryCell) GetVoltage() *Voltage {
	if m != nil {
		return m.Voltage
	}
	return nil
}

func (m *EvBatteryCell) GetTemperature() *Temperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

type EvBatteryCellInfo struct {
	// Types that are valid to be assigned to Value:
	//	*EvBatteryCellInfo_EvBatteryCell
	//	*EvBatteryCellInfo_WkErrorName
	Value                isEvBatteryCellInfo_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *EvBatteryCellInfo) Reset()         { *m = EvBatteryCellInfo{} }
func (m *EvBatteryCellInfo) String() string { return proto.CompactTextString(m) }
func (*EvBatteryCellInfo) ProtoMessage()    {}
func (*EvBatteryCellInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{6}
}

func (m *EvBatteryCellInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryCellInfo.Unmarshal(m, b)
}
func (m *EvBatteryCellInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryCellInfo.Marshal(b, m, deterministic)
}
func (m *EvBatteryCellInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryCellInfo.Merge(m, src)
}
func (m *EvBatteryCellInfo) XXX_Size() int {
	return xxx_messageInfo_EvBatteryCellInfo.Size(m)
}
func (m *EvBatteryCellInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryCellInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryCellInfo proto.InternalMessageInfo

type isEvBatteryCellInfo_Value interface {
	isEvBatteryCellInfo_Value()
}

type EvBatteryCellInfo_EvBatteryCell struct {
	EvBatteryCell *EvBatteryCell `protobuf:"bytes,1,opt,name=ev_battery_cell,json=evBatteryCell,proto3,oneof"`
}

type EvBatteryCellInfo_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*EvBatteryCellInfo_EvBatteryCell) isEvBatteryCellInfo_Value() {}

func (*EvBatteryCellInfo_WkErrorName) isEvBatteryCellInfo_Value() {}

func (m *EvBatteryCellInfo) GetValue() isEvBatteryCellInfo_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *EvBatteryCellInfo) GetEvBatteryCell() *EvBatteryCell {
	if x, ok := m.GetValue().(*EvBatteryCellInfo_EvBatteryCell); ok {
		return x.EvBatteryCell
	}
	return nil
}

func (m *EvBatteryCellInfo) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*EvBatteryCellInfo_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EvBatteryCellInfo) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EvBatteryCellInfo_EvBatteryCell)(nil),
		(*EvBatteryCellInfo_WkErrorName)(nil),
	}
}

type EvBatteryProbe struct {
	ProbeId              string       `protobuf:"bytes,1,opt,name=probe_id,json=probeId,proto3" json:"probe_id,omitempty"`
	CellId               string       `protobuf:"bytes,2,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
	PackageId            string       `protobuf:"bytes,3,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	Temperature          *Temperature `protobuf:"bytes,5,opt,name=temperature,proto3" json:"temperature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EvBatteryProbe) Reset()         { *m = EvBatteryProbe{} }
func (m *EvBatteryProbe) String() string { return proto.CompactTextString(m) }
func (*EvBatteryProbe) ProtoMessage()    {}
func (*EvBatteryProbe) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{7}
}

func (m *EvBatteryProbe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryProbe.Unmarshal(m, b)
}
func (m *EvBatteryProbe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryProbe.Marshal(b, m, deterministic)
}
func (m *EvBatteryProbe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryProbe.Merge(m, src)
}
func (m *EvBatteryProbe) XXX_Size() int {
	return xxx_messageInfo_EvBatteryProbe.Size(m)
}
func (m *EvBatteryProbe) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryProbe.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryProbe proto.InternalMessageInfo

func (m *EvBatteryProbe) GetProbeId() string {
	if m != nil {
		return m.ProbeId
	}
	return ""
}

func (m *EvBatteryProbe) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

func (m *EvBatteryProbe) GetPackageId() string {
	if m != nil {
		return m.PackageId
	}
	return ""
}

func (m *EvBatteryProbe) GetTemperature() *Temperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

type EvBatteryProbeInfo struct {
	// Types that are valid to be assigned to Value:
	//	*EvBatteryProbeInfo_EvBatteryProbe
	//	*EvBatteryProbeInfo_WkErrorName
	Value                isEvBatteryProbeInfo_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *EvBatteryProbeInfo) Reset()         { *m = EvBatteryProbeInfo{} }
func (m *EvBatteryProbeInfo) String() string { return proto.CompactTextString(m) }
func (*EvBatteryProbeInfo) ProtoMessage()    {}
func (*EvBatteryProbeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{8}
}

func (m *EvBatteryProbeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryProbeInfo.Unmarshal(m, b)
}
func (m *EvBatteryProbeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryProbeInfo.Marshal(b, m, deterministic)
}
func (m *EvBatteryProbeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryProbeInfo.Merge(m, src)
}
func (m *EvBatteryProbeInfo) XXX_Size() int {
	return xxx_messageInfo_EvBatteryProbeInfo.Size(m)
}
func (m *EvBatteryProbeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryProbeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryProbeInfo proto.InternalMessageInfo

type isEvBatteryProbeInfo_Value interface {
	isEvBatteryProbeInfo_Value()
}

type EvBatteryProbeInfo_EvBatteryProbe struct {
	EvBatteryProbe *EvBatteryProbe `protobuf:"bytes,1,opt,name=ev_battery_probe,json=evBatteryProbe,proto3,oneof"`
}

type EvBatteryProbeInfo_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*EvBatteryProbeInfo_EvBatteryProbe) isEvBatteryProbeInfo_Value() {}

func (*EvBatteryProbeInfo_WkErrorName) isEvBatteryProbeInfo_Value() {}

func (m *EvBatteryProbeInfo) GetValue() isEvBatteryProbeInfo_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *EvBatteryProbeInfo) GetEvBatteryProbe() *EvBatteryProbe {
	if x, ok := m.GetValue().(*EvBatteryProbeInfo_EvBatteryProbe); ok {
		return x.EvBatteryProbe
	}
	return nil
}

func (m *EvBatteryProbeInfo) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*EvBatteryProbeInfo_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EvBatteryProbeInfo) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EvBatteryProbeInfo_EvBatteryProbe)(nil),
		(*EvBatteryProbeInfo_WkErrorName)(nil),
	}
}

type EvBatteryPackageStatus struct {
	PackageMaxVoltage         *EvBatteryPackage       `protobuf:"bytes,2,opt,name=package_max_voltage,json=packageMaxVoltage,proto3" json:"package_max_voltage,omitempty"`             // Deprecated: Do not use.
	PackageMinVoltage         *EvBatteryPackage       `protobuf:"bytes,3,opt,name=package_min_voltage,json=packageMinVoltage,proto3" json:"package_min_voltage,omitempty"`             // Deprecated: Do not use.
	PackageMaxTemperature     *EvBatteryPackage       `protobuf:"bytes,4,opt,name=package_max_temperature,json=packageMaxTemperature,proto3" json:"package_max_temperature,omitempty"` // Deprecated: Do not use.
	PackageMinTemperature     *EvBatteryPackage       `protobuf:"bytes,5,opt,name=package_min_temperature,json=packageMinTemperature,proto3" json:"package_min_temperature,omitempty"` // Deprecated: Do not use.
	PackageMaxVoltageInfo     *EvBatteryPackageInfo   `protobuf:"bytes,8,opt,name=package_max_voltage_info,json=packageMaxVoltageInfo,proto3" json:"package_max_voltage_info,omitempty"`
	PackageMinVoltageInfo     *EvBatteryPackageInfo   `protobuf:"bytes,9,opt,name=package_min_voltage_info,json=packageMinVoltageInfo,proto3" json:"package_min_voltage_info,omitempty"`
	PackageMaxTemperatureInfo *EvBatteryPackageInfo   `protobuf:"bytes,10,opt,name=package_max_temperature_info,json=packageMaxTemperatureInfo,proto3" json:"package_max_temperature_info,omitempty"`
	PackageMinTemperatureInfo *EvBatteryPackageInfo   `protobuf:"bytes,11,opt,name=package_min_temperature_info,json=packageMinTemperatureInfo,proto3" json:"package_min_temperature_info,omitempty"`
	PackageCount              int64                   `protobuf:"varint,6,opt,name=package_count,json=packageCount,proto3" json:"package_count,omitempty"`
	EvBatteryPackage          []*EvBatteryPackage     `protobuf:"bytes,7,rep,name=ev_battery_package,json=evBatteryPackage,proto3" json:"ev_battery_package,omitempty"` // Deprecated: Do not use.
	EvBatteryPackageInfo      []*EvBatteryPackageInfo `protobuf:"bytes,12,rep,name=ev_battery_package_info,json=evBatteryPackageInfo,proto3" json:"ev_battery_package_info,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                `json:"-"`
	XXX_unrecognized          []byte                  `json:"-"`
	XXX_sizecache             int32                   `json:"-"`
}

func (m *EvBatteryPackageStatus) Reset()         { *m = EvBatteryPackageStatus{} }
func (m *EvBatteryPackageStatus) String() string { return proto.CompactTextString(m) }
func (*EvBatteryPackageStatus) ProtoMessage()    {}
func (*EvBatteryPackageStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{9}
}

func (m *EvBatteryPackageStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryPackageStatus.Unmarshal(m, b)
}
func (m *EvBatteryPackageStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryPackageStatus.Marshal(b, m, deterministic)
}
func (m *EvBatteryPackageStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryPackageStatus.Merge(m, src)
}
func (m *EvBatteryPackageStatus) XXX_Size() int {
	return xxx_messageInfo_EvBatteryPackageStatus.Size(m)
}
func (m *EvBatteryPackageStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryPackageStatus.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryPackageStatus proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *EvBatteryPackageStatus) GetPackageMaxVoltage() *EvBatteryPackage {
	if m != nil {
		return m.PackageMaxVoltage
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryPackageStatus) GetPackageMinVoltage() *EvBatteryPackage {
	if m != nil {
		return m.PackageMinVoltage
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryPackageStatus) GetPackageMaxTemperature() *EvBatteryPackage {
	if m != nil {
		return m.PackageMaxTemperature
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryPackageStatus) GetPackageMinTemperature() *EvBatteryPackage {
	if m != nil {
		return m.PackageMinTemperature
	}
	return nil
}

func (m *EvBatteryPackageStatus) GetPackageMaxVoltageInfo() *EvBatteryPackageInfo {
	if m != nil {
		return m.PackageMaxVoltageInfo
	}
	return nil
}

func (m *EvBatteryPackageStatus) GetPackageMinVoltageInfo() *EvBatteryPackageInfo {
	if m != nil {
		return m.PackageMinVoltageInfo
	}
	return nil
}

func (m *EvBatteryPackageStatus) GetPackageMaxTemperatureInfo() *EvBatteryPackageInfo {
	if m != nil {
		return m.PackageMaxTemperatureInfo
	}
	return nil
}

func (m *EvBatteryPackageStatus) GetPackageMinTemperatureInfo() *EvBatteryPackageInfo {
	if m != nil {
		return m.PackageMinTemperatureInfo
	}
	return nil
}

func (m *EvBatteryPackageStatus) GetPackageCount() int64 {
	if m != nil {
		return m.PackageCount
	}
	return 0
}

// Deprecated: Do not use.
func (m *EvBatteryPackageStatus) GetEvBatteryPackage() []*EvBatteryPackage {
	if m != nil {
		return m.EvBatteryPackage
	}
	return nil
}

func (m *EvBatteryPackageStatus) GetEvBatteryPackageInfo() []*EvBatteryPackageInfo {
	if m != nil {
		return m.EvBatteryPackageInfo
	}
	return nil
}

type EvBatteryCellStatus struct {
	CellMaxVoltage         *EvBatteryCell     `protobuf:"bytes,3,opt,name=cell_max_voltage,json=cellMaxVoltage,proto3" json:"cell_max_voltage,omitempty"`             // Deprecated: Do not use.
	CellMinVoltage         *EvBatteryCell     `protobuf:"bytes,4,opt,name=cell_min_voltage,json=cellMinVoltage,proto3" json:"cell_min_voltage,omitempty"`             // Deprecated: Do not use.
	CellMaxTemperature     *EvBatteryCell     `protobuf:"bytes,5,opt,name=cell_max_temperature,json=cellMaxTemperature,proto3" json:"cell_max_temperature,omitempty"` // Deprecated: Do not use.
	CellMinTemperature     *EvBatteryCell     `protobuf:"bytes,6,opt,name=cell_min_temperature,json=cellMinTemperature,proto3" json:"cell_min_temperature,omitempty"` // Deprecated: Do not use.
	CellMaxVoltageInfo     *EvBatteryCellInfo `protobuf:"bytes,7,opt,name=cell_max_voltage_info,json=cellMaxVoltageInfo,proto3" json:"cell_max_voltage_info,omitempty"`
	CellMinVoltageInfo     *EvBatteryCellInfo `protobuf:"bytes,8,opt,name=cell_min_voltage_info,json=cellMinVoltageInfo,proto3" json:"cell_min_voltage_info,omitempty"`
	CellMaxTemperatureInfo *EvBatteryCellInfo `protobuf:"bytes,9,opt,name=cell_max_temperature_info,json=cellMaxTemperatureInfo,proto3" json:"cell_max_temperature_info,omitempty"`
	CellMinTemperatureInfo *EvBatteryCellInfo `protobuf:"bytes,10,opt,name=cell_min_temperature_info,json=cellMinTemperatureInfo,proto3" json:"cell_min_temperature_info,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}           `json:"-"`
	XXX_unrecognized       []byte             `json:"-"`
	XXX_sizecache          int32              `json:"-"`
}

func (m *EvBatteryCellStatus) Reset()         { *m = EvBatteryCellStatus{} }
func (m *EvBatteryCellStatus) String() string { return proto.CompactTextString(m) }
func (*EvBatteryCellStatus) ProtoMessage()    {}
func (*EvBatteryCellStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{10}
}

func (m *EvBatteryCellStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryCellStatus.Unmarshal(m, b)
}
func (m *EvBatteryCellStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryCellStatus.Marshal(b, m, deterministic)
}
func (m *EvBatteryCellStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryCellStatus.Merge(m, src)
}
func (m *EvBatteryCellStatus) XXX_Size() int {
	return xxx_messageInfo_EvBatteryCellStatus.Size(m)
}
func (m *EvBatteryCellStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryCellStatus.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryCellStatus proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *EvBatteryCellStatus) GetCellMaxVoltage() *EvBatteryCell {
	if m != nil {
		return m.CellMaxVoltage
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryCellStatus) GetCellMinVoltage() *EvBatteryCell {
	if m != nil {
		return m.CellMinVoltage
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryCellStatus) GetCellMaxTemperature() *EvBatteryCell {
	if m != nil {
		return m.CellMaxTemperature
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryCellStatus) GetCellMinTemperature() *EvBatteryCell {
	if m != nil {
		return m.CellMinTemperature
	}
	return nil
}

func (m *EvBatteryCellStatus) GetCellMaxVoltageInfo() *EvBatteryCellInfo {
	if m != nil {
		return m.CellMaxVoltageInfo
	}
	return nil
}

func (m *EvBatteryCellStatus) GetCellMinVoltageInfo() *EvBatteryCellInfo {
	if m != nil {
		return m.CellMinVoltageInfo
	}
	return nil
}

func (m *EvBatteryCellStatus) GetCellMaxTemperatureInfo() *EvBatteryCellInfo {
	if m != nil {
		return m.CellMaxTemperatureInfo
	}
	return nil
}

func (m *EvBatteryCellStatus) GetCellMinTemperatureInfo() *EvBatteryCellInfo {
	if m != nil {
		return m.CellMinTemperatureInfo
	}
	return nil
}

type EvBatteryProbeStatus struct {
	ProbeMaxTemperature     *EvBatteryProbe     `protobuf:"bytes,3,opt,name=probe_max_temperature,json=probeMaxTemperature,proto3" json:"probe_max_temperature,omitempty"` // Deprecated: Do not use.
	ProbeMinTemperature     *EvBatteryProbe     `protobuf:"bytes,4,opt,name=probe_min_temperature,json=probeMinTemperature,proto3" json:"probe_min_temperature,omitempty"` // Deprecated: Do not use.
	ProbeMaxTemperatureInfo *EvBatteryProbeInfo `protobuf:"bytes,7,opt,name=probe_max_temperature_info,json=probeMaxTemperatureInfo,proto3" json:"probe_max_temperature_info,omitempty"`
	ProbeMinTemperatureInfo *EvBatteryProbeInfo `protobuf:"bytes,8,opt,name=probe_min_temperature_info,json=probeMinTemperatureInfo,proto3" json:"probe_min_temperature_info,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}            `json:"-"`
	XXX_unrecognized        []byte              `json:"-"`
	XXX_sizecache           int32               `json:"-"`
}

func (m *EvBatteryProbeStatus) Reset()         { *m = EvBatteryProbeStatus{} }
func (m *EvBatteryProbeStatus) String() string { return proto.CompactTextString(m) }
func (*EvBatteryProbeStatus) ProtoMessage()    {}
func (*EvBatteryProbeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{11}
}

func (m *EvBatteryProbeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvBatteryProbeStatus.Unmarshal(m, b)
}
func (m *EvBatteryProbeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvBatteryProbeStatus.Marshal(b, m, deterministic)
}
func (m *EvBatteryProbeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvBatteryProbeStatus.Merge(m, src)
}
func (m *EvBatteryProbeStatus) XXX_Size() int {
	return xxx_messageInfo_EvBatteryProbeStatus.Size(m)
}
func (m *EvBatteryProbeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_EvBatteryProbeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_EvBatteryProbeStatus proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *EvBatteryProbeStatus) GetProbeMaxTemperature() *EvBatteryProbe {
	if m != nil {
		return m.ProbeMaxTemperature
	}
	return nil
}

// Deprecated: Do not use.
func (m *EvBatteryProbeStatus) GetProbeMinTemperature() *EvBatteryProbe {
	if m != nil {
		return m.ProbeMinTemperature
	}
	return nil
}

func (m *EvBatteryProbeStatus) GetProbeMaxTemperatureInfo() *EvBatteryProbeInfo {
	if m != nil {
		return m.ProbeMaxTemperatureInfo
	}
	return nil
}

func (m *EvBatteryProbeStatus) GetProbeMinTemperatureInfo() *EvBatteryProbeInfo {
	if m != nil {
		return m.ProbeMinTemperatureInfo
	}
	return nil
}

type ElectricMachineState struct {
	ElectricMachineCount int64              `protobuf:"varint,1,opt,name=electric_machine_count,json=electricMachineCount,proto3" json:"electric_machine_count,omitempty"`
	EletricMachine       []*ElectricMachine `protobuf:"bytes,2,rep,name=eletric_machine,json=eletricMachine,proto3" json:"eletric_machine,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ElectricMachineState) Reset()         { *m = ElectricMachineState{} }
func (m *ElectricMachineState) String() string { return proto.CompactTextString(m) }
func (*ElectricMachineState) ProtoMessage()    {}
func (*ElectricMachineState) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{12}
}

func (m *ElectricMachineState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachineState.Unmarshal(m, b)
}
func (m *ElectricMachineState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachineState.Marshal(b, m, deterministic)
}
func (m *ElectricMachineState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachineState.Merge(m, src)
}
func (m *ElectricMachineState) XXX_Size() int {
	return xxx_messageInfo_ElectricMachineState.Size(m)
}
func (m *ElectricMachineState) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachineState.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachineState proto.InternalMessageInfo

func (m *ElectricMachineState) GetElectricMachineCount() int64 {
	if m != nil {
		return m.ElectricMachineCount
	}
	return 0
}

func (m *ElectricMachineState) GetEletricMachine() []*ElectricMachine {
	if m != nil {
		return m.EletricMachine
	}
	return nil
}

type ElectricMachine struct {
	ElectricMachineControllerTemp *ElectricMachineControllerTemp `protobuf:"bytes,1,opt,name=electric_machine_controller_temp,json=electricMachineControllerTemp,proto3" json:"electric_machine_controller_temp,omitempty"`
	ElectricMachineCurrent        *ElectricMachineCurrent        `protobuf:"bytes,2,opt,name=electric_machine_current,json=electricMachineCurrent,proto3" json:"electric_machine_current,omitempty"`
	ElectricMachineVoltage        *ElectricMachineVoltage        `protobuf:"bytes,3,opt,name=electric_machine_voltage,json=electricMachineVoltage,proto3" json:"electric_machine_voltage,omitempty"`
	ElectricMachineSpeed          *ElectricMachineSpeed          `protobuf:"bytes,4,opt,name=electric_machine_speed,json=electricMachineSpeed,proto3" json:"electric_machine_speed,omitempty"`
	ElectricMachineStatus         *ElectricMachineStatus         `protobuf:"bytes,5,opt,name=electric_machine_status,json=electricMachineStatus,proto3" json:"electric_machine_status,omitempty"`
	ElectricMachineTemp           *ElectricMachineTemp           `protobuf:"bytes,6,opt,name=electric_machine_temp,json=electricMachineTemp,proto3" json:"electric_machine_temp,omitempty"`
	ElectricMachineTorque         *ElectricMachineTorque         `protobuf:"bytes,7,opt,name=electric_machine_torque,json=electricMachineTorque,proto3" json:"electric_machine_torque,omitempty"`
	ElectricMachineId             string                         `protobuf:"bytes,8,opt,name=electric_machine_id,json=electricMachineId,proto3" json:"electric_machine_id,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                       `json:"-"`
	XXX_unrecognized              []byte                         `json:"-"`
	XXX_sizecache                 int32                          `json:"-"`
}

func (m *ElectricMachine) Reset()         { *m = ElectricMachine{} }
func (m *ElectricMachine) String() string { return proto.CompactTextString(m) }
func (*ElectricMachine) ProtoMessage()    {}
func (*ElectricMachine) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{13}
}

func (m *ElectricMachine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachine.Unmarshal(m, b)
}
func (m *ElectricMachine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachine.Marshal(b, m, deterministic)
}
func (m *ElectricMachine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachine.Merge(m, src)
}
func (m *ElectricMachine) XXX_Size() int {
	return xxx_messageInfo_ElectricMachine.Size(m)
}
func (m *ElectricMachine) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachine.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachine proto.InternalMessageInfo

func (m *ElectricMachine) GetElectricMachineControllerTemp() *ElectricMachineControllerTemp {
	if m != nil {
		return m.ElectricMachineControllerTemp
	}
	return nil
}

func (m *ElectricMachine) GetElectricMachineCurrent() *ElectricMachineCurrent {
	if m != nil {
		return m.ElectricMachineCurrent
	}
	return nil
}

func (m *ElectricMachine) GetElectricMachineVoltage() *ElectricMachineVoltage {
	if m != nil {
		return m.ElectricMachineVoltage
	}
	return nil
}

func (m *ElectricMachine) GetElectricMachineSpeed() *ElectricMachineSpeed {
	if m != nil {
		return m.ElectricMachineSpeed
	}
	return nil
}

func (m *ElectricMachine) GetElectricMachineStatus() *ElectricMachineStatus {
	if m != nil {
		return m.ElectricMachineStatus
	}
	return nil
}

func (m *ElectricMachine) GetElectricMachineTemp() *ElectricMachineTemp {
	if m != nil {
		return m.ElectricMachineTemp
	}
	return nil
}

func (m *ElectricMachine) GetElectricMachineTorque() *ElectricMachineTorque {
	if m != nil {
		return m.ElectricMachineTorque
	}
	return nil
}

func (m *ElectricMachine) GetElectricMachineId() string {
	if m != nil {
		return m.ElectricMachineId
	}
	return ""
}

type ElectricMachineControllerTemp struct {
	// Types that are valid to be assigned to Value:
	//	*ElectricMachineControllerTemp_ElectricMachineControllerTemp
	//	*ElectricMachineControllerTemp_WkErrorName
	Value                isElectricMachineControllerTemp_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ElectricMachineControllerTemp) Reset()         { *m = ElectricMachineControllerTemp{} }
func (m *ElectricMachineControllerTemp) String() string { return proto.CompactTextString(m) }
func (*ElectricMachineControllerTemp) ProtoMessage()    {}
func (*ElectricMachineControllerTemp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{14}
}

func (m *ElectricMachineControllerTemp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachineControllerTemp.Unmarshal(m, b)
}
func (m *ElectricMachineControllerTemp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachineControllerTemp.Marshal(b, m, deterministic)
}
func (m *ElectricMachineControllerTemp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachineControllerTemp.Merge(m, src)
}
func (m *ElectricMachineControllerTemp) XXX_Size() int {
	return xxx_messageInfo_ElectricMachineControllerTemp.Size(m)
}
func (m *ElectricMachineControllerTemp) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachineControllerTemp.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachineControllerTemp proto.InternalMessageInfo

type isElectricMachineControllerTemp_Value interface {
	isElectricMachineControllerTemp_Value()
}

type ElectricMachineControllerTemp_ElectricMachineControllerTemp struct {
	ElectricMachineControllerTemp float64 `protobuf:"fixed64,1,opt,name=electric_machine_controller_temp,json=electricMachineControllerTemp,proto3,oneof"`
}

type ElectricMachineControllerTemp_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*ElectricMachineControllerTemp_ElectricMachineControllerTemp) isElectricMachineControllerTemp_Value() {
}

func (*ElectricMachineControllerTemp_WkErrorName) isElectricMachineControllerTemp_Value() {}

func (m *ElectricMachineControllerTemp) GetValue() isElectricMachineControllerTemp_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ElectricMachineControllerTemp) GetElectricMachineControllerTemp() float64 {
	if x, ok := m.GetValue().(*ElectricMachineControllerTemp_ElectricMachineControllerTemp); ok {
		return x.ElectricMachineControllerTemp
	}
	return 0
}

func (m *ElectricMachineControllerTemp) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*ElectricMachineControllerTemp_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ElectricMachineControllerTemp) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ElectricMachineControllerTemp_ElectricMachineControllerTemp)(nil),
		(*ElectricMachineControllerTemp_WkErrorName)(nil),
	}
}

type ElectricMachineCurrent struct {
	// Types that are valid to be assigned to Value:
	//	*ElectricMachineCurrent_ElectricMachineCurrent
	//	*ElectricMachineCurrent_WkErrorName
	Value                isElectricMachineCurrent_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ElectricMachineCurrent) Reset()         { *m = ElectricMachineCurrent{} }
func (m *ElectricMachineCurrent) String() string { return proto.CompactTextString(m) }
func (*ElectricMachineCurrent) ProtoMessage()    {}
func (*ElectricMachineCurrent) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{15}
}

func (m *ElectricMachineCurrent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachineCurrent.Unmarshal(m, b)
}
func (m *ElectricMachineCurrent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachineCurrent.Marshal(b, m, deterministic)
}
func (m *ElectricMachineCurrent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachineCurrent.Merge(m, src)
}
func (m *ElectricMachineCurrent) XXX_Size() int {
	return xxx_messageInfo_ElectricMachineCurrent.Size(m)
}
func (m *ElectricMachineCurrent) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachineCurrent.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachineCurrent proto.InternalMessageInfo

type isElectricMachineCurrent_Value interface {
	isElectricMachineCurrent_Value()
}

type ElectricMachineCurrent_ElectricMachineCurrent struct {
	ElectricMachineCurrent float64 `protobuf:"fixed64,1,opt,name=electric_machine_current,json=electricMachineCurrent,proto3,oneof"`
}

type ElectricMachineCurrent_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*ElectricMachineCurrent_ElectricMachineCurrent) isElectricMachineCurrent_Value() {}

func (*ElectricMachineCurrent_WkErrorName) isElectricMachineCurrent_Value() {}

func (m *ElectricMachineCurrent) GetValue() isElectricMachineCurrent_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ElectricMachineCurrent) GetElectricMachineCurrent() float64 {
	if x, ok := m.GetValue().(*ElectricMachineCurrent_ElectricMachineCurrent); ok {
		return x.ElectricMachineCurrent
	}
	return 0
}

func (m *ElectricMachineCurrent) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*ElectricMachineCurrent_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ElectricMachineCurrent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ElectricMachineCurrent_ElectricMachineCurrent)(nil),
		(*ElectricMachineCurrent_WkErrorName)(nil),
	}
}

type ElectricMachineVoltage struct {
	// Types that are valid to be assigned to Value:
	//	*ElectricMachineVoltage_ElectricMachineVoltage
	//	*ElectricMachineVoltage_WkErrorName
	Value                isElectricMachineVoltage_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ElectricMachineVoltage) Reset()         { *m = ElectricMachineVoltage{} }
func (m *ElectricMachineVoltage) String() string { return proto.CompactTextString(m) }
func (*ElectricMachineVoltage) ProtoMessage()    {}
func (*ElectricMachineVoltage) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{16}
}

func (m *ElectricMachineVoltage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachineVoltage.Unmarshal(m, b)
}
func (m *ElectricMachineVoltage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachineVoltage.Marshal(b, m, deterministic)
}
func (m *ElectricMachineVoltage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachineVoltage.Merge(m, src)
}
func (m *ElectricMachineVoltage) XXX_Size() int {
	return xxx_messageInfo_ElectricMachineVoltage.Size(m)
}
func (m *ElectricMachineVoltage) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachineVoltage.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachineVoltage proto.InternalMessageInfo

type isElectricMachineVoltage_Value interface {
	isElectricMachineVoltage_Value()
}

type ElectricMachineVoltage_ElectricMachineVoltage struct {
	ElectricMachineVoltage float64 `protobuf:"fixed64,1,opt,name=electric_machine_voltage,json=electricMachineVoltage,proto3,oneof"`
}

type ElectricMachineVoltage_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*ElectricMachineVoltage_ElectricMachineVoltage) isElectricMachineVoltage_Value() {}

func (*ElectricMachineVoltage_WkErrorName) isElectricMachineVoltage_Value() {}

func (m *ElectricMachineVoltage) GetValue() isElectricMachineVoltage_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ElectricMachineVoltage) GetElectricMachineVoltage() float64 {
	if x, ok := m.GetValue().(*ElectricMachineVoltage_ElectricMachineVoltage); ok {
		return x.ElectricMachineVoltage
	}
	return 0
}

func (m *ElectricMachineVoltage) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*ElectricMachineVoltage_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ElectricMachineVoltage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ElectricMachineVoltage_ElectricMachineVoltage)(nil),
		(*ElectricMachineVoltage_WkErrorName)(nil),
	}
}

type ElectricMachineSpeed struct {
	// Types that are valid to be assigned to Value:
	//	*ElectricMachineSpeed_ElectricMachineSpeed
	//	*ElectricMachineSpeed_WkErrorName
	Value                isElectricMachineSpeed_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ElectricMachineSpeed) Reset()         { *m = ElectricMachineSpeed{} }
func (m *ElectricMachineSpeed) String() string { return proto.CompactTextString(m) }
func (*ElectricMachineSpeed) ProtoMessage()    {}
func (*ElectricMachineSpeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{17}
}

func (m *ElectricMachineSpeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachineSpeed.Unmarshal(m, b)
}
func (m *ElectricMachineSpeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachineSpeed.Marshal(b, m, deterministic)
}
func (m *ElectricMachineSpeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachineSpeed.Merge(m, src)
}
func (m *ElectricMachineSpeed) XXX_Size() int {
	return xxx_messageInfo_ElectricMachineSpeed.Size(m)
}
func (m *ElectricMachineSpeed) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachineSpeed.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachineSpeed proto.InternalMessageInfo

type isElectricMachineSpeed_Value interface {
	isElectricMachineSpeed_Value()
}

type ElectricMachineSpeed_ElectricMachineSpeed struct {
	ElectricMachineSpeed float64 `protobuf:"fixed64,1,opt,name=electric_machine_speed,json=electricMachineSpeed,proto3,oneof"`
}

type ElectricMachineSpeed_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*ElectricMachineSpeed_ElectricMachineSpeed) isElectricMachineSpeed_Value() {}

func (*ElectricMachineSpeed_WkErrorName) isElectricMachineSpeed_Value() {}

func (m *ElectricMachineSpeed) GetValue() isElectricMachineSpeed_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ElectricMachineSpeed) GetElectricMachineSpeed() float64 {
	if x, ok := m.GetValue().(*ElectricMachineSpeed_ElectricMachineSpeed); ok {
		return x.ElectricMachineSpeed
	}
	return 0
}

func (m *ElectricMachineSpeed) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*ElectricMachineSpeed_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ElectricMachineSpeed) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ElectricMachineSpeed_ElectricMachineSpeed)(nil),
		(*ElectricMachineSpeed_WkErrorName)(nil),
	}
}

type ElectricMachineStatus struct {
	// Types that are valid to be assigned to Value:
	//	*ElectricMachineStatus_ElectricMachineStatus
	//	*ElectricMachineStatus_WkErrorName
	Value                isElectricMachineStatus_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ElectricMachineStatus) Reset()         { *m = ElectricMachineStatus{} }
func (m *ElectricMachineStatus) String() string { return proto.CompactTextString(m) }
func (*ElectricMachineStatus) ProtoMessage()    {}
func (*ElectricMachineStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{18}
}

func (m *ElectricMachineStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachineStatus.Unmarshal(m, b)
}
func (m *ElectricMachineStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachineStatus.Marshal(b, m, deterministic)
}
func (m *ElectricMachineStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachineStatus.Merge(m, src)
}
func (m *ElectricMachineStatus) XXX_Size() int {
	return xxx_messageInfo_ElectricMachineStatus.Size(m)
}
func (m *ElectricMachineStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachineStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachineStatus proto.InternalMessageInfo

type isElectricMachineStatus_Value interface {
	isElectricMachineStatus_Value()
}

type ElectricMachineStatus_ElectricMachineStatus struct {
	ElectricMachineStatus enumerations.ElectricMachineStatus `protobuf:"varint,1,opt,name=electric_machine_status,json=electricMachineStatus,proto3,enum=autonomic.ext.telemetry.enumerations.electricMachineStatus.ElectricMachineStatus,oneof"`
}

type ElectricMachineStatus_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*ElectricMachineStatus_ElectricMachineStatus) isElectricMachineStatus_Value() {}

func (*ElectricMachineStatus_WkErrorName) isElectricMachineStatus_Value() {}

func (m *ElectricMachineStatus) GetValue() isElectricMachineStatus_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ElectricMachineStatus) GetElectricMachineStatus() enumerations.ElectricMachineStatus {
	if x, ok := m.GetValue().(*ElectricMachineStatus_ElectricMachineStatus); ok {
		return x.ElectricMachineStatus
	}
	return enumerations.ElectricMachineStatus_UNKNOWN
}

func (m *ElectricMachineStatus) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*ElectricMachineStatus_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ElectricMachineStatus) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ElectricMachineStatus_ElectricMachineStatus)(nil),
		(*ElectricMachineStatus_WkErrorName)(nil),
	}
}

type ElectricMachineTemp struct {
	// Types that are valid to be assigned to Value:
	//	*ElectricMachineTemp_ElectricMachineTemp
	//	*ElectricMachineTemp_WkErrorName
	Value                isElectricMachineTemp_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ElectricMachineTemp) Reset()         { *m = ElectricMachineTemp{} }
func (m *ElectricMachineTemp) String() string { return proto.CompactTextString(m) }
func (*ElectricMachineTemp) ProtoMessage()    {}
func (*ElectricMachineTemp) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{19}
}

func (m *ElectricMachineTemp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachineTemp.Unmarshal(m, b)
}
func (m *ElectricMachineTemp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachineTemp.Marshal(b, m, deterministic)
}
func (m *ElectricMachineTemp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachineTemp.Merge(m, src)
}
func (m *ElectricMachineTemp) XXX_Size() int {
	return xxx_messageInfo_ElectricMachineTemp.Size(m)
}
func (m *ElectricMachineTemp) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachineTemp.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachineTemp proto.InternalMessageInfo

type isElectricMachineTemp_Value interface {
	isElectricMachineTemp_Value()
}

type ElectricMachineTemp_ElectricMachineTemp struct {
	ElectricMachineTemp float64 `protobuf:"fixed64,1,opt,name=electric_machine_temp,json=electricMachineTemp,proto3,oneof"`
}

type ElectricMachineTemp_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*ElectricMachineTemp_ElectricMachineTemp) isElectricMachineTemp_Value() {}

func (*ElectricMachineTemp_WkErrorName) isElectricMachineTemp_Value() {}

func (m *ElectricMachineTemp) GetValue() isElectricMachineTemp_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ElectricMachineTemp) GetElectricMachineTemp() float64 {
	if x, ok := m.GetValue().(*ElectricMachineTemp_ElectricMachineTemp); ok {
		return x.ElectricMachineTemp
	}
	return 0
}

func (m *ElectricMachineTemp) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*ElectricMachineTemp_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ElectricMachineTemp) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ElectricMachineTemp_ElectricMachineTemp)(nil),
		(*ElectricMachineTemp_WkErrorName)(nil),
	}
}

type ElectricMachineTorque struct {
	// Types that are valid to be assigned to Value:
	//	*ElectricMachineTorque_ElectricMachineTorque
	//	*ElectricMachineTorque_WkErrorName
	Value                isElectricMachineTorque_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ElectricMachineTorque) Reset()         { *m = ElectricMachineTorque{} }
func (m *ElectricMachineTorque) String() string { return proto.CompactTextString(m) }
func (*ElectricMachineTorque) ProtoMessage()    {}
func (*ElectricMachineTorque) Descriptor() ([]byte, []int) {
	return fileDescriptor_29cd3d1a5f57fb1c, []int{20}
}

func (m *ElectricMachineTorque) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectricMachineTorque.Unmarshal(m, b)
}
func (m *ElectricMachineTorque) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectricMachineTorque.Marshal(b, m, deterministic)
}
func (m *ElectricMachineTorque) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectricMachineTorque.Merge(m, src)
}
func (m *ElectricMachineTorque) XXX_Size() int {
	return xxx_messageInfo_ElectricMachineTorque.Size(m)
}
func (m *ElectricMachineTorque) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectricMachineTorque.DiscardUnknown(m)
}

var xxx_messageInfo_ElectricMachineTorque proto.InternalMessageInfo

type isElectricMachineTorque_Value interface {
	isElectricMachineTorque_Value()
}

type ElectricMachineTorque_ElectricMachineTorque struct {
	ElectricMachineTorque float64 `protobuf:"fixed64,1,opt,name=electric_machine_torque,json=electricMachineTorque,proto3,oneof"`
}

type ElectricMachineTorque_WkErrorName struct {
	WkErrorName enumerations.Error `protobuf:"varint,2,opt,name=wk_error_name,json=wkErrorName,proto3,enum=autonomic.ext.telemetry.enumerations.error.Error,oneof"`
}

func (*ElectricMachineTorque_ElectricMachineTorque) isElectricMachineTorque_Value() {}

func (*ElectricMachineTorque_WkErrorName) isElectricMachineTorque_Value() {}

func (m *ElectricMachineTorque) GetValue() isElectricMachineTorque_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ElectricMachineTorque) GetElectricMachineTorque() float64 {
	if x, ok := m.GetValue().(*ElectricMachineTorque_ElectricMachineTorque); ok {
		return x.ElectricMachineTorque
	}
	return 0
}

func (m *ElectricMachineTorque) GetWkErrorName() enumerations.Error {
	if x, ok := m.GetValue().(*ElectricMachineTorque_WkErrorName); ok {
		return x.WkErrorName
	}
	return enumerations.Error_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ElectricMachineTorque) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ElectricMachineTorque_ElectricMachineTorque)(nil),
		(*ElectricMachineTorque_WkErrorName)(nil),
	}
}

func init() {
	proto.RegisterType((*Temperature)(nil), "autonomic.ext.telemetry.Temperature")
	proto.RegisterType((*Voltage)(nil), "autonomic.ext.telemetry.Voltage")
	proto.RegisterType((*Current)(nil), "autonomic.ext.telemetry.Current")
	proto.RegisterType((*EvBatteryPackage)(nil), "autonomic.ext.telemetry.EvBatteryPackage")
	proto.RegisterType((*EvBatteryPackageInfo)(nil), "autonomic.ext.telemetry.EvBatteryPackageInfo")
	proto.RegisterType((*EvBatteryCell)(nil), "autonomic.ext.telemetry.EvBatteryCell")
	proto.RegisterType((*EvBatteryCellInfo)(nil), "autonomic.ext.telemetry.EvBatteryCellInfo")
	proto.RegisterType((*EvBatteryProbe)(nil), "autonomic.ext.telemetry.EvBatteryProbe")
	proto.RegisterType((*EvBatteryProbeInfo)(nil), "autonomic.ext.telemetry.EvBatteryProbeInfo")
	proto.RegisterType((*EvBatteryPackageStatus)(nil), "autonomic.ext.telemetry.EvBatteryPackageStatus")
	proto.RegisterType((*EvBatteryCellStatus)(nil), "autonomic.ext.telemetry.EvBatteryCellStatus")
	proto.RegisterType((*EvBatteryProbeStatus)(nil), "autonomic.ext.telemetry.EvBatteryProbeStatus")
	proto.RegisterType((*ElectricMachineState)(nil), "autonomic.ext.telemetry.ElectricMachineState")
	proto.RegisterType((*ElectricMachine)(nil), "autonomic.ext.telemetry.ElectricMachine")
	proto.RegisterType((*ElectricMachineControllerTemp)(nil), "autonomic.ext.telemetry.ElectricMachineControllerTemp")
	proto.RegisterType((*ElectricMachineCurrent)(nil), "autonomic.ext.telemetry.ElectricMachineCurrent")
	proto.RegisterType((*ElectricMachineVoltage)(nil), "autonomic.ext.telemetry.ElectricMachineVoltage")
	proto.RegisterType((*ElectricMachineSpeed)(nil), "autonomic.ext.telemetry.ElectricMachineSpeed")
	proto.RegisterType((*ElectricMachineStatus)(nil), "autonomic.ext.telemetry.ElectricMachineStatus")
	proto.RegisterType((*ElectricMachineTemp)(nil), "autonomic.ext.telemetry.ElectricMachineTemp")
	proto.RegisterType((*ElectricMachineTorque)(nil), "autonomic.ext.telemetry.ElectricMachineTorque")
}

func init() { proto.RegisterFile("autonomic/ext/telemetry/ev.proto", fileDescriptor_29cd3d1a5f57fb1c) }

var fileDescriptor_29cd3d1a5f57fb1c = []byte{
	// 1452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0xcb, 0x6f, 0xe3, 0xd4,
	0x17, 0xce, 0xcd, 0xd3, 0x39, 0x99, 0x76, 0xd2, 0x9b, 0xa6, 0x49, 0xfb, 0xfb, 0x55, 0x44, 0x01,
	0x41, 0x78, 0x34, 0x81, 0x32, 0x1a, 0xa1, 0xee, 0x48, 0x55, 0x94, 0x44, 0x9a, 0x51, 0x27, 0xed,
	0x0c, 0xe2, 0x31, 0x18, 0xd7, 0xb9, 0x9d, 0x5a, 0x75, 0xec, 0xe2, 0x38, 0x99, 0xce, 0x8a, 0x0d,
	0x12, 0x0b, 0x96, 0x88, 0x35, 0x12, 0x5b, 0x84, 0x00, 0x21, 0x21, 0xd6, 0x08, 0x89, 0x05, 0xec,
	0x58, 0xf0, 0xaf, 0xb0, 0x44, 0xbe, 0xd7, 0x76, 0xfc, 0xb8, 0x4e, 0x9d, 0x54, 0x29, 0x9b, 0x2a,
	0x39, 0xf6, 0x3d, 0xdf, 0x39, 0xf7, 0x9c, 0xef, 0xbb, 0x27, 0xb7, 0x50, 0x93, 0xc6, 0xa6, 0xae,
	0xe9, 0x43, 0x45, 0x6e, 0x91, 0x4b, 0xb3, 0x65, 0x12, 0x95, 0x0c, 0x89, 0x69, 0x3c, 0x6b, 0x91,
	0x49, 0xf3, 0xc2, 0xd0, 0x4d, 0x1d, 0x57, 0xdc, 0x37, 0x9a, 0xe4, 0xd2, 0x6c, 0xba, 0x6f, 0x6c,
	0xb5, 0x23, 0x97, 0x6a, 0xe3, 0x21, 0x31, 0x24, 0x53, 0xd1, 0xb5, 0x51, 0x8b, 0xa8, 0x44, 0x36,
	0x0d, 0x45, 0x16, 0x87, 0x92, 0x7c, 0xa6, 0x68, 0x44, 0x1c, 0x99, 0x92, 0x39, 0x1e, 0x31, 0xe7,
	0x5b, 0xaf, 0xc7, 0xf3, 0x61, 0x18, 0xba, 0xc1, 0x56, 0xd4, 0xbf, 0x44, 0x50, 0x38, 0x26, 0xc3,
	0x0b, 0xeb, 0xe1, 0xd8, 0x20, 0xb8, 0x0e, 0x05, 0x73, 0xfa, 0xb5, 0x8a, 0x6a, 0xa8, 0x81, 0x3a,
	0x89, 0xbe, 0xd7, 0x88, 0xdf, 0x85, 0x95, 0xa7, 0xe7, 0x22, 0xf5, 0x22, 0x6a, 0xd2, 0x90, 0x54,
	0x93, 0x35, 0xd4, 0x58, 0xdd, 0x7d, 0xa3, 0x19, 0x91, 0x5a, 0xd3, 0x8b, 0xde, 0x64, 0xe8, 0x07,
	0xd6, 0x5f, 0xcb, 0xf1, 0xd3, 0x73, 0xfa, 0xf1, 0xbe, 0x34, 0x24, 0xed, 0x1c, 0x64, 0x26, 0x92,
	0x3a, 0x26, 0xf5, 0xcf, 0x11, 0xe4, 0x1e, 0xe9, 0xaa, 0x29, 0x3d, 0x21, 0x78, 0x0b, 0x72, 0x13,
	0xf6, 0xd1, 0x8d, 0xc6, 0x31, 0xdc, 0x50, 0x24, 0xfb, 0x63, 0xc3, 0x20, 0x9a, 0x69, 0x45, 0x22,
	0xb3, 0x8f, 0xd3, 0x48, 0x6c, 0xc3, 0x0d, 0x44, 0xf2, 0x6d, 0x06, 0x8a, 0x07, 0x93, 0xb6, 0x64,
	0x9a, 0xc4, 0x78, 0x76, 0x28, 0xc9, 0xe7, 0xd6, 0x06, 0x6c, 0x03, 0x5c, 0xb0, 0x8f, 0xa2, 0x32,
	0xa0, 0x51, 0xe5, 0xfb, 0x79, 0xdb, 0xd2, 0x1d, 0xe0, 0xbd, 0x69, 0xc4, 0x99, 0x1a, 0x6a, 0x14,
	0x76, 0x6b, 0x91, 0xf1, 0xd8, 0x49, 0x4e, 0x33, 0xda, 0x9b, 0xee, 0x7b, 0xf6, 0x8a, 0xb5, 0x76,
	0xa9, 0xa6, 0x75, 0x79, 0xc7, 0xdf, 0x45, 0x39, 0xba, 0xfe, 0x85, 0xc8, 0xf5, 0x9e, 0x06, 0xf4,
	0x77, 0x5a, 0x1f, 0x6e, 0x93, 0x89, 0x78, 0xc2, 0x72, 0x16, 0x65, 0xa2, 0xaa, 0x55, 0xa1, 0x96,
	0x6a, 0x14, 0x76, 0x5f, 0x8c, 0xf4, 0xe5, 0x6e, 0xd1, 0x3e, 0x51, 0xd5, 0x76, 0xb2, 0x8a, 0xfa,
	0x2b, 0xc4, 0x6b, 0xc2, 0x0f, 0xa1, 0xe8, 0xf1, 0x79, 0x61, 0xe8, 0x27, 0xa4, 0x9a, 0xa7, 0x4e,
	0x5f, 0xba, 0xda, 0xe9, 0xa1, 0xf5, 0x3a, 0xf5, 0xba, 0x4a, 0x7c, 0x36, 0xab, 0x12, 0x56, 0x7c,
	0xa2, 0xac, 0x8f, 0x35, 0xb3, 0x0a, 0x35, 0xd4, 0x48, 0xf5, 0xf3, 0x96, 0x65, 0xdf, 0x32, 0xe0,
	0xe7, 0xa0, 0x40, 0xa1, 0xec, 0xe7, 0x05, 0xfa, 0x1c, 0xa8, 0x89, 0xbd, 0xf0, 0x01, 0xac, 0x07,
	0x52, 0x15, 0x15, 0xed, 0x54, 0xaf, 0xde, 0xa2, 0xa1, 0xbd, 0x12, 0x2f, 0xdf, 0xae, 0x76, 0xaa,
	0xf7, 0xd7, 0x48, 0xd0, 0x84, 0x3f, 0x82, 0x72, 0x30, 0x67, 0xe6, 0x7d, 0x85, 0x7a, 0x7f, 0x35,
	0x66, 0xe2, 0xd4, 0x3d, 0x26, 0x21, 0x5b, 0x2f, 0x2d, 0x24, 0x8b, 0xa9, 0x5e, 0x5a, 0x48, 0x15,
	0xd3, 0xbd, 0xb4, 0x90, 0x2e, 0x66, 0xea, 0x7f, 0x21, 0x58, 0x0f, 0x76, 0x2b, 0x0d, 0xe5, 0x3d,
	0xc0, 0xde, 0x50, 0xd8, 0x13, 0xda, 0xb9, 0x85, 0xdd, 0x97, 0x63, 0xc4, 0xc1, 0x16, 0x74, 0x12,
	0xfd, 0x22, 0x09, 0x92, 0x61, 0xf9, 0x1c, 0xfc, 0x1b, 0xc1, 0x8a, 0x6f, 0xc3, 0x71, 0x05, 0x72,
	0xac, 0x56, 0x0e, 0xfb, 0xb2, 0xd6, 0xd7, 0xee, 0x20, 0xc0, 0xcc, 0x24, 0x87, 0x99, 0x0e, 0xbb,
	0x32, 0xd7, 0x64, 0x57, 0x76, 0x41, 0x76, 0xf9, 0xea, 0xf5, 0x3b, 0x82, 0xb5, 0x50, 0x2b, 0xe1,
	0xc3, 0x30, 0xff, 0x58, 0xa5, 0x62, 0xf2, 0xaf, 0x93, 0x08, 0xb2, 0x6f, 0xf9, 0x35, 0xfa, 0x11,
	0xc1, 0xaa, 0xbf, 0x6d, 0xf1, 0x26, 0x08, 0x76, 0xcf, 0x3b, 0x55, 0xca, 0xd1, 0xef, 0xdd, 0x81,
	0xb7, 0x7e, 0xc9, 0x19, 0xf5, 0x4b, 0x05, 0xeb, 0x17, 0xa8, 0x41, 0x66, 0xf1, 0x1a, 0x58, 0xbb,
	0xff, 0x07, 0x02, 0x1c, 0xa6, 0x1a, 0x3e, 0xe2, 0x48, 0x15, 0xdb, 0xff, 0xb8, 0x52, 0xd5, 0x49,
	0x84, 0x84, 0x6a, 0xf9, 0x15, 0xf8, 0x55, 0x80, 0x8d, 0x20, 0x61, 0x8f, 0xe8, 0x98, 0x82, 0x1f,
	0x43, 0xc9, 0xd9, 0xd5, 0xa1, 0x74, 0x29, 0x3a, 0x14, 0x48, 0xce, 0x49, 0x7f, 0xaa, 0xc0, 0x6b,
	0xb6, 0xa7, 0x7b, 0xd2, 0xa5, 0x33, 0x2b, 0x78, 0xdd, 0x2b, 0x9a, 0xeb, 0x3e, 0x75, 0x2d, 0xf7,
	0x8a, 0xe6, 0xb8, 0x27, 0x50, 0xf1, 0x46, 0xef, 0x6d, 0x80, 0xf4, 0x22, 0x10, 0xe5, 0x69, 0x06,
	0xde, 0x19, 0xcc, 0x0b, 0xa3, 0x68, 0x62, 0xb8, 0xcf, 0x16, 0x85, 0x51, 0x34, 0x2f, 0xcc, 0x29,
	0x54, 0x39, 0xb5, 0x60, 0xe7, 0x82, 0x40, 0x71, 0x76, 0x62, 0xe3, 0xd0, 0x93, 0xa1, 0x1c, 0x2a,
	0x08, 0xed, 0x62, 0x2f, 0xce, 0xb4, 0x28, 0x0c, 0x27, 0x7f, 0x2d, 0x1c, 0xb7, 0x32, 0x14, 0x47,
	0x83, 0xff, 0x47, 0x54, 0x87, 0x61, 0xc1, 0x22, 0x58, 0x9b, 0xdc, 0x12, 0x85, 0xf0, 0xfc, 0x65,
	0x62, 0x78, 0x85, 0x6b, 0xe1, 0xf9, 0x6a, 0x45, 0xf1, 0x9e, 0x87, 0x15, 0x07, 0x8f, 0x0d, 0x11,
	0x59, 0x3a, 0x44, 0xdc, 0xb2, 0x8d, 0xce, 0x18, 0xc1, 0x3b, 0x5e, 0x73, 0xf4, 0x98, 0x9f, 0xb3,
	0x6d, 0xc2, 0x07, 0xec, 0x00, 0x2a, 0x61, 0xe7, 0xde, 0x31, 0x65, 0xce, 0x64, 0xd7, 0x09, 0xc7,
	0xda, 0x4b, 0x0b, 0xa8, 0x98, 0xac, 0x7f, 0x95, 0x85, 0x92, 0xef, 0x2c, 0xb1, 0x15, 0xe4, 0x18,
	0x8a, 0x54, 0xb0, 0xbd, 0xf2, 0x91, 0x9a, 0xe7, 0x4c, 0x62, 0xd3, 0x9b, 0xe5, 0xc3, 0x23, 0x1c,
	0xae, 0x57, 0x8f, 0x6a, 0xa4, 0x17, 0xf4, 0x3a, 0xd5, 0x8b, 0x0f, 0x61, 0xdd, 0x8d, 0x35, 0xcc,
	0xe2, 0x79, 0x3c, 0x63, 0x3b, 0x5e, 0x2f, 0x7f, 0x5d, 0xef, 0x01, 0x8d, 0xc8, 0x2e, 0xe8, 0xdd,
	0xaf, 0x0e, 0x8f, 0xa1, 0x1c, 0xdc, 0x67, 0x56, 0x69, 0x36, 0xcc, 0xcf, 0x33, 0x90, 0x62, 0xff,
	0x66, 0xd3, 0x66, 0x76, 0xdd, 0x07, 0x15, 0x41, 0x58, 0xd0, 0xbd, 0x5f, 0x0b, 0x08, 0x6c, 0xf2,
	0x76, 0xde, 0x2b, 0x3a, 0xf3, 0x40, 0x6c, 0x84, 0xb7, 0xdf, 0x0f, 0xc3, 0xe3, 0x3f, 0x2c, 0x08,
	0x13, 0x62, 0x3e, 0x63, 0x04, 0x1b, 0xb2, 0xeb, 0xbf, 0xa5, 0xbc, 0x83, 0xb5, 0x75, 0xa2, 0xdb,
	0xc4, 0x10, 0xa1, 0xcc, 0x86, 0x9c, 0x60, 0xb7, 0xa5, 0xe6, 0x9a, 0x18, 0x68, 0x43, 0x94, 0xa8,
	0xa7, 0x40, 0xbf, 0x4d, 0x01, 0x02, 0x0d, 0x97, 0x5e, 0x18, 0xc0, 0xdf, 0x72, 0x67, 0xb0, 0xc5,
	0xcd, 0xc0, 0xdb, 0x77, 0x73, 0xfd, 0x54, 0xa9, 0x70, 0xd2, 0xa0, 0x75, 0x9b, 0x22, 0xf1, 0x0a,
	0x27, 0x2c, 0x8c, 0x34, 0xb3, 0x74, 0xbd, 0xb4, 0x90, 0x29, 0x66, 0x7b, 0x69, 0x21, 0x5b, 0xcc,
	0xd5, 0xbf, 0xb6, 0x7e, 0x1f, 0xd9, 0x77, 0x39, 0xf7, 0xd8, 0x55, 0x8e, 0x55, 0x47, 0x82, 0xef,
	0xc0, 0x46, 0xe8, 0x8e, 0x87, 0xc9, 0x3d, 0xa2, 0x72, 0xbf, 0x4e, 0xfc, 0xab, 0x98, 0xec, 0x3f,
	0x80, 0xdb, 0x44, 0x25, 0xde, 0x45, 0xd5, 0x24, 0x55, 0xe4, 0x46, 0x74, 0x16, 0x7e, 0x3f, 0xfd,
	0x55, 0xdb, 0x81, 0xfd, 0xbd, 0xfe, 0x7d, 0x16, 0x6e, 0x07, 0xde, 0xc1, 0x9f, 0x42, 0x8d, 0x13,
	0x9c, 0x66, 0x1a, 0xba, 0xaa, 0x12, 0x83, 0xee, 0xa4, 0x3d, 0xa0, 0xde, 0x8d, 0x8b, 0xbb, 0xef,
	0x2e, 0xb7, 0xb6, 0xae, 0xbf, 0x4d, 0x66, 0x3d, 0xc6, 0x0a, 0x54, 0xc3, 0x01, 0xd8, 0x37, 0x1c,
	0x6c, 0x88, 0x6c, 0xc5, 0x06, 0xb6, 0x2f, 0x3c, 0x36, 0x08, 0xd7, 0xce, 0x85, 0xf2, 0x1f, 0x38,
	0xb1, 0xa1, 0x9c, 0x5f, 0x70, 0x41, 0x28, 0xe7, 0x9c, 0x90, 0x39, 0x35, 0x1f, 0x5d, 0x10, 0x32,
	0xb0, 0xa9, 0xb5, 0x13, 0x17, 0xe8, 0xc8, 0x5a, 0x14, 0x6a, 0x11, 0x6a, 0xc5, 0xa7, 0x50, 0x89,
	0xb8, 0x3c, 0xb4, 0xcf, 0xa3, 0x66, 0x6c, 0x14, 0xba, 0xaa, 0x5f, 0x26, 0x3c, 0x33, 0xfe, 0x18,
	0xca, 0x21, 0x1c, 0xda, 0x18, 0xec, 0x5c, 0x7a, 0x2d, 0x2e, 0x0a, 0x6d, 0x87, 0x12, 0x09, 0x1b,
	0xb9, 0x99, 0x98, 0xba, 0xf1, 0xc9, 0xd8, 0xb9, 0x69, 0x8a, 0x9d, 0xc9, 0x31, 0x5d, 0x15, 0xca,
	0x84, 0x99, 0x71, 0x13, 0x4a, 0x21, 0x1c, 0x65, 0x40, 0xe5, 0x21, 0xdf, 0x5f, 0x0b, 0xac, 0xe9,
	0x0e, 0xea, 0x7f, 0x22, 0xd8, 0x9e, 0xd9, 0xdd, 0xb8, 0x1b, 0x93, 0x3f, 0xa8, 0x93, 0xb8, 0x8a,
	0x09, 0xcb, 0xff, 0x19, 0xf7, 0x33, 0x82, 0x0d, 0x3e, 0x67, 0xf0, 0xde, 0x0c, 0x1a, 0x3a, 0xf1,
	0x47, 0xf1, 0xea, 0x3f, 0x09, 0xdc, 0x61, 0xda, 0xde, 0x0c, 0x52, 0x47, 0x05, 0xfe, 0xe8, 0xc6,
	0x2e, 0x9b, 0x7f, 0xe0, 0x1c, 0x0a, 0x94, 0xbb, 0x77, 0x23, 0x05, 0xc2, 0x09, 0x9a, 0xcf, 0xf9,
	0x1b, 0xb8, 0x1f, 0x4f, 0x42, 0x99, 0x2b, 0x0f, 0xf8, 0x0b, 0x14, 0x2d, 0x38, 0x88, 0x86, 0xf1,
	0x20, 0x66, 0x18, 0x3c, 0xf7, 0x7c, 0x4d, 0xea, 0x24, 0xa2, 0x54, 0x69, 0xf9, 0x3b, 0xf1, 0x1d,
	0x82, 0x12, 0x47, 0xc2, 0xf0, 0x9d, 0x28, 0x3d, 0x74, 0x4a, 0xc7, 0xd5, 0xb8, 0xe5, 0xc7, 0xfb,
	0x13, 0x0a, 0x55, 0xce, 0xd6, 0xbd, 0xb7, 0xa2, 0xf5, 0xd5, 0x89, 0x39, 0x42, 0x31, 0x97, 0x1e,
	0x75, 0xfb, 0x33, 0x04, 0xff, 0x93, 0xf5, 0x61, 0x94, 0xc3, 0x76, 0xee, 0x60, 0x72, 0x68, 0xe8,
	0xa6, 0x7e, 0x88, 0xde, 0xbf, 0xff, 0x44, 0x31, 0xcf, 0xc6, 0x27, 0x4d, 0x59, 0x1f, 0xb6, 0xdc,
	0xd7, 0x77, 0x24, 0xa5, 0x45, 0x2e, 0x4d, 0x62, 0x68, 0x92, 0xba, 0x43, 0xff, 0x05, 0x36, 0x6a,
	0x8d, 0x0c, 0xb9, 0x35, 0x94, 0x14, 0xad, 0x45, 0xbf, 0xb7, 0x22, 0xfe, 0x87, 0xf6, 0x0b, 0x42,
	0xff, 0x20, 0xf4, 0x4d, 0x32, 0xf5, 0xf6, 0xc3, 0xe3, 0x93, 0x2c, 0x7d, 0xf5, 0xcd, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x4d, 0x58, 0x84, 0x54, 0xf0, 0x1b, 0x00, 0x00,
}
