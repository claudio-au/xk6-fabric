/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/telemetry/position.proto

package telemetry

import (
	fmt "fmt"
	enumerations "xk6-fabric/proto/autonomic/ext/telemetry/enumerations"
	//enumerations "xk6-fabric/proto/autonomic/ext/telemetry/enumerations"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GnssConstellationType int32

const (
	GnssConstellationType_CONSTELLATION_UNKNOWN GnssConstellationType = 0
	GnssConstellationType_CONSTELLATION_GPS     GnssConstellationType = 1
	GnssConstellationType_CONSTELLATION_SBAS    GnssConstellationType = 2
	GnssConstellationType_CONSTELLATION_GLONASS GnssConstellationType = 3
	GnssConstellationType_CONSTELLATION_QZSS    GnssConstellationType = 4
	GnssConstellationType_CONSTELLATION_BEIDOU  GnssConstellationType = 5
	GnssConstellationType_CONSTELLATION_GALILEO GnssConstellationType = 6
)

var GnssConstellationType_name = map[int32]string{
	0: "CONSTELLATION_UNKNOWN",
	1: "CONSTELLATION_GPS",
	2: "CONSTELLATION_SBAS",
	3: "CONSTELLATION_GLONASS",
	4: "CONSTELLATION_QZSS",
	5: "CONSTELLATION_BEIDOU",
	6: "CONSTELLATION_GALILEO",
}

var GnssConstellationType_value = map[string]int32{
	"CONSTELLATION_UNKNOWN": 0,
	"CONSTELLATION_GPS":     1,
	"CONSTELLATION_SBAS":    2,
	"CONSTELLATION_GLONASS": 3,
	"CONSTELLATION_QZSS":    4,
	"CONSTELLATION_BEIDOU":  5,
	"CONSTELLATION_GALILEO": 6,
}

func (x GnssConstellationType) String() string {
	return proto.EnumName(GnssConstellationType_name, int32(x))
}

func (GnssConstellationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{0}
}

type Heading_HeadingDetectionType int32

const (
	Heading_UNKNOWN                     Heading_HeadingDetectionType = 0
	Heading_HEADING_RAW_GNSS            Heading_HeadingDetectionType = 1
	Heading_HEADING_MAGNETIC_SENSOR     Heading_HeadingDetectionType = 2
	Heading_HEADING_MULTI_SENSOR_FUSION Heading_HeadingDetectionType = 3
	Heading_HEADING_BY_MAP              Heading_HeadingDetectionType = 4
)

var Heading_HeadingDetectionType_name = map[int32]string{
	0: "UNKNOWN",
	1: "HEADING_RAW_GNSS",
	2: "HEADING_MAGNETIC_SENSOR",
	3: "HEADING_MULTI_SENSOR_FUSION",
	4: "HEADING_BY_MAP",
}

var Heading_HeadingDetectionType_value = map[string]int32{
	"UNKNOWN":                     0,
	"HEADING_RAW_GNSS":            1,
	"HEADING_MAGNETIC_SENSOR":     2,
	"HEADING_MULTI_SENSOR_FUSION": 3,
	"HEADING_BY_MAP":              4,
}

func (x Heading_HeadingDetectionType) String() string {
	return proto.EnumName(Heading_HeadingDetectionType_name, int32(x))
}

func (Heading_HeadingDetectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{7, 0}
}

type Speed_SpeedDetectionType int32

const (
	Speed_UNKNOWN           Speed_SpeedDetectionType = 0
	Speed_SPEED_RAW_GNSS    Speed_SpeedDetectionType = 1
	Speed_SPEED_WHEEL_TICKS Speed_SpeedDetectionType = 2
	Speed_SPEED_RADAR_SONAR Speed_SpeedDetectionType = 3
)

var Speed_SpeedDetectionType_name = map[int32]string{
	0: "UNKNOWN",
	1: "SPEED_RAW_GNSS",
	2: "SPEED_WHEEL_TICKS",
	3: "SPEED_RADAR_SONAR",
}

var Speed_SpeedDetectionType_value = map[string]int32{
	"UNKNOWN":           0,
	"SPEED_RAW_GNSS":    1,
	"SPEED_WHEEL_TICKS": 2,
	"SPEED_RADAR_SONAR": 3,
}

func (x Speed_SpeedDetectionType) String() string {
	return proto.EnumName(Speed_SpeedDetectionType_name, int32(x))
}

func (Speed_SpeedDetectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{8, 0}
}

type Position_GpsDimension int32

const (
	Position_UNKNOWN Position_GpsDimension = 0
	Position_NONE    Position_GpsDimension = 1
	Position_DIM_2D  Position_GpsDimension = 2
	Position_DIM_3D  Position_GpsDimension = 3
)

var Position_GpsDimension_name = map[int32]string{
	0: "UNKNOWN",
	1: "NONE",
	2: "DIM_2D",
	3: "DIM_3D",
}

var Position_GpsDimension_value = map[string]int32{
	"UNKNOWN": 0,
	"NONE":    1,
	"DIM_2D":  2,
	"DIM_3D":  3,
}

func (x Position_GpsDimension) String() string {
	return proto.EnumName(Position_GpsDimension_name, int32(x))
}

func (Position_GpsDimension) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{9, 0}
}

// more details: https://en.wikipedia.org/wiki/Restrictions_on_geographic_data_in_China
type Position_GpsDatum int32

const (
	Position_GPS_DATUM_UNKNOWN Position_GpsDatum = 0
	Position_WGS84             Position_GpsDatum = 1
	Position_BD09              Position_GpsDatum = 2
	Position_GCJ02             Position_GpsDatum = 3
)

var Position_GpsDatum_name = map[int32]string{
	0: "GPS_DATUM_UNKNOWN",
	1: "WGS84",
	2: "BD09",
	3: "GCJ02",
}

var Position_GpsDatum_value = map[string]int32{
	"GPS_DATUM_UNKNOWN": 0,
	"WGS84":             1,
	"BD09":              2,
	"GCJ02":             3,
}

func (x Position_GpsDatum) String() string {
	return proto.EnumName(Position_GpsDatum_name, int32(x))
}

func (Position_GpsDatum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{9, 1}
}

// The "ellipsoid point with uncertainty circle" is characterised by the
// co-ordinates of an ellipsoid point (the origin) and a distance r. It
// describes formally the set of points on the ellipsoid which are at a
// distance from the origin less than or equal to r, the distance being the
// geodesic distance over the ellipsoid, i.e., the minimum length of a path
// staying on the ellipsoid and joining the two points.
//
// As for the ellipsoid point, this can be used to indicate points on the
// Earth's surface, or near the Earth's surface, of same latitude and
// longitude.
//
// The typical use of this shape is to indicate a point when its position
// is known only with a limited accuracy.
type Point struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	R                    float64  `protobuf:"fixed64,3,opt,name=r,proto3" json:"r,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{0}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Point) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Point) GetR() float64 {
	if m != nil {
		return m.R
	}
	return 0
}

// The "ellipsoid point with altitude and uncertainty ellipsoid" is
// characterised by the co-ordinates of an ellipsoid point with altitude,
// distances r1 (the "semi-major uncertainty"), r2 (the "semi-minor
// uncertainty") and r3 (the "vertical uncertainty") and an angle of
// orientation A (the "angle of the major axis"). It describes formally
// the set of points which fall within or on the surface of a general
// (three dimensional) ellipsoid centred on an ellipsoid point with
// altitude whose real semi-major, semi-mean and semi-minor axis are some
// permutation of r1, r2, r3 with r1 ≥ r2. The r3 axis is aligned
// vertically, while the r1 axis, which is the semi-major axis of the
// ellipse in a horizontal plane that bisects the ellipsoid, is oriented
// at an angle A (0° to 180°) measured clockwise from north.
//
// The typical use of this shape is to indicate a point when its
// horizontal position and altitude are known only with a limited
// accuracy, but the geometrical contributions to uncertainty can be
// quantified. The confidence with which the position of a target entity
// is included within the shape is also included.
type ThreeDPoint struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude             float64  `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	R1                   float64  `protobuf:"fixed64,5,opt,name=r1,proto3" json:"r1,omitempty"`
	R2                   float64  `protobuf:"fixed64,6,opt,name=r2,proto3" json:"r2,omitempty"`
	R3                   float64  `protobuf:"fixed64,10,opt,name=r3,proto3" json:"r3,omitempty"`
	A                    float64  `protobuf:"fixed64,7,opt,name=a,proto3" json:"a,omitempty"`
	Confidence           float32  `protobuf:"fixed32,8,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreeDPoint) Reset()         { *m = ThreeDPoint{} }
func (m *ThreeDPoint) String() string { return proto.CompactTextString(m) }
func (*ThreeDPoint) ProtoMessage()    {}
func (*ThreeDPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{1}
}

func (m *ThreeDPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreeDPoint.Unmarshal(m, b)
}
func (m *ThreeDPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreeDPoint.Marshal(b, m, deterministic)
}
func (m *ThreeDPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreeDPoint.Merge(m, src)
}
func (m *ThreeDPoint) XXX_Size() int {
	return xxx_messageInfo_ThreeDPoint.Size(m)
}
func (m *ThreeDPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreeDPoint.DiscardUnknown(m)
}

var xxx_messageInfo_ThreeDPoint proto.InternalMessageInfo

func (m *ThreeDPoint) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *ThreeDPoint) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *ThreeDPoint) GetAltitude() float64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *ThreeDPoint) GetR1() float64 {
	if m != nil {
		return m.R1
	}
	return 0
}

func (m *ThreeDPoint) GetR2() float64 {
	if m != nil {
		return m.R2
	}
	return 0
}

func (m *ThreeDPoint) GetR3() float64 {
	if m != nil {
		return m.R3
	}
	return 0
}

func (m *ThreeDPoint) GetA() float64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *ThreeDPoint) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

type Location struct {
	// Types that are valid to be assigned to Location:
	//	*Location_Point
	//	*Location_ThreeDPoint
	Location             isLocation_Location `protobuf_oneof:"location"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{2}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

type isLocation_Location interface {
	isLocation_Location()
}

type Location_Point struct {
	Point *Point `protobuf:"bytes,1,opt,name=point,proto3,oneof"`
}

type Location_ThreeDPoint struct {
	ThreeDPoint *ThreeDPoint `protobuf:"bytes,2,opt,name=three_d_point,json=threeDPoint,proto3,oneof"`
}

func (*Location_Point) isLocation_Location() {}

func (*Location_ThreeDPoint) isLocation_Location() {}

func (m *Location) GetLocation() isLocation_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Location) GetPoint() *Point {
	if x, ok := m.GetLocation().(*Location_Point); ok {
		return x.Point
	}
	return nil
}

func (m *Location) GetThreeDPoint() *ThreeDPoint {
	if x, ok := m.GetLocation().(*Location_ThreeDPoint); ok {
		return x.ThreeDPoint
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Location) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Location_Point)(nil),
		(*Location_ThreeDPoint)(nil),
	}
}

type GnssSatelliteState struct {
	Svid                 int32                 `protobuf:"varint,1,opt,name=svid,proto3" json:"svid,omitempty"`
	Elevation            float32               `protobuf:"fixed32,2,opt,name=elevation,proto3" json:"elevation,omitempty"`
	Azimuth              float32               `protobuf:"fixed32,3,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	Cn0DbHz              float32               `protobuf:"fixed32,4,opt,name=cn0_db_hz,json=cn0DbHz,proto3" json:"cn0_db_hz,omitempty"`
	ConstellationType    GnssConstellationType `protobuf:"varint,5,opt,name=constellation_type,json=constellationType,proto3,enum=autonomic.ext.telemetry.GnssConstellationType" json:"constellation_type,omitempty"`
	UsedInFix            bool                  `protobuf:"varint,6,opt,name=used_in_fix,json=usedInFix,proto3" json:"used_in_fix,omitempty"`
	HasAlmanacData       bool                  `protobuf:"varint,7,opt,name=has_almanac_data,json=hasAlmanacData,proto3" json:"has_almanac_data,omitempty"`
	HasEphemerisData     bool                  `protobuf:"varint,8,opt,name=has_ephemeris_data,json=hasEphemerisData,proto3" json:"has_ephemeris_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GnssSatelliteState) Reset()         { *m = GnssSatelliteState{} }
func (m *GnssSatelliteState) String() string { return proto.CompactTextString(m) }
func (*GnssSatelliteState) ProtoMessage()    {}
func (*GnssSatelliteState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{3}
}

func (m *GnssSatelliteState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GnssSatelliteState.Unmarshal(m, b)
}
func (m *GnssSatelliteState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GnssSatelliteState.Marshal(b, m, deterministic)
}
func (m *GnssSatelliteState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GnssSatelliteState.Merge(m, src)
}
func (m *GnssSatelliteState) XXX_Size() int {
	return xxx_messageInfo_GnssSatelliteState.Size(m)
}
func (m *GnssSatelliteState) XXX_DiscardUnknown() {
	xxx_messageInfo_GnssSatelliteState.DiscardUnknown(m)
}

var xxx_messageInfo_GnssSatelliteState proto.InternalMessageInfo

func (m *GnssSatelliteState) GetSvid() int32 {
	if m != nil {
		return m.Svid
	}
	return 0
}

func (m *GnssSatelliteState) GetElevation() float32 {
	if m != nil {
		return m.Elevation
	}
	return 0
}

func (m *GnssSatelliteState) GetAzimuth() float32 {
	if m != nil {
		return m.Azimuth
	}
	return 0
}

func (m *GnssSatelliteState) GetCn0DbHz() float32 {
	if m != nil {
		return m.Cn0DbHz
	}
	return 0
}

func (m *GnssSatelliteState) GetConstellationType() GnssConstellationType {
	if m != nil {
		return m.ConstellationType
	}
	return GnssConstellationType_CONSTELLATION_UNKNOWN
}

func (m *GnssSatelliteState) GetUsedInFix() bool {
	if m != nil {
		return m.UsedInFix
	}
	return false
}

func (m *GnssSatelliteState) GetHasAlmanacData() bool {
	if m != nil {
		return m.HasAlmanacData
	}
	return false
}

func (m *GnssSatelliteState) GetHasEphemerisData() bool {
	if m != nil {
		return m.HasEphemerisData
	}
	return false
}

type GnssEngineStatus struct {
	Satellites           []*GnssSatelliteState `protobuf:"bytes,1,rep,name=satellites,proto3" json:"satellites,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GnssEngineStatus) Reset()         { *m = GnssEngineStatus{} }
func (m *GnssEngineStatus) String() string { return proto.CompactTextString(m) }
func (*GnssEngineStatus) ProtoMessage()    {}
func (*GnssEngineStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{4}
}

func (m *GnssEngineStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GnssEngineStatus.Unmarshal(m, b)
}
func (m *GnssEngineStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GnssEngineStatus.Marshal(b, m, deterministic)
}
func (m *GnssEngineStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GnssEngineStatus.Merge(m, src)
}
func (m *GnssEngineStatus) XXX_Size() int {
	return xxx_messageInfo_GnssEngineStatus.Size(m)
}
func (m *GnssEngineStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_GnssEngineStatus.DiscardUnknown(m)
}

var xxx_messageInfo_GnssEngineStatus proto.InternalMessageInfo

func (m *GnssEngineStatus) GetSatellites() []*GnssSatelliteState {
	if m != nil {
		return m.Satellites
	}
	return nil
}

// Dilution of precision values are always positive and non-zero.
// Due to the quirks of proto3, there is no way to check for the
// presence of a field in a message. Instead, any DOP field with
// a value of 0 is considered to not be present and should be
// ignored.
type GnssDilutionOfPrecision struct {
	Pdop                 uint32   `protobuf:"varint,1,opt,name=pdop,proto3" json:"pdop,omitempty"`
	Hdop                 uint32   `protobuf:"varint,2,opt,name=hdop,proto3" json:"hdop,omitempty"`
	Vdop                 uint32   `protobuf:"varint,3,opt,name=vdop,proto3" json:"vdop,omitempty"`
	Gdop                 float32  `protobuf:"fixed32,4,opt,name=gdop,proto3" json:"gdop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GnssDilutionOfPrecision) Reset()         { *m = GnssDilutionOfPrecision{} }
func (m *GnssDilutionOfPrecision) String() string { return proto.CompactTextString(m) }
func (*GnssDilutionOfPrecision) ProtoMessage()    {}
func (*GnssDilutionOfPrecision) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{5}
}

func (m *GnssDilutionOfPrecision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GnssDilutionOfPrecision.Unmarshal(m, b)
}
func (m *GnssDilutionOfPrecision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GnssDilutionOfPrecision.Marshal(b, m, deterministic)
}
func (m *GnssDilutionOfPrecision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GnssDilutionOfPrecision.Merge(m, src)
}
func (m *GnssDilutionOfPrecision) XXX_Size() int {
	return xxx_messageInfo_GnssDilutionOfPrecision.Size(m)
}
func (m *GnssDilutionOfPrecision) XXX_DiscardUnknown() {
	xxx_messageInfo_GnssDilutionOfPrecision.DiscardUnknown(m)
}

var xxx_messageInfo_GnssDilutionOfPrecision proto.InternalMessageInfo

func (m *GnssDilutionOfPrecision) GetPdop() uint32 {
	if m != nil {
		return m.Pdop
	}
	return 0
}

func (m *GnssDilutionOfPrecision) GetHdop() uint32 {
	if m != nil {
		return m.Hdop
	}
	return 0
}

func (m *GnssDilutionOfPrecision) GetVdop() uint32 {
	if m != nil {
		return m.Vdop
	}
	return 0
}

func (m *GnssDilutionOfPrecision) GetGdop() float32 {
	if m != nil {
		return m.Gdop
	}
	return 0
}

type GnssState struct {
	GnssDopData          *GnssDilutionOfPrecision      `protobuf:"bytes,1,opt,name=gnss_dop_data,json=gnssDopData,proto3" json:"gnss_dop_data,omitempty"`
	GnssStateData        *GnssSatelliteState           `protobuf:"bytes,3,opt,name=gnss_state_data,json=gnssStateData,proto3" json:"gnss_state_data,omitempty"`
	GpsCoordinateMethod  enumerations.InferredVsActual `protobuf:"varint,4,opt,name=gps_coordinate_method,json=gpsCoordinateMethod,proto3,enum=autonomic.ext.telemetry.enumerations.inferredVsActual.InferredVsActual" json:"gps_coordinate_method,omitempty"`
	GpsFault             enumerations.OffOnStatus      `protobuf:"varint,5,opt,name=gps_fault,json=gpsFault,proto3,enum=autonomic.ext.telemetry.enumerations.offOnStatus.OffOnStatus" json:"gps_fault,omitempty"` // Deprecated: Do not use.
	GpsClock             *timestamp.Timestamp          `protobuf:"bytes,6,opt,name=gps_clock,json=gpsClock,proto3" json:"gps_clock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GnssState) Reset()         { *m = GnssState{} }
func (m *GnssState) String() string { return proto.CompactTextString(m) }
func (*GnssState) ProtoMessage()    {}
func (*GnssState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{6}
}

func (m *GnssState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GnssState.Unmarshal(m, b)
}
func (m *GnssState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GnssState.Marshal(b, m, deterministic)
}
func (m *GnssState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GnssState.Merge(m, src)
}
func (m *GnssState) XXX_Size() int {
	return xxx_messageInfo_GnssState.Size(m)
}
func (m *GnssState) XXX_DiscardUnknown() {
	xxx_messageInfo_GnssState.DiscardUnknown(m)
}

var xxx_messageInfo_GnssState proto.InternalMessageInfo

func (m *GnssState) GetGnssDopData() *GnssDilutionOfPrecision {
	if m != nil {
		return m.GnssDopData
	}
	return nil
}

func (m *GnssState) GetGnssStateData() *GnssSatelliteState {
	if m != nil {
		return m.GnssStateData
	}
	return nil
}

func (m *GnssState) GetGpsCoordinateMethod() enumerations.InferredVsActual {
	if m != nil {
		return m.GpsCoordinateMethod
	}
	return enumerations.InferredVsActual_UNKNOWN
}

// Deprecated: Do not use.
func (m *GnssState) GetGpsFault() enumerations.OffOnStatus {
	if m != nil {
		return m.GpsFault
	}
	return enumerations.OffOnStatus_UNKNOWN
}

func (m *GnssState) GetGpsClock() *timestamp.Timestamp {
	if m != nil {
		return m.GpsClock
	}
	return nil
}

type Heading struct {
	Heading              float32                      `protobuf:"fixed32,1,opt,name=heading,proto3" json:"heading,omitempty"`
	Uncertainty          float32                      `protobuf:"fixed32,2,opt,name=uncertainty,proto3" json:"uncertainty,omitempty"`
	DetectionType        Heading_HeadingDetectionType `protobuf:"varint,3,opt,name=detection_type,json=detectionType,proto3,enum=autonomic.ext.telemetry.Heading_HeadingDetectionType" json:"detection_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Heading) Reset()         { *m = Heading{} }
func (m *Heading) String() string { return proto.CompactTextString(m) }
func (*Heading) ProtoMessage()    {}
func (*Heading) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{7}
}

func (m *Heading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heading.Unmarshal(m, b)
}
func (m *Heading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heading.Marshal(b, m, deterministic)
}
func (m *Heading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heading.Merge(m, src)
}
func (m *Heading) XXX_Size() int {
	return xxx_messageInfo_Heading.Size(m)
}
func (m *Heading) XXX_DiscardUnknown() {
	xxx_messageInfo_Heading.DiscardUnknown(m)
}

var xxx_messageInfo_Heading proto.InternalMessageInfo

func (m *Heading) GetHeading() float32 {
	if m != nil {
		return m.Heading
	}
	return 0
}

func (m *Heading) GetUncertainty() float32 {
	if m != nil {
		return m.Uncertainty
	}
	return 0
}

func (m *Heading) GetDetectionType() Heading_HeadingDetectionType {
	if m != nil {
		return m.DetectionType
	}
	return Heading_UNKNOWN
}

type Speed struct {
	Speed                float32                  `protobuf:"fixed32,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Uncertainty          float32                  `protobuf:"fixed32,2,opt,name=uncertainty,proto3" json:"uncertainty,omitempty"`
	DetectionType        Speed_SpeedDetectionType `protobuf:"varint,3,opt,name=detection_type,json=detectionType,proto3,enum=autonomic.ext.telemetry.Speed_SpeedDetectionType" json:"detection_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Speed) Reset()         { *m = Speed{} }
func (m *Speed) String() string { return proto.CompactTextString(m) }
func (*Speed) ProtoMessage()    {}
func (*Speed) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{8}
}

func (m *Speed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Speed.Unmarshal(m, b)
}
func (m *Speed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Speed.Marshal(b, m, deterministic)
}
func (m *Speed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Speed.Merge(m, src)
}
func (m *Speed) XXX_Size() int {
	return xxx_messageInfo_Speed.Size(m)
}
func (m *Speed) XXX_DiscardUnknown() {
	xxx_messageInfo_Speed.DiscardUnknown(m)
}

var xxx_messageInfo_Speed proto.InternalMessageInfo

func (m *Speed) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Speed) GetUncertainty() float32 {
	if m != nil {
		return m.Uncertainty
	}
	return 0
}

func (m *Speed) GetDetectionType() Speed_SpeedDetectionType {
	if m != nil {
		return m.DetectionType
	}
	return Speed_UNKNOWN
}

type Position struct {
	// We expect only one location per position.
	// Support for multiple locations has been deprecated.
	Location []*Location `protobuf:"bytes,1,rep,name=location,proto3" json:"location,omitempty"`
	// HEADING is broken out to a separate WKS.
	// The entry is maintained here, so that code can
	// detect this data in OLD messages.
	Heading []*Heading `protobuf:"bytes,2,rep,name=heading,proto3" json:"heading,omitempty"` // Deprecated: Do not use.
	// SPEED is broken out to a separate WKS.
	// The entry is maintained here, so that code can
	// detect this data in OLD messages.
	Speed                []*Speed                `protobuf:"bytes,3,rep,name=speed,proto3" json:"speed,omitempty"` // Deprecated: Do not use.
	GnssData             *GnssState              `protobuf:"bytes,4,opt,name=gnss_data,json=gnssData,proto3" json:"gnss_data,omitempty"`
	Orientation          *Orientation            `protobuf:"bytes,5,opt,name=orientation,proto3" json:"orientation,omitempty"`
	OrientationSensors   []*ThreeAxisSensorState `protobuf:"bytes,6,rep,name=orientation_sensors,json=orientationSensors,proto3" json:"orientation_sensors,omitempty"`
	GpsDimension         Position_GpsDimension   `protobuf:"varint,7,opt,name=gpsDimension,proto3,enum=autonomic.ext.telemetry.Position_GpsDimension" json:"gpsDimension,omitempty"`
	GpsDatum             Position_GpsDatum       `protobuf:"varint,8,opt,name=gps_datum,json=gpsDatum,proto3,enum=autonomic.ext.telemetry.Position_GpsDatum" json:"gps_datum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f53dd1ad170ad38, []int{9}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetLocation() []*Location {
	if m != nil {
		return m.Location
	}
	return nil
}

// Deprecated: Do not use.
func (m *Position) GetHeading() []*Heading {
	if m != nil {
		return m.Heading
	}
	return nil
}

// Deprecated: Do not use.
func (m *Position) GetSpeed() []*Speed {
	if m != nil {
		return m.Speed
	}
	return nil
}

func (m *Position) GetGnssData() *GnssState {
	if m != nil {
		return m.GnssData
	}
	return nil
}

func (m *Position) GetOrientation() *Orientation {
	if m != nil {
		return m.Orientation
	}
	return nil
}

func (m *Position) GetOrientationSensors() []*ThreeAxisSensorState {
	if m != nil {
		return m.OrientationSensors
	}
	return nil
}

func (m *Position) GetGpsDimension() Position_GpsDimension {
	if m != nil {
		return m.GpsDimension
	}
	return Position_UNKNOWN
}

func (m *Position) GetGpsDatum() Position_GpsDatum {
	if m != nil {
		return m.GpsDatum
	}
	return Position_GPS_DATUM_UNKNOWN
}

func init() {
	proto.RegisterEnum("autonomic.ext.telemetry.GnssConstellationType", GnssConstellationType_name, GnssConstellationType_value)
	proto.RegisterEnum("autonomic.ext.telemetry.Heading_HeadingDetectionType", Heading_HeadingDetectionType_name, Heading_HeadingDetectionType_value)
	proto.RegisterEnum("autonomic.ext.telemetry.Speed_SpeedDetectionType", Speed_SpeedDetectionType_name, Speed_SpeedDetectionType_value)
	proto.RegisterEnum("autonomic.ext.telemetry.Position_GpsDimension", Position_GpsDimension_name, Position_GpsDimension_value)
	proto.RegisterEnum("autonomic.ext.telemetry.Position_GpsDatum", Position_GpsDatum_name, Position_GpsDatum_value)
	proto.RegisterType((*Point)(nil), "autonomic.ext.telemetry.Point")
	proto.RegisterType((*ThreeDPoint)(nil), "autonomic.ext.telemetry.ThreeDPoint")
	proto.RegisterType((*Location)(nil), "autonomic.ext.telemetry.Location")
	proto.RegisterType((*GnssSatelliteState)(nil), "autonomic.ext.telemetry.GnssSatelliteState")
	proto.RegisterType((*GnssEngineStatus)(nil), "autonomic.ext.telemetry.GnssEngineStatus")
	proto.RegisterType((*GnssDilutionOfPrecision)(nil), "autonomic.ext.telemetry.GnssDilutionOfPrecision")
	proto.RegisterType((*GnssState)(nil), "autonomic.ext.telemetry.GnssState")
	proto.RegisterType((*Heading)(nil), "autonomic.ext.telemetry.Heading")
	proto.RegisterType((*Speed)(nil), "autonomic.ext.telemetry.Speed")
	proto.RegisterType((*Position)(nil), "autonomic.ext.telemetry.Position")
}

func init() {
	proto.RegisterFile("autonomic/ext/telemetry/position.proto", fileDescriptor_1f53dd1ad170ad38)
}

var fileDescriptor_1f53dd1ad170ad38 = []byte{
	// 1430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xdd, 0x6e, 0xdb, 0x46,
	0x16, 0x0e, 0x29, 0xcb, 0x96, 0x8f, 0x62, 0x2d, 0x33, 0xb1, 0x37, 0x5a, 0x67, 0xe1, 0x78, 0x85,
	0xc5, 0xc2, 0xc8, 0x6e, 0x24, 0x47, 0xde, 0xdd, 0xa4, 0x17, 0x6e, 0x41, 0x99, 0xb2, 0xac, 0x44,
	0x96, 0x54, 0x52, 0xae, 0xdb, 0xa0, 0x0d, 0x41, 0x93, 0x23, 0x89, 0x28, 0x39, 0x24, 0x38, 0x23,
	0xc3, 0x4e, 0x1f, 0xa0, 0x17, 0x7d, 0x83, 0x5e, 0xf6, 0x0d, 0xfa, 0x08, 0xbd, 0x2c, 0xda, 0xbb,
	0xbe, 0x4c, 0xaf, 0x8a, 0x62, 0x66, 0x48, 0x49, 0x4e, 0x2c, 0xc7, 0x45, 0x6f, 0xec, 0x39, 0xdf,
	0x9c, 0xf3, 0xcd, 0xf9, 0x9b, 0x33, 0x14, 0xfc, 0xcb, 0x99, 0xb0, 0x88, 0x44, 0xa1, 0xef, 0xd6,
	0xf0, 0x05, 0xab, 0x31, 0x1c, 0xe0, 0x10, 0xb3, 0xe4, 0xb2, 0x16, 0x47, 0xd4, 0x67, 0x7e, 0x44,
	0xaa, 0x71, 0x12, 0xb1, 0x08, 0x3d, 0x98, 0xea, 0x55, 0xf1, 0x05, 0xab, 0x4e, 0xf5, 0x36, 0x17,
	0x12, 0x78, 0x97, 0xc4, 0x09, 0x7d, 0x97, 0x4a, 0x82, 0xcd, 0xfd, 0x45, 0x7a, 0x98, 0x4c, 0x42,
	0x9c, 0x38, 0xfc, 0x2c, 0x5a, 0xf3, 0xc9, 0x10, 0x27, 0x09, 0xf6, 0xec, 0x73, 0x6a, 0x3b, 0x2e,
	0x9b, 0x38, 0x41, 0x6a, 0xfe, 0xec, 0x56, 0xe6, 0xd1, 0x70, 0x18, 0x11, 0x9b, 0x32, 0x87, 0x4d,
	0xb2, 0x73, 0x1f, 0x8d, 0xa2, 0x68, 0x14, 0xe0, 0x9a, 0x90, 0xce, 0x26, 0xc3, 0x1a, 0xf3, 0x43,
	0x4c, 0x99, 0x13, 0xc6, 0x52, 0xa1, 0xd2, 0x83, 0x7c, 0x3f, 0xf2, 0x09, 0x43, 0x9b, 0x50, 0x08,
	0x1c, 0xe6, 0xb3, 0x89, 0x87, 0xcb, 0xca, 0xb6, 0xb2, 0xa3, 0x98, 0x53, 0x19, 0xfd, 0x1d, 0x56,
	0x83, 0x88, 0x8c, 0xe4, 0xa6, 0x2a, 0x36, 0x67, 0x00, 0xba, 0x0b, 0x4a, 0x52, 0xce, 0x09, 0x54,
	0x49, 0x2a, 0x3f, 0x28, 0x50, 0x1c, 0x8c, 0x13, 0x8c, 0x8d, 0x3f, 0xcb, 0xbb, 0x09, 0x05, 0x27,
	0x48, 0x2d, 0x25, 0xfd, 0x54, 0x46, 0x25, 0x50, 0x93, 0xa7, 0xe5, 0xbc, 0x40, 0xd5, 0xe4, 0xa9,
	0x90, 0xeb, 0xe5, 0xe5, 0x54, 0xae, 0x0b, 0x79, 0xaf, 0x0c, 0xa9, 0xbc, 0xc7, 0x7d, 0x74, 0xca,
	0x2b, 0xd2, 0x47, 0x07, 0x6d, 0x01, 0xb8, 0x11, 0x19, 0xfa, 0x1e, 0x26, 0x2e, 0x2e, 0x17, 0xb6,
	0x95, 0x1d, 0xd5, 0x9c, 0x43, 0x2a, 0xdf, 0x2a, 0x50, 0xe8, 0x44, 0xae, 0x48, 0x2b, 0xfa, 0x3f,
	0xe4, 0x63, 0x1e, 0x89, 0xf0, 0xbe, 0x58, 0xdf, 0xaa, 0x2e, 0xe8, 0x85, 0xaa, 0x88, 0xf7, 0xe8,
	0x8e, 0x29, 0xd5, 0xd1, 0x0b, 0x58, 0x63, 0x3c, 0x0f, 0xb6, 0x67, 0x4b, 0x7b, 0x55, 0xd8, 0xff,
	0x73, 0xa1, 0xfd, 0x5c, 0xd6, 0x8e, 0xee, 0x98, 0x45, 0x36, 0x13, 0x1b, 0x00, 0x85, 0x20, 0xf5,
	0xa7, 0xf2, 0x8b, 0x0a, 0xa8, 0x45, 0x28, 0xb5, 0x1c, 0x86, 0x83, 0xc0, 0x67, 0xd8, 0x62, 0x0e,
	0xc3, 0x08, 0xc1, 0x12, 0x3d, 0xf7, 0x3d, 0xe1, 0x65, 0xde, 0x14, 0x6b, 0x9e, 0x5f, 0x1c, 0xe0,
	0x73, 0x61, 0x27, 0x8e, 0x57, 0xcd, 0x19, 0x80, 0xca, 0xb0, 0xe2, 0xbc, 0xf1, 0xc3, 0x09, 0x1b,
	0x8b, 0xf4, 0xaa, 0x66, 0x26, 0xa2, 0x4d, 0x58, 0x75, 0xc9, 0xae, 0xed, 0x9d, 0xd9, 0xe3, 0x37,
	0xe5, 0x25, 0xb9, 0xe7, 0x92, 0x5d, 0xe3, 0xec, 0xe8, 0x0d, 0xfa, 0x02, 0x90, 0x1b, 0x11, 0xca,
	0xcf, 0x16, 0x34, 0x36, 0xbb, 0x8c, 0xb1, 0xa8, 0x44, 0xa9, 0x5e, 0x5d, 0x18, 0x1b, 0x77, 0xf8,
	0x60, 0xde, 0x6c, 0x70, 0x19, 0x63, 0xf3, 0x9e, 0xfb, 0x36, 0x84, 0xb6, 0xa0, 0x38, 0xa1, 0xd8,
	0xb3, 0x7d, 0x62, 0x0f, 0xfd, 0x0b, 0x51, 0xd1, 0x82, 0xb9, 0xca, 0xa1, 0x36, 0x39, 0xf4, 0x2f,
	0xd0, 0x0e, 0x68, 0x63, 0x87, 0xda, 0x4e, 0x10, 0x3a, 0xc4, 0x71, 0x6d, 0xcf, 0x61, 0xb2, 0xae,
	0x05, 0xb3, 0x34, 0x76, 0xa8, 0x2e, 0x61, 0xc3, 0x61, 0x0e, 0xfa, 0x0f, 0x20, 0xae, 0x89, 0xe3,
	0x31, 0x0e, 0x71, 0xe2, 0x53, 0xa9, 0x5b, 0x10, 0xba, 0x9c, 0xa3, 0x99, 0x6d, 0x70, 0xed, 0x8a,
	0x0d, 0x1a, 0xf7, 0xb1, 0x49, 0x46, 0x3e, 0x11, 0x19, 0x9d, 0x50, 0xf4, 0x12, 0x80, 0x66, 0x49,
	0xa6, 0x65, 0x65, 0x3b, 0xb7, 0x53, 0xac, 0xff, 0xfb, 0xc6, 0x10, 0xaf, 0xd6, 0xc4, 0x9c, 0x33,
	0xaf, 0xf8, 0xf0, 0x80, 0x6b, 0x18, 0x7e, 0x30, 0xe1, 0xc1, 0xf6, 0x86, 0xfd, 0x04, 0xbb, 0x3e,
	0xe5, 0x85, 0x40, 0xb0, 0x14, 0x7b, 0x51, 0x2c, 0x4a, 0xb7, 0x66, 0x8a, 0x35, 0xc7, 0xc6, 0x1c,
	0x53, 0x25, 0x36, 0x4e, 0xb1, 0x73, 0x8e, 0xe5, 0x24, 0x76, 0x9e, 0x62, 0x23, 0x8e, 0xc9, 0x2a,
	0x89, 0x75, 0xe5, 0xe7, 0x1c, 0xac, 0x0a, 0x6f, 0x44, 0x63, 0x0c, 0x60, 0x6d, 0x44, 0x28, 0xb5,
	0xbd, 0x28, 0x96, 0x29, 0x90, 0x7d, 0xbc, 0x7b, 0x63, 0x20, 0xd7, 0xb8, 0x69, 0x16, 0x39, 0x8d,
	0x11, 0xc5, 0x22, 0xbb, 0x16, 0xfc, 0x45, 0xb0, 0xf2, 0x69, 0x83, 0x25, 0x6f, 0x4e, 0xf0, 0xfe,
	0xa1, 0x04, 0x09, 0xcf, 0xc4, 0x52, 0x90, 0x7e, 0x05, 0x1b, 0xa3, 0x98, 0xda, 0x6e, 0x14, 0x25,
	0x9e, 0x4f, 0x38, 0x71, 0x88, 0xd9, 0x38, 0xf2, 0x44, 0x74, 0xa5, 0x7a, 0x6b, 0x21, 0xf5, 0xfc,
	0x18, 0xac, 0x66, 0x53, 0xf4, 0x13, 0xaa, 0xcb, 0x19, 0xda, 0x7e, 0x0b, 0x30, 0xef, 0x8f, 0x62,
	0x7a, 0x30, 0x3d, 0xe4, 0x58, 0x9c, 0x81, 0x5e, 0xc3, 0x2a, 0x3f, 0x7c, 0xe8, 0x4c, 0x02, 0x96,
	0xf6, 0xf3, 0xfe, 0xed, 0x0e, 0x8c, 0x86, 0xc3, 0x1e, 0x91, 0x3d, 0x53, 0xed, 0xcd, 0xd6, 0x0d,
	0xb5, 0xac, 0x98, 0x85, 0x51, 0x4c, 0x0f, 0x39, 0x25, 0x7a, 0x26, 0xf9, 0xdd, 0x20, 0x72, 0xbf,
	0x14, 0x7d, 0x5d, 0xac, 0x6f, 0x56, 0xe5, 0x78, 0xae, 0x66, 0xe3, 0xb9, 0x3a, 0xc8, 0xc6, 0xb3,
	0x30, 0x3c, 0xe0, 0xba, 0x95, 0xef, 0x55, 0x58, 0x39, 0xc2, 0x8e, 0xe7, 0x93, 0x11, 0xbf, 0xb3,
	0x63, 0xb9, 0x14, 0x65, 0x54, 0xcd, 0x4c, 0x44, 0xdb, 0x50, 0x9c, 0x10, 0x17, 0x27, 0xcc, 0xf1,
	0x09, 0xbb, 0x4c, 0x6f, 0xfb, 0x3c, 0x84, 0x3e, 0x87, 0x92, 0x87, 0x19, 0x76, 0x67, 0xb7, 0x36,
	0x27, 0xa2, 0xfc, 0xdf, 0xc2, 0x28, 0xd3, 0x53, 0xb3, 0xff, 0x46, 0x66, 0x2d, 0x2e, 0xef, 0x9a,
	0x37, 0x2f, 0x56, 0xbe, 0x51, 0x60, 0xfd, 0x3a, 0x3d, 0x54, 0x84, 0x95, 0x93, 0xee, 0xcb, 0x6e,
	0xef, 0xb4, 0xab, 0xdd, 0x41, 0xeb, 0xa0, 0x1d, 0x35, 0x75, 0xa3, 0xdd, 0x6d, 0xd9, 0xa6, 0x7e,
	0x6a, 0xb7, 0xba, 0x96, 0xa5, 0x29, 0xe8, 0x21, 0x3c, 0xc8, 0xd0, 0x63, 0xbd, 0xd5, 0x6d, 0x0e,
	0xda, 0x07, 0xb6, 0xd5, 0xec, 0x5a, 0x3d, 0x53, 0x53, 0xd1, 0x23, 0x78, 0x38, 0xdd, 0x3c, 0xe9,
	0x0c, 0xda, 0xe9, 0x8e, 0x7d, 0x78, 0x62, 0xb5, 0x7b, 0x5d, 0x2d, 0x87, 0x10, 0x94, 0x32, 0x85,
	0xc6, 0x67, 0xf6, 0xb1, 0xde, 0xd7, 0x96, 0x2a, 0xbf, 0x29, 0x90, 0xb7, 0x62, 0x8c, 0x3d, 0xb4,
	0x0e, 0x79, 0xca, 0x17, 0x69, 0xbe, 0xa4, 0x70, 0x8b, 0x6c, 0x7d, 0xba, 0x20, 0x5b, 0x4f, 0x17,
	0x66, 0x4b, 0x9c, 0x27, 0xff, 0xde, 0x98, 0x29, 0x17, 0xd0, 0xbb, 0x4a, 0x57, 0xd3, 0x84, 0xa0,
	0x64, 0xf5, 0x9b, 0x4d, 0x63, 0x3e, 0x49, 0x1b, 0x70, 0x4f, 0x62, 0xa7, 0x47, 0xcd, 0x66, 0xc7,
	0x1e, 0xb4, 0x0f, 0x5e, 0x5a, 0x9a, 0x3a, 0x83, 0x4d, 0xdd, 0xd0, 0x4d, 0xdb, 0xea, 0x75, 0x75,
	0x53, 0xcb, 0x55, 0x7e, 0xca, 0x43, 0xa1, 0x9f, 0x7e, 0xc4, 0xa0, 0xfd, 0xd9, 0xf3, 0x91, 0x8e,
	0xb1, 0x7f, 0x2c, 0x8c, 0x22, 0x7b, 0xf7, 0xcc, 0xa9, 0x09, 0xfa, 0x70, 0xd6, 0x74, 0xaa, 0xb0,
	0xde, 0x7e, 0x5f, 0xc7, 0x88, 0xd6, 0x9f, 0xb6, 0xe6, 0xf3, 0xac, 0x04, 0x39, 0x61, 0xbd, 0x75,
	0x73, 0x06, 0x85, 0x6d, 0x5a, 0xa6, 0x8f, 0x60, 0x55, 0xce, 0x2e, 0x3e, 0x5f, 0x96, 0xc4, 0x9d,
	0xa9, 0xdc, 0x3c, 0x5f, 0xc4, 0x58, 0x29, 0x88, 0x49, 0xc5, 0x27, 0xca, 0x21, 0x14, 0xa3, 0xc4,
	0xc7, 0x84, 0xc9, 0xe0, 0xf3, 0xef, 0x79, 0x82, 0x7b, 0x33, 0x5d, 0x73, 0xde, 0x10, 0xbd, 0x86,
	0xfb, 0x73, 0xa2, 0x4d, 0x31, 0xa1, 0x51, 0x42, 0xcb, 0xcb, 0x22, 0xa0, 0x27, 0x37, 0x3f, 0xe9,
	0xfa, 0x85, 0x4f, 0x2d, 0x61, 0x20, 0xbd, 0x43, 0x73, 0x4c, 0x12, 0xa7, 0xc8, 0x84, 0xbb, 0xa3,
	0x98, 0x1a, 0x7e, 0x88, 0x09, 0x9f, 0xb5, 0xe2, 0x49, 0xbb, 0xe9, 0x3d, 0xcd, 0x4a, 0x5b, 0x6d,
	0xcd, 0x59, 0x99, 0x57, 0x38, 0x50, 0x4b, 0x0e, 0x1c, 0xcf, 0x61, 0x93, 0x50, 0xbc, 0x7b, 0xa5,
	0xfa, 0xe3, 0xdb, 0x11, 0x72, 0x0b, 0x31, 0x80, 0xc4, 0xaa, 0xb2, 0x0f, 0x77, 0xe7, 0x8f, 0xb9,
	0xda, 0xaa, 0x05, 0x58, 0xea, 0xf6, 0xba, 0x4d, 0x4d, 0x41, 0x00, 0xcb, 0x46, 0xfb, 0xd8, 0xae,
	0x1b, 0x9a, 0x9a, 0xad, 0xf7, 0x0c, 0x2d, 0x57, 0xd1, 0xa1, 0x90, 0x91, 0xf2, 0x6e, 0x6d, 0xf5,
	0x2d, 0xdb, 0xd0, 0x07, 0x27, 0xc7, 0xf6, 0x8c, 0x64, 0x15, 0xf2, 0xa7, 0x2d, 0xeb, 0xf9, 0x7f,
	0x35, 0x85, 0xf3, 0x35, 0x8c, 0xdd, 0x0f, 0x34, 0x95, 0x83, 0xad, 0x83, 0x17, 0xbb, 0x75, 0x2d,
	0xf7, 0xf8, 0x47, 0x05, 0x36, 0xae, 0xfd, 0x84, 0x40, 0x7f, 0x83, 0x8d, 0x83, 0x5e, 0xd7, 0x1a,
	0x34, 0x3b, 0x1d, 0x7d, 0xd0, 0xee, 0x75, 0xe7, 0x48, 0x37, 0xe0, 0xde, 0xd5, 0xad, 0x56, 0x9f,
	0xdf, 0xa3, 0xbf, 0x02, 0xba, 0x0a, 0x5b, 0x0d, 0x9d, 0x5f, 0xa4, 0x77, 0x98, 0x5a, 0x9d, 0x5e,
	0x57, 0xb7, 0x2c, 0x2d, 0xf7, 0xae, 0xc9, 0xc7, 0xaf, 0x2c, 0x4b, 0x5b, 0x42, 0x65, 0x58, 0xbf,
	0x8a, 0x37, 0x9a, 0x6d, 0xa3, 0x77, 0xa2, 0xe5, 0xaf, 0x21, 0xd3, 0x3b, 0xed, 0x4e, 0xb3, 0xa7,
	0x2d, 0x37, 0xbe, 0x56, 0xe0, 0xa1, 0x1b, 0x85, 0x8b, 0x2a, 0xd1, 0x58, 0xcb, 0x4a, 0xd1, 0xe7,
	0x8f, 0x42, 0x5f, 0x79, 0xd5, 0x1d, 0xf9, 0x6c, 0x3c, 0x39, 0xab, 0xba, 0x51, 0x58, 0x9b, 0x1a,
	0x3d, 0x71, 0x7c, 0xfe, 0x53, 0x00, 0x27, 0xc4, 0x09, 0x9e, 0x88, 0xe7, 0x83, 0xd6, 0x68, 0xe2,
	0xd6, 0x42, 0xc7, 0x27, 0xf2, 0x6b, 0xbf, 0xb6, 0xe0, 0x37, 0xc3, 0xaf, 0x8a, 0xf2, 0x9d, 0x9a,
	0xd3, 0x4f, 0x06, 0x67, 0xcb, 0x42, 0x6f, 0xef, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x2d,
	0x1a, 0x00, 0x06, 0x0d, 0x00, 0x00,
}
