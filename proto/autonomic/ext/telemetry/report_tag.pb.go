/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/telemetry/report_tag.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WellKnownReportType int32

const (
	WellKnownReportType_UNKNOWN_REPORT_TYPE WellKnownReportType = 0
	WellKnownReportType_ANTI_THEFT          WellKnownReportType = 1
	WellKnownReportType_VEHICLE_HEALTH      WellKnownReportType = 2
)

var WellKnownReportType_name = map[int32]string{
	0: "UNKNOWN_REPORT_TYPE",
	1: "ANTI_THEFT",
	2: "VEHICLE_HEALTH",
}

var WellKnownReportType_value = map[string]int32{
	"UNKNOWN_REPORT_TYPE": 0,
	"ANTI_THEFT":          1,
	"VEHICLE_HEALTH":      2,
}

func (x WellKnownReportType) String() string {
	return proto.EnumName(WellKnownReportType_name, int32(x))
}

func (WellKnownReportType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_51a8200b6fa0986c, []int{0}
}

type WellKnownReportTag int32

const (
	WellKnownReportTag_UNKNOWN_REPORT_TAG WellKnownReportTag = 0
	WellKnownReportTag_REPORT_TYPE        WellKnownReportTag = 1
)

var WellKnownReportTag_name = map[int32]string{
	0: "UNKNOWN_REPORT_TAG",
	1: "REPORT_TYPE",
}

var WellKnownReportTag_value = map[string]int32{
	"UNKNOWN_REPORT_TAG": 0,
	"REPORT_TYPE":        1,
}

func (x WellKnownReportTag) String() string {
	return proto.EnumName(WellKnownReportTag_name, int32(x))
}

func (WellKnownReportTag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_51a8200b6fa0986c, []int{1}
}

type ReportTagKey struct {
	WellKnownReportTag   WellKnownReportTag `protobuf:"varint,1,opt,name=well_known_report_tag,json=wellKnownReportTag,proto3,enum=autonomic.ext.telemetry.WellKnownReportTag" json:"well_known_report_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReportTagKey) Reset()         { *m = ReportTagKey{} }
func (m *ReportTagKey) String() string { return proto.CompactTextString(m) }
func (*ReportTagKey) ProtoMessage()    {}
func (*ReportTagKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a8200b6fa0986c, []int{0}
}

func (m *ReportTagKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTagKey.Unmarshal(m, b)
}
func (m *ReportTagKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTagKey.Marshal(b, m, deterministic)
}
func (m *ReportTagKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTagKey.Merge(m, src)
}
func (m *ReportTagKey) XXX_Size() int {
	return xxx_messageInfo_ReportTagKey.Size(m)
}
func (m *ReportTagKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTagKey.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTagKey proto.InternalMessageInfo

func (m *ReportTagKey) GetWellKnownReportTag() WellKnownReportTag {
	if m != nil {
		return m.WellKnownReportTag
	}
	return WellKnownReportTag_UNKNOWN_REPORT_TAG
}

type ReportTagValue struct {
	WellKnownReportType  WellKnownReportType `protobuf:"varint,1,opt,name=well_known_report_type,json=wellKnownReportType,proto3,enum=autonomic.ext.telemetry.WellKnownReportType" json:"well_known_report_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReportTagValue) Reset()         { *m = ReportTagValue{} }
func (m *ReportTagValue) String() string { return proto.CompactTextString(m) }
func (*ReportTagValue) ProtoMessage()    {}
func (*ReportTagValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a8200b6fa0986c, []int{1}
}

func (m *ReportTagValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTagValue.Unmarshal(m, b)
}
func (m *ReportTagValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTagValue.Marshal(b, m, deterministic)
}
func (m *ReportTagValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTagValue.Merge(m, src)
}
func (m *ReportTagValue) XXX_Size() int {
	return xxx_messageInfo_ReportTagValue.Size(m)
}
func (m *ReportTagValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTagValue.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTagValue proto.InternalMessageInfo

func (m *ReportTagValue) GetWellKnownReportType() WellKnownReportType {
	if m != nil {
		return m.WellKnownReportType
	}
	return WellKnownReportType_UNKNOWN_REPORT_TYPE
}

type ReportTag struct {
	TagKey               *ReportTagKey   `protobuf:"bytes,1,opt,name=tag_key,json=tagKey,proto3" json:"tag_key,omitempty"`
	TagValue             *ReportTagValue `protobuf:"bytes,2,opt,name=tag_value,json=tagValue,proto3" json:"tag_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReportTag) Reset()         { *m = ReportTag{} }
func (m *ReportTag) String() string { return proto.CompactTextString(m) }
func (*ReportTag) ProtoMessage()    {}
func (*ReportTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a8200b6fa0986c, []int{2}
}

func (m *ReportTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTag.Unmarshal(m, b)
}
func (m *ReportTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTag.Marshal(b, m, deterministic)
}
func (m *ReportTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTag.Merge(m, src)
}
func (m *ReportTag) XXX_Size() int {
	return xxx_messageInfo_ReportTag.Size(m)
}
func (m *ReportTag) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTag.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTag proto.InternalMessageInfo

func (m *ReportTag) GetTagKey() *ReportTagKey {
	if m != nil {
		return m.TagKey
	}
	return nil
}

func (m *ReportTag) GetTagValue() *ReportTagValue {
	if m != nil {
		return m.TagValue
	}
	return nil
}

func init() {
	proto.RegisterEnum("autonomic.ext.telemetry.WellKnownReportType", WellKnownReportType_name, WellKnownReportType_value)
	proto.RegisterEnum("autonomic.ext.telemetry.WellKnownReportTag", WellKnownReportTag_name, WellKnownReportTag_value)
	proto.RegisterType((*ReportTagKey)(nil), "autonomic.ext.telemetry.ReportTagKey")
	proto.RegisterType((*ReportTagValue)(nil), "autonomic.ext.telemetry.ReportTagValue")
	proto.RegisterType((*ReportTag)(nil), "autonomic.ext.telemetry.ReportTag")
}

func init() {
	proto.RegisterFile("autonomic/ext/telemetry/report_tag.proto", fileDescriptor_51a8200b6fa0986c)
}

var fileDescriptor_51a8200b6fa0986c = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0x86, 0x77, 0x2a, 0xac, 0xee, 0x59, 0x89, 0x61, 0x8a, 0xbb, 0x0b, 0xde, 0x48, 0x41, 0x5c,
	0x56, 0x9b, 0x81, 0x7a, 0xad, 0x90, 0x6a, 0x34, 0xa5, 0x25, 0x0d, 0xc3, 0xb4, 0x45, 0x2f, 0x1c,
	0xa6, 0x61, 0x88, 0xa1, 0x49, 0x26, 0xa4, 0x53, 0xd3, 0xbc, 0x81, 0xb7, 0xbe, 0x82, 0x4f, 0xe9,
	0xa5, 0x24, 0x96, 0xb4, 0xd8, 0x06, 0xf7, 0x6e, 0x66, 0xf8, 0xcf, 0xff, 0xcd, 0x39, 0xe7, 0x87,
	0x5b, 0xb1, 0xd1, 0x2a, 0x55, 0x49, 0x14, 0x10, 0xb9, 0xd5, 0x44, 0xcb, 0x58, 0x26, 0x52, 0xe7,
	0x25, 0xc9, 0x65, 0xa6, 0x72, 0xcd, 0xb5, 0x08, 0xad, 0x2c, 0x57, 0x5a, 0xe1, 0xeb, 0x46, 0x69,
	0xc9, 0xad, 0xb6, 0x1a, 0x65, 0x2f, 0x85, 0xc7, 0xb4, 0x16, 0x33, 0x11, 0x8e, 0x65, 0x89, 0xbf,
	0xc2, 0xd3, 0x42, 0xc6, 0x31, 0x5f, 0xa5, 0xaa, 0x48, 0xf9, 0xde, 0xe7, 0x06, 0x3d, 0x47, 0xb7,
	0xc6, 0xe0, 0x95, 0xd5, 0x62, 0x64, 0x2d, 0x64, 0x1c, 0x8f, 0xab, 0xa2, 0xc6, 0x8e, 0xe2, 0xe2,
	0xe8, 0xad, 0xb7, 0x06, 0xa3, 0xb9, 0xcc, 0x45, 0xbc, 0x91, 0x58, 0xc0, 0xd5, 0x09, 0x62, 0x99,
	0xc9, 0x1d, 0xf2, 0xf5, 0xbd, 0x91, 0x65, 0x26, 0x69, 0xb7, 0x38, 0x7e, 0xec, 0xfd, 0x44, 0x70,
	0xd1, 0x50, 0xf1, 0x3b, 0x78, 0xa8, 0x45, 0xc8, 0x57, 0xb2, 0xac, 0x09, 0x97, 0x83, 0x17, 0xad,
	0x84, 0xc3, 0xd1, 0xd0, 0x73, 0xfd, 0x77, 0x44, 0x1f, 0xe0, 0xa2, 0xaa, 0xff, 0x5e, 0xfd, 0xfe,
	0xa6, 0x53, 0x3b, 0xbc, 0xfc, 0xbf, 0x43, 0xdd, 0x2c, 0x7d, 0xa4, 0x77, 0xa7, 0x3b, 0x0a, 0xdd,
	0x13, 0xff, 0xc7, 0xd7, 0xd0, 0x9d, 0x79, 0x63, 0x6f, 0xba, 0xf0, 0x38, 0x75, 0xfc, 0x29, 0x65,
	0x9c, 0x7d, 0xf6, 0x1d, 0xf3, 0x0c, 0x1b, 0x00, 0xb6, 0xc7, 0x46, 0x9c, 0xb9, 0xce, 0x47, 0x66,
	0x22, 0x8c, 0xc1, 0x98, 0x3b, 0xee, 0xe8, 0xfd, 0xc4, 0xe1, 0xae, 0x63, 0x4f, 0x98, 0x6b, 0x76,
	0xee, 0xde, 0x02, 0x3e, 0x5e, 0x03, 0xbe, 0x02, 0xfc, 0xaf, 0xa5, 0xfd, 0xc9, 0x3c, 0xc3, 0x4f,
	0xe0, 0xf2, 0x10, 0x81, 0x86, 0x3f, 0x10, 0x3c, 0x0b, 0x54, 0xd2, 0xd6, 0xcb, 0x70, 0xbf, 0x39,
	0xbf, 0x0a, 0x95, 0x8f, 0xbe, 0x78, 0x61, 0xa4, 0xbf, 0x6d, 0x96, 0x56, 0xa0, 0x12, 0xd2, 0x54,
	0xf5, 0x45, 0x54, 0xc5, 0x51, 0xe6, 0xa9, 0x88, 0xfb, 0x75, 0xfc, 0xd6, 0x64, 0x9d, 0x07, 0x24,
	0x11, 0x51, 0x4a, 0xea, 0x3b, 0x69, 0xc9, 0xed, 0x6f, 0x84, 0x7e, 0x75, 0x1e, 0xd8, 0x33, 0xb6,
	0x3c, 0xaf, 0x75, 0x6f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x87, 0x37, 0xb8, 0xe2, 0x02,
	0x00, 0x00,
}
