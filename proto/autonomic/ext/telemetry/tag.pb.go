/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/telemetry/tag.proto

package telemetry

import (
	fmt "fmt"
	enumerations "xk6-fabric/proto/autonomic/ext/telemetry/enumerations"
	//enumerations "xk6-fabric/proto/autonomic/ext/telemetry/enumerations"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TagName struct {
	// Types that are valid to be assigned to TagName:
	//	*TagName_WktName
	//	*TagName_StringName
	TagName              isTagName_TagName `protobuf_oneof:"tag_name"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TagName) Reset()         { *m = TagName{} }
func (m *TagName) String() string { return proto.CompactTextString(m) }
func (*TagName) ProtoMessage()    {}
func (*TagName) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f03e0154a4ac73, []int{0}
}

func (m *TagName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagName.Unmarshal(m, b)
}
func (m *TagName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagName.Marshal(b, m, deterministic)
}
func (m *TagName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagName.Merge(m, src)
}
func (m *TagName) XXX_Size() int {
	return xxx_messageInfo_TagName.Size(m)
}
func (m *TagName) XXX_DiscardUnknown() {
	xxx_messageInfo_TagName.DiscardUnknown(m)
}

var xxx_messageInfo_TagName proto.InternalMessageInfo

type isTagName_TagName interface {
	isTagName_TagName()
}

type TagName_WktName struct {
	WktName WellKnownTag `protobuf:"varint,1,opt,name=wkt_name,json=wktName,proto3,enum=autonomic.ext.telemetry.tag.WellKnownTag,oneof"`
}

type TagName_StringName struct {
	StringName string `protobuf:"bytes,2,opt,name=string_name,json=stringName,proto3,oneof"`
}

func (*TagName_WktName) isTagName_TagName() {}

func (*TagName_StringName) isTagName_TagName() {}

func (m *TagName) GetTagName() isTagName_TagName {
	if m != nil {
		return m.TagName
	}
	return nil
}

func (m *TagName) GetWktName() WellKnownTag {
	if x, ok := m.GetTagName().(*TagName_WktName); ok {
		return x.WktName
	}
	return WellKnownTag_UNKNOWN_TAG
}

func (m *TagName) GetStringName() string {
	if x, ok := m.GetTagName().(*TagName_StringName); ok {
		return x.StringName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TagName) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TagName_WktName)(nil),
		(*TagName_StringName)(nil),
	}
}

type TagValue struct {
	// Types that are valid to be assigned to TagValue:
	//	*TagValue_StringValue
	//	*TagValue_BoolValue
	//	*TagValue_IntegerValue
	//	*TagValue_DoubleValue
	//	*TagValue_TimestampValue
	//	*TagValue_DoorTagValue
	//	*TagValue_WindowTagValue
	//	*TagValue_WheelTagValue
	//	*TagValue_SeatTagValue
	//	*TagValue_GearTagValue
	//	*TagValue_BatteryTagValue
	//	*TagValue_IndicatorLightTag
	//	*TagValue_IndicatorLightState
	//	*TagValue_DeviceAuthStatus
	//	*TagValue_WheelPlacardValue
	//	*TagValue_OccupantRoleValue
	//	*TagValue_TractionControlBrakeStatusTagValue
	//	*TagValue_TractionControlPowertrainTagValue
	//	*TagValue_RegenerationOperationActivation
	//	*TagValue_LocationTypeValue
	//	*TagValue_EngineType
	//	*TagValue_ShutdownReason
	//	*TagValue_DieselExhaustFilterSystemComponent
	//	*TagValue_DieselExhaustFilterCleaning
	//	*TagValue_AntennaTypeValue
	//	*TagValue_ParkingBrakeType
	//	*TagValue_MonitorCoverageTagValue
	//	*TagValue_HandsOffWheelWarningTypeValue
	//	*TagValue_AntiTheftAlarmSource
	//	*TagValue_SampleRate
	//	*TagValue_BatteryLoadFaultTagValue
	//	*TagValue_BatteryPerformanceCauseTagValue
	//	*TagValue_VehicleSideValue
	//	*TagValue_TripProgressValue
	//	*TagValue_XevChargerPowerTypeValue
	//	*TagValue_XevBatteryTypeValue
	//	*TagValue_XevChargeStatusOriginValue
	//	*TagValue_XevVehicleConditioningTypeValue
	TagValue             isTagValue_TagValue `protobuf_oneof:"tag_value"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TagValue) Reset()         { *m = TagValue{} }
func (m *TagValue) String() string { return proto.CompactTextString(m) }
func (*TagValue) ProtoMessage()    {}
func (*TagValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f03e0154a4ac73, []int{1}
}

func (m *TagValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagValue.Unmarshal(m, b)
}
func (m *TagValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagValue.Marshal(b, m, deterministic)
}
func (m *TagValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagValue.Merge(m, src)
}
func (m *TagValue) XXX_Size() int {
	return xxx_messageInfo_TagValue.Size(m)
}
func (m *TagValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TagValue.DiscardUnknown(m)
}

var xxx_messageInfo_TagValue proto.InternalMessageInfo

type isTagValue_TagValue interface {
	isTagValue_TagValue()
}

type TagValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type TagValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type TagValue_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,3,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type TagValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type TagValue_TimestampValue struct {
	TimestampValue *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

type TagValue_DoorTagValue struct {
	DoorTagValue VehicleDoors_DoorTag `protobuf:"varint,6,opt,name=door_tag_value,json=doorTagValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleDoors_DoorTag,oneof"`
}

type TagValue_WindowTagValue struct {
	WindowTagValue VehicleWindows_WindowTag `protobuf:"varint,7,opt,name=window_tag_value,json=windowTagValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleWindows_WindowTag,oneof"`
}

type TagValue_WheelTagValue struct {
	WheelTagValue VehicleWheels_WheelTag `protobuf:"varint,8,opt,name=wheel_tag_value,json=wheelTagValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleWheels_WheelTag,oneof"`
}

type TagValue_SeatTagValue struct {
	SeatTagValue VehicleSeats_SeatTag `protobuf:"varint,9,opt,name=seat_tag_value,json=seatTagValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleSeats_SeatTag,oneof"`
}

type TagValue_GearTagValue struct {
	GearTagValue VehicleGears_GearTag `protobuf:"varint,10,opt,name=gear_tag_value,json=gearTagValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleGears_GearTag,oneof"`
}

type TagValue_BatteryTagValue struct {
	BatteryTagValue VehicleBatteries_BatteryTag `protobuf:"varint,11,opt,name=battery_tag_value,json=batteryTagValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleBatteries_BatteryTag,oneof"`
}

type TagValue_IndicatorLightTag struct {
	IndicatorLightTag VehicleIndicatorLights_IndicatorLightTag `protobuf:"varint,12,opt,name=indicator_light_tag,json=indicatorLightTag,proto3,enum=autonomic.ext.telemetry.tag.VehicleIndicatorLights_IndicatorLightTag,oneof"`
}

type TagValue_IndicatorLightState struct {
	IndicatorLightState VehicleIndicatorLights_IndicatorLightState `protobuf:"varint,13,opt,name=indicator_light_state,json=indicatorLightState,proto3,enum=autonomic.ext.telemetry.tag.VehicleIndicatorLights_IndicatorLightState,oneof"`
}

type TagValue_DeviceAuthStatus struct {
	DeviceAuthStatus DeviceAuthorizationStates_AuthorizationStatus `protobuf:"varint,14,opt,name=device_auth_status,json=deviceAuthStatus,proto3,enum=autonomic.ext.telemetry.tag.DeviceAuthorizationStates_AuthorizationStatus,oneof"`
}

type TagValue_WheelPlacardValue struct {
	WheelPlacardValue VehicleWheels_WheelPlacardTag `protobuf:"varint,15,opt,name=wheel_placard_value,json=wheelPlacardValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleWheels_WheelPlacardTag,oneof"`
}

type TagValue_OccupantRoleValue struct {
	OccupantRoleValue VehicleOccupantRole_OccupantRoleTag `protobuf:"varint,16,opt,name=occupant_role_value,json=occupantRoleValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleOccupantRole_OccupantRoleTag,oneof"`
}

type TagValue_TractionControlBrakeStatusTagValue struct {
	TractionControlBrakeStatusTagValue enumerations.OffOnStatus `protobuf:"varint,17,opt,name=traction_control_brake_status_tag_value,json=tractionControlBrakeStatusTagValue,proto3,enum=autonomic.ext.telemetry.enumerations.offOnStatus.OffOnStatus,oneof"`
}

type TagValue_TractionControlPowertrainTagValue struct {
	TractionControlPowertrainTagValue enumerations.OffOnStatus `protobuf:"varint,18,opt,name=traction_control_powertrain_tag_value,json=tractionControlPowertrainTagValue,proto3,enum=autonomic.ext.telemetry.enumerations.offOnStatus.OffOnStatus,oneof"`
}

type TagValue_RegenerationOperationActivation struct {
	RegenerationOperationActivation enumerations.OperationActivation `protobuf:"varint,19,opt,name=regeneration_operation_activation,json=regenerationOperationActivation,proto3,enum=autonomic.ext.telemetry.enumerations.operationActivation.OperationActivation,oneof"`
}

type TagValue_LocationTypeValue struct {
	LocationTypeValue AssetLocation_LocationType `protobuf:"varint,20,opt,name=location_type_value,json=locationTypeValue,proto3,enum=autonomic.ext.telemetry.tag.AssetLocation_LocationType,oneof"`
}

type TagValue_EngineType struct {
	EngineType EngineType_EngineTag `protobuf:"varint,21,opt,name=engine_type,json=engineType,proto3,enum=autonomic.ext.telemetry.tag.EngineType_EngineTag,oneof"`
}

type TagValue_ShutdownReason struct {
	ShutdownReason EngineAutomaticStopReason_ReasonTag `protobuf:"varint,22,opt,name=shutdown_reason,json=shutdownReason,proto3,enum=autonomic.ext.telemetry.tag.EngineAutomaticStopReason_ReasonTag,oneof"`
}

type TagValue_DieselExhaustFilterSystemComponent struct {
	DieselExhaustFilterSystemComponent DieselExhaustFilterSystemComponent_ComponentTag `protobuf:"varint,23,opt,name=diesel_exhaust_filter_system_component,json=dieselExhaustFilterSystemComponent,proto3,enum=autonomic.ext.telemetry.tag.DieselExhaustFilterSystemComponent_ComponentTag,oneof"`
}

type TagValue_DieselExhaustFilterCleaning struct {
	DieselExhaustFilterCleaning DieselExhaustFilterCleaning_CleaningTag `protobuf:"varint,24,opt,name=diesel_exhaust_filter_cleaning,json=dieselExhaustFilterCleaning,proto3,enum=autonomic.ext.telemetry.tag.DieselExhaustFilterCleaning_CleaningTag,oneof"`
}

type TagValue_AntennaTypeValue struct {
	AntennaTypeValue AntennaType_AntennaTag `protobuf:"varint,25,opt,name=antenna_type_value,json=antennaTypeValue,proto3,enum=autonomic.ext.telemetry.tag.AntennaType_AntennaTag,oneof"`
}

type TagValue_ParkingBrakeType struct {
	ParkingBrakeType VehicleBrakes_ParkingBrakeTypeTag `protobuf:"varint,26,opt,name=parking_brake_type,json=parkingBrakeType,proto3,enum=autonomic.ext.telemetry.tag.VehicleBrakes_ParkingBrakeTypeTag,oneof"`
}

type TagValue_MonitorCoverageTagValue struct {
	MonitorCoverageTagValue MonitorCoverage_MonitorCoverageTag `protobuf:"varint,27,opt,name=monitor_coverage_tag_value,json=monitorCoverageTagValue,proto3,enum=autonomic.ext.telemetry.tag.MonitorCoverage_MonitorCoverageTag,oneof"`
}

type TagValue_HandsOffWheelWarningTypeValue struct {
	HandsOffWheelWarningTypeValue enumerations.OffOnStatus `protobuf:"varint,28,opt,name=hands_off_wheel_warning_type_value,json=handsOffWheelWarningTypeValue,proto3,enum=autonomic.ext.telemetry.enumerations.offOnStatus.OffOnStatus,oneof"`
}

type TagValue_AntiTheftAlarmSource struct {
	AntiTheftAlarmSource AntiTheftAlarmSource_AntiTheftAlarmSourceTag `protobuf:"varint,29,opt,name=anti_theft_alarm_source,json=antiTheftAlarmSource,proto3,enum=autonomic.ext.telemetry.tag.AntiTheftAlarmSource_AntiTheftAlarmSourceTag,oneof"`
}

type TagValue_SampleRate struct {
	SampleRate SampleRate_SampleRateTag `protobuf:"varint,30,opt,name=sample_rate,json=sampleRate,proto3,enum=autonomic.ext.telemetry.tag.SampleRate_SampleRateTag,oneof"`
}

type TagValue_BatteryLoadFaultTagValue struct {
	BatteryLoadFaultTagValue BatteryLoadFault_BatteryLoadFaultTag `protobuf:"varint,31,opt,name=battery_load_fault_tag_value,json=batteryLoadFaultTagValue,proto3,enum=autonomic.ext.telemetry.tag.BatteryLoadFault_BatteryLoadFaultTag,oneof"`
}

type TagValue_BatteryPerformanceCauseTagValue struct {
	BatteryPerformanceCauseTagValue BatteryPerformanceCause_BatteryPerformanceCauseTag `protobuf:"varint,32,opt,name=battery_performance_cause_tag_value,json=batteryPerformanceCauseTagValue,proto3,enum=autonomic.ext.telemetry.tag.BatteryPerformanceCause_BatteryPerformanceCauseTag,oneof"`
}

type TagValue_VehicleSideValue struct {
	VehicleSideValue VehicleSide_VehicleSideTag `protobuf:"varint,33,opt,name=vehicle_side_value,json=vehicleSideValue,proto3,enum=autonomic.ext.telemetry.tag.VehicleSide_VehicleSideTag,oneof"`
}

type TagValue_TripProgressValue struct {
	TripProgressValue TripProgress_TripProgressTag `protobuf:"varint,34,opt,name=trip_progress_value,json=tripProgressValue,proto3,enum=autonomic.ext.telemetry.tag.TripProgress_TripProgressTag,oneof"`
}

type TagValue_XevChargerPowerTypeValue struct {
	XevChargerPowerTypeValue XevChargerPowerType_XevChargerPowerTypeTag `protobuf:"varint,35,opt,name=xev_charger_power_type_value,json=xevChargerPowerTypeValue,proto3,enum=autonomic.ext.telemetry.tag.XevChargerPowerType_XevChargerPowerTypeTag,oneof"`
}

type TagValue_XevBatteryTypeValue struct {
	XevBatteryTypeValue XevBatteryType_XevBatteryTypeTag `protobuf:"varint,36,opt,name=xev_battery_type_value,json=xevBatteryTypeValue,proto3,enum=autonomic.ext.telemetry.tag.XevBatteryType_XevBatteryTypeTag,oneof"`
}

type TagValue_XevChargeStatusOriginValue struct {
	XevChargeStatusOriginValue XevChargeStatusOrigin_XevChargeStatusOriginTag `protobuf:"varint,37,opt,name=xev_charge_status_origin_value,json=xevChargeStatusOriginValue,proto3,enum=autonomic.ext.telemetry.tag.XevChargeStatusOrigin_XevChargeStatusOriginTag,oneof"`
}

type TagValue_XevVehicleConditioningTypeValue struct {
	XevVehicleConditioningTypeValue XevVehicleConditioningType_XevVehicleConditioningTypeTag `protobuf:"varint,38,opt,name=xev_vehicle_conditioning_type_value,json=xevVehicleConditioningTypeValue,proto3,enum=autonomic.ext.telemetry.tag.XevVehicleConditioningType_XevVehicleConditioningTypeTag,oneof"`
}

func (*TagValue_StringValue) isTagValue_TagValue() {}

func (*TagValue_BoolValue) isTagValue_TagValue() {}

func (*TagValue_IntegerValue) isTagValue_TagValue() {}

func (*TagValue_DoubleValue) isTagValue_TagValue() {}

func (*TagValue_TimestampValue) isTagValue_TagValue() {}

func (*TagValue_DoorTagValue) isTagValue_TagValue() {}

func (*TagValue_WindowTagValue) isTagValue_TagValue() {}

func (*TagValue_WheelTagValue) isTagValue_TagValue() {}

func (*TagValue_SeatTagValue) isTagValue_TagValue() {}

func (*TagValue_GearTagValue) isTagValue_TagValue() {}

func (*TagValue_BatteryTagValue) isTagValue_TagValue() {}

func (*TagValue_IndicatorLightTag) isTagValue_TagValue() {}

func (*TagValue_IndicatorLightState) isTagValue_TagValue() {}

func (*TagValue_DeviceAuthStatus) isTagValue_TagValue() {}

func (*TagValue_WheelPlacardValue) isTagValue_TagValue() {}

func (*TagValue_OccupantRoleValue) isTagValue_TagValue() {}

func (*TagValue_TractionControlBrakeStatusTagValue) isTagValue_TagValue() {}

func (*TagValue_TractionControlPowertrainTagValue) isTagValue_TagValue() {}

func (*TagValue_RegenerationOperationActivation) isTagValue_TagValue() {}

func (*TagValue_LocationTypeValue) isTagValue_TagValue() {}

func (*TagValue_EngineType) isTagValue_TagValue() {}

func (*TagValue_ShutdownReason) isTagValue_TagValue() {}

func (*TagValue_DieselExhaustFilterSystemComponent) isTagValue_TagValue() {}

func (*TagValue_DieselExhaustFilterCleaning) isTagValue_TagValue() {}

func (*TagValue_AntennaTypeValue) isTagValue_TagValue() {}

func (*TagValue_ParkingBrakeType) isTagValue_TagValue() {}

func (*TagValue_MonitorCoverageTagValue) isTagValue_TagValue() {}

func (*TagValue_HandsOffWheelWarningTypeValue) isTagValue_TagValue() {}

func (*TagValue_AntiTheftAlarmSource) isTagValue_TagValue() {}

func (*TagValue_SampleRate) isTagValue_TagValue() {}

func (*TagValue_BatteryLoadFaultTagValue) isTagValue_TagValue() {}

func (*TagValue_BatteryPerformanceCauseTagValue) isTagValue_TagValue() {}

func (*TagValue_VehicleSideValue) isTagValue_TagValue() {}

func (*TagValue_TripProgressValue) isTagValue_TagValue() {}

func (*TagValue_XevChargerPowerTypeValue) isTagValue_TagValue() {}

func (*TagValue_XevBatteryTypeValue) isTagValue_TagValue() {}

func (*TagValue_XevChargeStatusOriginValue) isTagValue_TagValue() {}

func (*TagValue_XevVehicleConditioningTypeValue) isTagValue_TagValue() {}

func (m *TagValue) GetTagValue() isTagValue_TagValue {
	if m != nil {
		return m.TagValue
	}
	return nil
}

func (m *TagValue) GetStringValue() string {
	if x, ok := m.GetTagValue().(*TagValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *TagValue) GetBoolValue() bool {
	if x, ok := m.GetTagValue().(*TagValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *TagValue) GetIntegerValue() int64 {
	if x, ok := m.GetTagValue().(*TagValue_IntegerValue); ok {
		return x.IntegerValue
	}
	return 0
}

func (m *TagValue) GetDoubleValue() float64 {
	if x, ok := m.GetTagValue().(*TagValue_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *TagValue) GetTimestampValue() *timestamp.Timestamp {
	if x, ok := m.GetTagValue().(*TagValue_TimestampValue); ok {
		return x.TimestampValue
	}
	return nil
}

func (m *TagValue) GetDoorTagValue() VehicleDoors_DoorTag {
	if x, ok := m.GetTagValue().(*TagValue_DoorTagValue); ok {
		return x.DoorTagValue
	}
	return VehicleDoors_UNKNOWN_DOOR
}

func (m *TagValue) GetWindowTagValue() VehicleWindows_WindowTag {
	if x, ok := m.GetTagValue().(*TagValue_WindowTagValue); ok {
		return x.WindowTagValue
	}
	return VehicleWindows_UNKNOWN_WINDOW
}

func (m *TagValue) GetWheelTagValue() VehicleWheels_WheelTag {
	if x, ok := m.GetTagValue().(*TagValue_WheelTagValue); ok {
		return x.WheelTagValue
	}
	return VehicleWheels_UNKNOWN_WHEEL
}

func (m *TagValue) GetSeatTagValue() VehicleSeats_SeatTag {
	if x, ok := m.GetTagValue().(*TagValue_SeatTagValue); ok {
		return x.SeatTagValue
	}
	return VehicleSeats_UNKNOWN_SEAT
}

// Deprecated: Do not use.
func (m *TagValue) GetGearTagValue() VehicleGears_GearTag {
	if x, ok := m.GetTagValue().(*TagValue_GearTagValue); ok {
		return x.GearTagValue
	}
	return VehicleGears_UNKNOWN_GEAR
}

func (m *TagValue) GetBatteryTagValue() VehicleBatteries_BatteryTag {
	if x, ok := m.GetTagValue().(*TagValue_BatteryTagValue); ok {
		return x.BatteryTagValue
	}
	return VehicleBatteries_UNKNOWN_BATTERY
}

// Deprecated: Do not use.
func (m *TagValue) GetIndicatorLightTag() VehicleIndicatorLights_IndicatorLightTag {
	if x, ok := m.GetTagValue().(*TagValue_IndicatorLightTag); ok {
		return x.IndicatorLightTag
	}
	return VehicleIndicatorLights_UNKNOWN_INDICATOR_LIGHT
}

// Deprecated: Do not use.
func (m *TagValue) GetIndicatorLightState() VehicleIndicatorLights_IndicatorLightState {
	if x, ok := m.GetTagValue().(*TagValue_IndicatorLightState); ok {
		return x.IndicatorLightState
	}
	return VehicleIndicatorLights_UNKNOWN_INDICATOR_LIGHT_STATE
}

func (m *TagValue) GetDeviceAuthStatus() DeviceAuthorizationStates_AuthorizationStatus {
	if x, ok := m.GetTagValue().(*TagValue_DeviceAuthStatus); ok {
		return x.DeviceAuthStatus
	}
	return DeviceAuthorizationStates_UNKNOWN_AUTHORIZATION_STATUS
}

// Deprecated: Do not use.
func (m *TagValue) GetWheelPlacardValue() VehicleWheels_WheelPlacardTag {
	if x, ok := m.GetTagValue().(*TagValue_WheelPlacardValue); ok {
		return x.WheelPlacardValue
	}
	return VehicleWheels_UNKNOWN_WHEEL_PLACARD
}

func (m *TagValue) GetOccupantRoleValue() VehicleOccupantRole_OccupantRoleTag {
	if x, ok := m.GetTagValue().(*TagValue_OccupantRoleValue); ok {
		return x.OccupantRoleValue
	}
	return VehicleOccupantRole_UNKNOWN
}

func (m *TagValue) GetTractionControlBrakeStatusTagValue() enumerations.OffOnStatus {
	if x, ok := m.GetTagValue().(*TagValue_TractionControlBrakeStatusTagValue); ok {
		return x.TractionControlBrakeStatusTagValue
	}
	return enumerations.OffOnStatus_UNKNOWN
}

func (m *TagValue) GetTractionControlPowertrainTagValue() enumerations.OffOnStatus {
	if x, ok := m.GetTagValue().(*TagValue_TractionControlPowertrainTagValue); ok {
		return x.TractionControlPowertrainTagValue
	}
	return enumerations.OffOnStatus_UNKNOWN
}

func (m *TagValue) GetRegenerationOperationActivation() enumerations.OperationActivation {
	if x, ok := m.GetTagValue().(*TagValue_RegenerationOperationActivation); ok {
		return x.RegenerationOperationActivation
	}
	return enumerations.OperationActivation_UNKNOWN
}

func (m *TagValue) GetLocationTypeValue() AssetLocation_LocationType {
	if x, ok := m.GetTagValue().(*TagValue_LocationTypeValue); ok {
		return x.LocationTypeValue
	}
	return AssetLocation_UNKNOWN_LOCATION_TYPE
}

func (m *TagValue) GetEngineType() EngineType_EngineTag {
	if x, ok := m.GetTagValue().(*TagValue_EngineType); ok {
		return x.EngineType
	}
	return EngineType_UNKNOWN
}

func (m *TagValue) GetShutdownReason() EngineAutomaticStopReason_ReasonTag {
	if x, ok := m.GetTagValue().(*TagValue_ShutdownReason); ok {
		return x.ShutdownReason
	}
	return EngineAutomaticStopReason_UNKNOWN
}

func (m *TagValue) GetDieselExhaustFilterSystemComponent() DieselExhaustFilterSystemComponent_ComponentTag {
	if x, ok := m.GetTagValue().(*TagValue_DieselExhaustFilterSystemComponent); ok {
		return x.DieselExhaustFilterSystemComponent
	}
	return DieselExhaustFilterSystemComponent_UNKNOWN
}

func (m *TagValue) GetDieselExhaustFilterCleaning() DieselExhaustFilterCleaning_CleaningTag {
	if x, ok := m.GetTagValue().(*TagValue_DieselExhaustFilterCleaning); ok {
		return x.DieselExhaustFilterCleaning
	}
	return DieselExhaustFilterCleaning_UNKNOWN
}

func (m *TagValue) GetAntennaTypeValue() AntennaType_AntennaTag {
	if x, ok := m.GetTagValue().(*TagValue_AntennaTypeValue); ok {
		return x.AntennaTypeValue
	}
	return AntennaType_UNKNOWN
}

func (m *TagValue) GetParkingBrakeType() VehicleBrakes_ParkingBrakeTypeTag {
	if x, ok := m.GetTagValue().(*TagValue_ParkingBrakeType); ok {
		return x.ParkingBrakeType
	}
	return VehicleBrakes_UNKNOWN
}

func (m *TagValue) GetMonitorCoverageTagValue() MonitorCoverage_MonitorCoverageTag {
	if x, ok := m.GetTagValue().(*TagValue_MonitorCoverageTagValue); ok {
		return x.MonitorCoverageTagValue
	}
	return MonitorCoverage_UNKNOWN
}

func (m *TagValue) GetHandsOffWheelWarningTypeValue() enumerations.OffOnStatus {
	if x, ok := m.GetTagValue().(*TagValue_HandsOffWheelWarningTypeValue); ok {
		return x.HandsOffWheelWarningTypeValue
	}
	return enumerations.OffOnStatus_UNKNOWN
}

func (m *TagValue) GetAntiTheftAlarmSource() AntiTheftAlarmSource_AntiTheftAlarmSourceTag {
	if x, ok := m.GetTagValue().(*TagValue_AntiTheftAlarmSource); ok {
		return x.AntiTheftAlarmSource
	}
	return AntiTheftAlarmSource_UNKNOWN
}

func (m *TagValue) GetSampleRate() SampleRate_SampleRateTag {
	if x, ok := m.GetTagValue().(*TagValue_SampleRate); ok {
		return x.SampleRate
	}
	return SampleRate_UNKNOWN
}

func (m *TagValue) GetBatteryLoadFaultTagValue() BatteryLoadFault_BatteryLoadFaultTag {
	if x, ok := m.GetTagValue().(*TagValue_BatteryLoadFaultTagValue); ok {
		return x.BatteryLoadFaultTagValue
	}
	return BatteryLoadFault_UNKNOWN
}

func (m *TagValue) GetBatteryPerformanceCauseTagValue() BatteryPerformanceCause_BatteryPerformanceCauseTag {
	if x, ok := m.GetTagValue().(*TagValue_BatteryPerformanceCauseTagValue); ok {
		return x.BatteryPerformanceCauseTagValue
	}
	return BatteryPerformanceCause_UNKNOWN
}

func (m *TagValue) GetVehicleSideValue() VehicleSide_VehicleSideTag {
	if x, ok := m.GetTagValue().(*TagValue_VehicleSideValue); ok {
		return x.VehicleSideValue
	}
	return VehicleSide_UNKNOWN
}

func (m *TagValue) GetTripProgressValue() TripProgress_TripProgressTag {
	if x, ok := m.GetTagValue().(*TagValue_TripProgressValue); ok {
		return x.TripProgressValue
	}
	return TripProgress_UNKNOWN
}

func (m *TagValue) GetXevChargerPowerTypeValue() XevChargerPowerType_XevChargerPowerTypeTag {
	if x, ok := m.GetTagValue().(*TagValue_XevChargerPowerTypeValue); ok {
		return x.XevChargerPowerTypeValue
	}
	return XevChargerPowerType_UNKNOWN
}

func (m *TagValue) GetXevBatteryTypeValue() XevBatteryType_XevBatteryTypeTag {
	if x, ok := m.GetTagValue().(*TagValue_XevBatteryTypeValue); ok {
		return x.XevBatteryTypeValue
	}
	return XevBatteryType_UNKNOWN
}

func (m *TagValue) GetXevChargeStatusOriginValue() XevChargeStatusOrigin_XevChargeStatusOriginTag {
	if x, ok := m.GetTagValue().(*TagValue_XevChargeStatusOriginValue); ok {
		return x.XevChargeStatusOriginValue
	}
	return XevChargeStatusOrigin_UNKNOWN
}

func (m *TagValue) GetXevVehicleConditioningTypeValue() XevVehicleConditioningType_XevVehicleConditioningTypeTag {
	if x, ok := m.GetTagValue().(*TagValue_XevVehicleConditioningTypeValue); ok {
		return x.XevVehicleConditioningTypeValue
	}
	return XevVehicleConditioningType_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TagValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TagValue_StringValue)(nil),
		(*TagValue_BoolValue)(nil),
		(*TagValue_IntegerValue)(nil),
		(*TagValue_DoubleValue)(nil),
		(*TagValue_TimestampValue)(nil),
		(*TagValue_DoorTagValue)(nil),
		(*TagValue_WindowTagValue)(nil),
		(*TagValue_WheelTagValue)(nil),
		(*TagValue_SeatTagValue)(nil),
		(*TagValue_GearTagValue)(nil),
		(*TagValue_BatteryTagValue)(nil),
		(*TagValue_IndicatorLightTag)(nil),
		(*TagValue_IndicatorLightState)(nil),
		(*TagValue_DeviceAuthStatus)(nil),
		(*TagValue_WheelPlacardValue)(nil),
		(*TagValue_OccupantRoleValue)(nil),
		(*TagValue_TractionControlBrakeStatusTagValue)(nil),
		(*TagValue_TractionControlPowertrainTagValue)(nil),
		(*TagValue_RegenerationOperationActivation)(nil),
		(*TagValue_LocationTypeValue)(nil),
		(*TagValue_EngineType)(nil),
		(*TagValue_ShutdownReason)(nil),
		(*TagValue_DieselExhaustFilterSystemComponent)(nil),
		(*TagValue_DieselExhaustFilterCleaning)(nil),
		(*TagValue_AntennaTypeValue)(nil),
		(*TagValue_ParkingBrakeType)(nil),
		(*TagValue_MonitorCoverageTagValue)(nil),
		(*TagValue_HandsOffWheelWarningTypeValue)(nil),
		(*TagValue_AntiTheftAlarmSource)(nil),
		(*TagValue_SampleRate)(nil),
		(*TagValue_BatteryLoadFaultTagValue)(nil),
		(*TagValue_BatteryPerformanceCauseTagValue)(nil),
		(*TagValue_VehicleSideValue)(nil),
		(*TagValue_TripProgressValue)(nil),
		(*TagValue_XevChargerPowerTypeValue)(nil),
		(*TagValue_XevBatteryTypeValue)(nil),
		(*TagValue_XevChargeStatusOriginValue)(nil),
		(*TagValue_XevVehicleConditioningTypeValue)(nil),
	}
}

type Tag struct {
	Name                 *TagName  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                *TagValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f03e0154a4ac73, []int{2}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetName() *TagName {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Tag) GetValue() *TagValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*TagName)(nil), "autonomic.ext.telemetry.tag.TagName")
	proto.RegisterType((*TagValue)(nil), "autonomic.ext.telemetry.tag.TagValue")
	proto.RegisterType((*Tag)(nil), "autonomic.ext.telemetry.tag.Tag")
}

func init() { proto.RegisterFile("autonomic/ext/telemetry/tag.proto", fileDescriptor_07f03e0154a4ac73) }

var fileDescriptor_07f03e0154a4ac73 = []byte{
	// 1643 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x5b, 0x6f, 0x23, 0xb7,
	0x15, 0xd6, 0xec, 0x26, 0x59, 0x2f, 0xe5, 0xf5, 0x65, 0x94, 0x64, 0x55, 0xef, 0x66, 0x7d, 0x8b,
	0x53, 0xf7, 0x61, 0x47, 0xa8, 0x83, 0x22, 0x69, 0x8b, 0x36, 0x95, 0xbd, 0xde, 0x28, 0x8d, 0x13,
	0x1b, 0xb2, 0x92, 0x4d, 0x0b, 0x14, 0x03, 0x6a, 0x86, 0x1a, 0x11, 0x9e, 0x21, 0x07, 0x24, 0x47,
	0x92, 0xd3, 0xa2, 0xe8, 0x05, 0x28, 0xd0, 0xf6, 0xa9, 0x40, 0xdf, 0xfa, 0x50, 0x20, 0x40, 0x7f,
	0x44, 0xff, 0x59, 0x1f, 0x0b, 0xf2, 0x70, 0x46, 0xb3, 0xd6, 0xc5, 0x13, 0x64, 0x5f, 0x6c, 0xf2,
	0xf0, 0x7c, 0x17, 0x1d, 0x9d, 0x21, 0xa9, 0x41, 0xbb, 0x38, 0x53, 0x9c, 0xf1, 0x84, 0x06, 0x2d,
	0x32, 0x51, 0x2d, 0x45, 0x62, 0x92, 0x10, 0x25, 0xae, 0x5b, 0x0a, 0x47, 0x5e, 0x2a, 0xb8, 0xe2,
	0xee, 0xa3, 0x22, 0xc5, 0x23, 0x13, 0xe5, 0x15, 0x29, 0x9e, 0xc2, 0xd1, 0xd6, 0xd3, 0x45, 0xf8,
	0x31, 0x89, 0x63, 0xff, 0x8a, 0xf1, 0x31, 0xf3, 0x15, 0x8e, 0x24, 0x70, 0x6d, 0x7d, 0xb0, 0x28,
	0x9d, 0xb0, 0x2c, 0x21, 0x02, 0x2b, 0xca, 0x99, 0x6c, 0xf1, 0xc1, 0x80, 0x33, 0x5f, 0x2a, 0xac,
	0xb2, 0x1c, 0xf8, 0x51, 0x35, 0x60, 0x6a, 0x87, 0x3e, 0x0e, 0x14, 0x1d, 0x99, 0xa1, 0x25, 0xd8,
	0x8e, 0x38, 0x8f, 0x62, 0xd2, 0x32, 0xb3, 0x7e, 0x36, 0x68, 0x29, 0x9a, 0x10, 0xa9, 0x70, 0x92,
	0x42, 0xc2, 0xde, 0x1f, 0x1c, 0x74, 0xaf, 0x87, 0xa3, 0xcf, 0x71, 0x42, 0xdc, 0xe7, 0x68, 0x65,
	0x7c, 0xa5, 0x7c, 0x86, 0x13, 0xd2, 0x74, 0x76, 0x9c, 0xc3, 0xb5, 0xa3, 0x1f, 0x78, 0x4b, 0xaa,
	0xe0, 0xbd, 0x20, 0x71, 0xfc, 0xa9, 0xfe, 0xac, 0x3d, 0x1c, 0x75, 0x6a, 0xdd, 0x7b, 0xe3, 0x2b,
	0x65, 0x78, 0x76, 0x51, 0x5d, 0x2a, 0x41, 0x59, 0x04, 0x54, 0x77, 0x76, 0x9c, 0xc3, 0xfb, 0x9d,
	0x5a, 0x17, 0x41, 0x50, 0xa7, 0x1c, 0x23, 0xb4, 0xa2, 0x30, 0xac, 0xef, 0xfd, 0x77, 0x17, 0xad,
	0xf4, 0x70, 0xf4, 0x25, 0x8e, 0x33, 0xe2, 0xee, 0xa3, 0x55, 0x8b, 0x1d, 0xe9, 0xb9, 0xf1, 0xa1,
	0xc1, 0x96, 0x11, 0x92, 0xb6, 0x11, 0xea, 0x73, 0x1e, 0xdb, 0x14, 0xcd, 0xbf, 0xd2, 0xa9, 0x75,
	0xef, 0xeb, 0x18, 0x24, 0x1c, 0xa0, 0x07, 0x94, 0x29, 0x12, 0x11, 0x61, 0x73, 0xee, 0xee, 0x38,
	0x87, 0x77, 0x3b, 0xb5, 0xee, 0xaa, 0x0d, 0x17, 0x62, 0x21, 0xcf, 0xfa, 0x31, 0xb1, 0x59, 0xaf,
	0xed, 0x38, 0x87, 0x8e, 0x16, 0x83, 0x28, 0x24, 0x9d, 0xa2, 0xf5, 0xa2, 0x68, 0x36, 0xef, 0xf5,
	0x1d, 0xe7, 0xb0, 0x7e, 0xb4, 0xe5, 0x41, 0x71, 0xbd, 0xbc, 0xb8, 0x5e, 0x2f, 0xcf, 0xeb, 0xd4,
	0xba, 0x6b, 0x05, 0x08, 0x68, 0x7e, 0x85, 0xd6, 0x42, 0xce, 0x85, 0x6e, 0x0b, 0xcb, 0xf2, 0x86,
	0x29, 0xf1, 0x0f, 0x97, 0x96, 0xf8, 0x4b, 0x32, 0xa4, 0x41, 0x4c, 0x9e, 0x71, 0x2e, 0xa4, 0xa7,
	0xff, 0x42, 0xa9, 0x57, 0x43, 0x18, 0x02, 0x35, 0x46, 0x1b, 0x63, 0xca, 0x42, 0x3e, 0x2e, 0x91,
	0xdf, 0x33, 0xe4, 0x3f, 0xaa, 0x42, 0xfe, 0xc2, 0x60, 0xa5, 0x07, 0xff, 0x41, 0x60, 0x6d, 0x9c,
	0x4f, 0x40, 0xe2, 0x37, 0x68, 0x7d, 0x3c, 0x24, 0x24, 0x2e, 0x29, 0xac, 0x18, 0x85, 0xf7, 0x2b,
	0x29, 0x68, 0xa8, 0xf4, 0xcc, 0x3f, 0xe0, 0x7f, 0x30, 0xb6, 0xe3, 0xa2, 0x38, 0x92, 0x60, 0x55,
	0x62, 0xbf, 0x5f, 0xbd, 0x38, 0x97, 0x04, 0x2b, 0xe9, 0xe9, 0xbf, 0xb6, 0x38, 0x12, 0x86, 0xb9,
	0xf3, 0xb5, 0x88, 0xe0, 0x72, 0xdd, 0x51, 0x75, 0xea, 0x8f, 0x09, 0x16, 0xd2, 0xd3, 0x7f, 0x7b,
	0x38, 0x3a, 0xbe, 0xd3, 0xd4, 0xcd, 0xb1, 0x1a, 0xc1, 0x14, 0xe8, 0x07, 0x68, 0xb3, 0x8f, 0x95,
	0x22, 0xe2, 0xba, 0xa4, 0x50, 0x37, 0x0a, 0x1f, 0x56, 0x51, 0x38, 0x36, 0x60, 0x4a, 0xa4, 0x07,
	0xa3, 0x6b, 0xf8, 0x0c, 0xeb, 0xfd, 0x62, 0x06, 0x3a, 0xbf, 0x45, 0x0d, 0xca, 0x42, 0x1a, 0x60,
	0xc5, 0x85, 0x1f, 0xd3, 0x68, 0x68, 0x8a, 0xd5, 0x5c, 0x35, 0x4a, 0xa7, 0x55, 0x94, 0x3e, 0xc9,
	0xe1, 0x67, 0x1a, 0x2d, 0xbd, 0x97, 0xe7, 0xd3, 0xcf, 0xb7, 0x49, 0x6f, 0x2e, 0xb8, 0x7f, 0x74,
	0xd0, 0x5b, 0x37, 0xd5, 0xf5, 0x3e, 0x45, 0x9a, 0x0f, 0x8c, 0xfe, 0xc7, 0xdf, 0x5d, 0xff, 0x52,
	0xd3, 0x59, 0x07, 0x0d, 0x3a, 0xbb, 0xe4, 0x7e, 0x8d, 0xdc, 0x90, 0x8c, 0x68, 0x40, 0x7c, 0x9c,
	0xa9, 0xa1, 0xdd, 0x26, 0x9b, 0x6b, 0x46, 0xff, 0x97, 0x4b, 0xf5, 0x9f, 0x19, 0x58, 0x3b, 0x53,
	0x43, 0x2e, 0xe8, 0xd7, 0x66, 0x77, 0x34, 0x94, 0xd2, 0x9b, 0x89, 0x65, 0xb2, 0x53, 0xeb, 0x6e,
	0x84, 0x05, 0x00, 0x62, 0x6e, 0x8a, 0x1a, 0xd0, 0xfd, 0x69, 0x8c, 0x03, 0x2c, 0x42, 0xfb, 0x35,
	0xaf, 0x1b, 0xf1, 0x9f, 0x7c, 0xdb, 0x27, 0xe0, 0x02, 0x48, 0x4a, 0x15, 0x1f, 0x97, 0xc2, 0xf0,
	0x75, 0x0b, 0xd4, 0xe0, 0x41, 0x90, 0xa5, 0x98, 0x29, 0x5f, 0xf0, 0x62, 0x83, 0xda, 0x30, 0x8a,
	0xbf, 0xa8, 0xa2, 0x78, 0x6e, 0xe1, 0x5d, 0x1e, 0x13, 0xaf, 0x3c, 0x81, 0x06, 0xdb, 0xe4, 0xa5,
	0x10, 0x68, 0xfe, 0xd3, 0x41, 0xdf, 0x57, 0x42, 0x1f, 0x21, 0x9c, 0xf9, 0x01, 0x67, 0x4a, 0xf0,
	0xd8, 0xef, 0x0b, 0x7c, 0x45, 0x6c, 0xb5, 0x4b, 0x1d, 0xbe, 0x69, 0x8c, 0xfc, 0x6c, 0xa1, 0x91,
	0xf2, 0xf9, 0xe4, 0xf1, 0xc1, 0xe0, 0xdc, 0x96, 0xd7, 0x3b, 0x9f, 0x8e, 0x3b, 0xb5, 0xee, 0x5e,
	0xae, 0x77, 0x02, 0x72, 0xc7, 0x5a, 0x0d, 0x56, 0x8b, 0xce, 0xff, 0x87, 0x83, 0x0e, 0x66, 0x6c,
	0xa5, 0x7c, 0x4c, 0x84, 0x12, 0x98, 0xb2, 0x92, 0x29, 0xf7, 0xd5, 0x98, 0xda, 0xbd, 0x61, 0xea,
	0xa2, 0xd0, 0x2a, 0x3c, 0xfd, 0xcb, 0x41, 0xbb, 0x82, 0x44, 0x84, 0xe5, 0x07, 0xef, 0xbc, 0x23,
	0xb8, 0xd9, 0x30, 0x7e, 0x3e, 0xab, 0xe8, 0x27, 0x67, 0x68, 0x4f, 0xcf, 0xf0, 0xf3, 0xd9, 0x58,
	0xa7, 0xd6, 0xdd, 0x2e, 0x2b, 0xcf, 0x49, 0x71, 0x29, 0x6a, 0xc4, 0x3c, 0x00, 0x3b, 0xea, 0x3a,
	0xcd, 0x9b, 0xe7, 0x4d, 0x63, 0xe7, 0x83, 0xa5, 0xcd, 0xd3, 0x96, 0x92, 0xa8, 0x33, 0x0b, 0xf6,
	0xf2, 0x41, 0xef, 0x3a, 0x25, 0xba, 0x67, 0xe2, 0xd2, 0x1c, 0x0a, 0xd1, 0x43, 0x75, 0xc2, 0x22,
	0xca, 0x88, 0x11, 0x6a, 0xbe, 0x55, 0x61, 0x6b, 0x3d, 0x35, 0xf9, 0x9a, 0x22, 0x1f, 0x9a, 0x86,
	0x44, 0xa4, 0x88, 0xbb, 0x57, 0x68, 0x5d, 0x0e, 0x33, 0x15, 0xea, 0x6b, 0x94, 0x20, 0x58, 0x72,
	0xd6, 0x7c, 0xbb, 0x42, 0xe7, 0x03, 0x5d, 0x3b, 0x53, 0x3c, 0xc1, 0x8a, 0x06, 0x97, 0x8a, 0xa7,
	0x5d, 0x83, 0xf6, 0xe0, 0x9f, 0x3d, 0xda, 0x72, 0x6a, 0x08, 0xba, 0xdf, 0x38, 0xe8, 0xbd, 0x90,
	0x12, 0x49, 0x62, 0x9f, 0x4c, 0x86, 0x38, 0x93, 0xca, 0x1f, 0xd0, 0x58, 0x11, 0xe1, 0xcb, 0x6b,
	0xa9, 0x48, 0xe2, 0x07, 0x3c, 0x49, 0x39, 0x23, 0x4c, 0x35, 0x1f, 0x1a, 0x13, 0x67, 0xcb, 0x77,
	0x1b, 0x43, 0x75, 0x0a, 0x4c, 0xcf, 0x0d, 0xd1, 0xa5, 0xe1, 0x39, 0xc9, 0x69, 0xbc, 0x62, 0x04,
	0x86, 0xf6, 0xc2, 0x5b, 0x21, 0xee, 0xdf, 0x1d, 0xf4, 0x64, 0xbe, 0xc9, 0x20, 0x26, 0x98, 0x51,
	0x16, 0x35, 0x9b, 0xc6, 0xdc, 0xb3, 0x6f, 0x6b, 0xee, 0xc4, 0xe2, 0xbd, 0x7c, 0x00, 0xa6, 0x1e,
	0x85, 0x8b, 0x53, 0xdd, 0x00, 0xb9, 0x98, 0x29, 0xc2, 0x18, 0x2e, 0xf7, 0xd7, 0xf7, 0x2a, 0x5c,
	0x08, 0xda, 0x00, 0x33, 0xdf, 0x7e, 0x3e, 0x36, 0x7a, 0x1b, 0x78, 0xba, 0x02, 0xad, 0xc5, 0x90,
	0x9b, 0x62, 0x71, 0xa5, 0xaf, 0x82, 0xb0, 0x09, 0x99, 0x0e, 0xdb, 0x32, 0x22, 0x3f, 0xaf, 0x74,
	0xb4, 0x6a, 0x94, 0xf4, 0x2e, 0x80, 0xc4, 0xcc, 0x34, 0xbb, 0xd5, 0x4b, 0x6f, 0x84, 0xdd, 0xdf,
	0xa3, 0xad, 0x84, 0x33, 0xaa, 0x4f, 0xb8, 0x80, 0x8f, 0x88, 0xc0, 0x11, 0x29, 0xed, 0x2d, 0x8f,
	0x8c, 0xee, 0x47, 0x4b, 0x75, 0x3f, 0x03, 0xf8, 0x89, 0x45, 0xdf, 0x9c, 0x83, 0xf0, 0xc3, 0x64,
	0x26, 0x0a, 0x9f, 0xf7, 0x6f, 0x0e, 0xda, 0x1b, 0x62, 0x16, 0x4a, 0x9f, 0x0f, 0x06, 0x3e, 0x9c,
	0x37, 0x63, 0x2c, 0x74, 0xc1, 0xcb, 0x55, 0x7e, 0xfc, 0x6a, 0x36, 0xb9, 0x77, 0x8c, 0xd4, 0xf9,
	0x60, 0x60, 0x8e, 0xa4, 0x17, 0xa0, 0x33, 0x2d, 0xfe, 0x9f, 0x1c, 0xf4, 0x10, 0x33, 0x45, 0x7d,
	0x35, 0x24, 0x03, 0xe5, 0xe3, 0x18, 0x8b, 0xc4, 0x97, 0x3c, 0x13, 0x01, 0x69, 0xbe, 0x63, 0x1c,
	0x7c, 0x72, 0xdb, 0xf7, 0x4c, 0x7b, 0x1a, 0xda, 0xd6, 0xc8, 0x4b, 0x03, 0x9c, 0x1b, 0x84, 0xa2,
	0xbc, 0x89, 0xe7, 0x2c, 0xb9, 0x5f, 0xa1, 0xba, 0xc4, 0x49, 0x1a, 0x13, 0x5f, 0xe8, 0xbb, 0xc6,
	0x93, 0x0a, 0x57, 0xda, 0x4b, 0x93, 0xdf, 0xc5, 0x8a, 0x94, 0x86, 0x76, 0x83, 0x91, 0x45, 0xc0,
	0xfd, 0xb3, 0x83, 0x1e, 0xe7, 0xd7, 0xb6, 0x98, 0xe3, 0xd0, 0x1f, 0xe0, 0x2c, 0x2e, 0x5f, 0x3f,
	0xb7, 0x8d, 0x56, 0x7b, 0xa9, 0x96, 0xbd, 0xb0, 0x9d, 0x71, 0x1c, 0x3e, 0xd7, 0xf0, 0x99, 0x00,
	0xe8, 0x36, 0xfb, 0xb3, 0x61, 0x28, 0xf2, 0xbf, 0x1d, 0xb4, 0x9f, 0xbb, 0x48, 0x89, 0x18, 0x70,
	0x91, 0x60, 0x16, 0x10, 0x3f, 0xc0, 0x99, 0x2c, 0xf7, 0xde, 0x8e, 0x31, 0x73, 0x5e, 0xc5, 0xcc,
	0xc5, 0x94, 0xe6, 0x44, 0xb3, 0x2c, 0x8a, 0x83, 0xb5, 0xed, 0xfe, 0xc2, 0x55, 0x70, 0x18, 0x21,
	0x77, 0x04, 0x0f, 0x93, 0x2f, 0x69, 0x98, 0xb7, 0xe0, 0x6e, 0x85, 0x83, 0x24, 0xbf, 0x9b, 0xd3,
	0x90, 0x94, 0xc7, 0xf6, 0xe1, 0x1b, 0x4d, 0x23, 0x20, 0x74, 0x85, 0x1a, 0x4a, 0xd0, 0xd4, 0x4f,
	0x05, 0x8f, 0x04, 0x91, 0xd2, 0x2a, 0xed, 0x19, 0xa5, 0x1f, 0x2f, 0x55, 0xea, 0x09, 0x9a, 0x5e,
	0x58, 0xd8, 0x4b, 0x13, 0x7b, 0xd1, 0x51, 0xa5, 0x10, 0x88, 0xfd, 0xd5, 0x41, 0x8f, 0x27, 0x64,
	0xe4, 0x07, 0x43, 0x2c, 0xf4, 0x4f, 0x44, 0x73, 0x99, 0x28, 0x3f, 0x63, 0xfb, 0x15, 0x6e, 0xb5,
	0x5f, 0x91, 0xd1, 0x09, 0xe0, 0xcd, 0xfd, 0xc0, 0xec, 0x68, 0x73, 0x62, 0xb6, 0x07, 0x26, 0xb3,
	0x2b, 0xe0, 0x45, 0xa1, 0xb7, 0xb5, 0x95, 0xe2, 0x37, 0xc4, 0xd4, 0xc4, 0xbb, 0xb7, 0x3c, 0xe8,
	0xd6, 0x44, 0xfe, 0xb3, 0xc1, 0xea, 0x97, 0xa6, 0x20, 0xdd, 0x98, 0xbc, 0x14, 0x2c, 0xee, 0x54,
	0x4f, 0xa6, 0x15, 0xc8, 0xaf, 0x77, 0x5c, 0xd0, 0x88, 0x32, 0x2b, 0x7f, 0x60, 0xe4, 0x3f, 0xad,
	0x56, 0x03, 0xd8, 0x56, 0xce, 0x0d, 0x7e, 0x7e, 0x14, 0xcc, 0x6c, 0x4d, 0xe6, 0xad, 0x81, 0xa7,
	0xff, 0x38, 0x68, 0x5f, 0x7b, 0xca, 0x1b, 0x2e, 0xe0, 0x2c, 0xa4, 0x7a, 0x1b, 0xbb, 0xb1, 0x01,
	0xbe, 0x67, 0x8c, 0x7d, 0x71, 0x9b, 0x31, 0xdb, 0x74, 0x27, 0x25, 0x96, 0xbc, 0x46, 0x0b, 0x96,
	0xec, 0x33, 0x31, 0x59, 0x98, 0x60, 0x7c, 0x1e, 0xd7, 0xd1, 0xfd, 0xe2, 0xd1, 0xdc, 0xfb, 0x1d,
	0xba, 0xab, 0x7f, 0x20, 0x7d, 0x88, 0x5e, 0x2b, 0xde, 0x9a, 0xd4, 0x8f, 0xde, 0x5d, 0xde, 0xaf,
	0xf0, 0xb6, 0xa5, 0x6b, 0x10, 0xee, 0x4f, 0xd1, 0xeb, 0xd3, 0xb7, 0x18, 0xf5, 0xa3, 0x83, 0xdb,
	0xa0, 0xc6, 0x43, 0x17, 0x30, 0xc7, 0x7f, 0x71, 0xd0, 0x76, 0xc0, 0x93, 0x65, 0x98, 0xe3, 0x95,
	0x1e, 0x8e, 0x2e, 0x04, 0x57, 0xfc, 0xc2, 0xf9, 0xf5, 0xe7, 0x11, 0x55, 0xc3, 0xac, 0xef, 0x05,
	0x3c, 0x69, 0x15, 0x98, 0xa7, 0x98, 0xb6, 0xc8, 0x44, 0x11, 0xc1, 0x70, 0xfc, 0xd4, 0xbc, 0xca,
	0x90, 0x2d, 0x29, 0x82, 0x56, 0x82, 0x29, 0x83, 0xf7, 0x46, 0xad, 0x05, 0x6f, 0xa1, 0xfe, 0xe7,
	0x38, 0xdf, 0xdc, 0xb9, 0xdb, 0xfe, 0xa2, 0xd7, 0x7f, 0xc3, 0xe4, 0xbd, 0xff, 0xff, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xfd, 0x83, 0x3b, 0xa5, 0x58, 0x13, 0x00, 0x00,
}
