/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/telemetry/well_known_configuration.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WellKnownConfiguration int32

const (
	WellKnownConfiguration_UNKNOWN_CONFIGURATION                                 WellKnownConfiguration = 0
	WellKnownConfiguration_REMOTE_START_RUN_DURATION_SETTING                     WellKnownConfiguration = 1
	WellKnownConfiguration_VEHICLE_CONTROL_POLICY                                WellKnownConfiguration = 2
	WellKnownConfiguration_FORWARD_COLLISION_WARNING_SENSITIVITY_SETTING         WellKnownConfiguration = 3
	WellKnownConfiguration_XEV_BATTERY_TARGET_STATE_OF_CHARGE_SETTING            WellKnownConfiguration = 4
	WellKnownConfiguration_XEV_BATTERY_TARGET_RANGE_SETTING                      WellKnownConfiguration = 5
	WellKnownConfiguration_AUTOMATIC_SOFTWARE_UPDATE_SCHEDULE_SETTING            WellKnownConfiguration = 6
	WellKnownConfiguration_AUTOMATIC_SOFTWARE_UPDATE_OPT_IN_SETTING              WellKnownConfiguration = 7
	WellKnownConfiguration_AUTOMATIC_SOFTWARE_UPDATE_NOTIFICATION_OPT_IN_SETTING WellKnownConfiguration = 8
)

var WellKnownConfiguration_name = map[int32]string{
	0: "UNKNOWN_CONFIGURATION",
	1: "REMOTE_START_RUN_DURATION_SETTING",
	2: "VEHICLE_CONTROL_POLICY",
	3: "FORWARD_COLLISION_WARNING_SENSITIVITY_SETTING",
	4: "XEV_BATTERY_TARGET_STATE_OF_CHARGE_SETTING",
	5: "XEV_BATTERY_TARGET_RANGE_SETTING",
	6: "AUTOMATIC_SOFTWARE_UPDATE_SCHEDULE_SETTING",
	7: "AUTOMATIC_SOFTWARE_UPDATE_OPT_IN_SETTING",
	8: "AUTOMATIC_SOFTWARE_UPDATE_NOTIFICATION_OPT_IN_SETTING",
}

var WellKnownConfiguration_value = map[string]int32{
	"UNKNOWN_CONFIGURATION":                                 0,
	"REMOTE_START_RUN_DURATION_SETTING":                     1,
	"VEHICLE_CONTROL_POLICY":                                2,
	"FORWARD_COLLISION_WARNING_SENSITIVITY_SETTING":         3,
	"XEV_BATTERY_TARGET_STATE_OF_CHARGE_SETTING":            4,
	"XEV_BATTERY_TARGET_RANGE_SETTING":                      5,
	"AUTOMATIC_SOFTWARE_UPDATE_SCHEDULE_SETTING":            6,
	"AUTOMATIC_SOFTWARE_UPDATE_OPT_IN_SETTING":              7,
	"AUTOMATIC_SOFTWARE_UPDATE_NOTIFICATION_OPT_IN_SETTING": 8,
}

func (x WellKnownConfiguration) String() string {
	return proto.EnumName(WellKnownConfiguration_name, int32(x))
}

func (WellKnownConfiguration) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ecb21a1d47d8bfbb, []int{0}
}

type ConfigurationDefinition struct {
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Unit        string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	// Types that are valid to be assigned to ValueType:
	//	*ConfigurationDefinition_Value
	//	*ConfigurationDefinition_EnumValue
	ValueType            isConfigurationDefinition_ValueType `protobuf_oneof:"valueType"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ConfigurationDefinition) Reset()         { *m = ConfigurationDefinition{} }
func (m *ConfigurationDefinition) String() string { return proto.CompactTextString(m) }
func (*ConfigurationDefinition) ProtoMessage()    {}
func (*ConfigurationDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecb21a1d47d8bfbb, []int{0}
}

func (m *ConfigurationDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigurationDefinition.Unmarshal(m, b)
}
func (m *ConfigurationDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigurationDefinition.Marshal(b, m, deterministic)
}
func (m *ConfigurationDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigurationDefinition.Merge(m, src)
}
func (m *ConfigurationDefinition) XXX_Size() int {
	return xxx_messageInfo_ConfigurationDefinition.Size(m)
}
func (m *ConfigurationDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigurationDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigurationDefinition proto.InternalMessageInfo

func (m *ConfigurationDefinition) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ConfigurationDefinition) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

type isConfigurationDefinition_ValueType interface {
	isConfigurationDefinition_ValueType()
}

type ConfigurationDefinition_Value struct {
	Value string `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

type ConfigurationDefinition_EnumValue struct {
	EnumValue string `protobuf:"bytes,4,opt,name=enumValue,proto3,oneof"`
}

func (*ConfigurationDefinition_Value) isConfigurationDefinition_ValueType() {}

func (*ConfigurationDefinition_EnumValue) isConfigurationDefinition_ValueType() {}

func (m *ConfigurationDefinition) GetValueType() isConfigurationDefinition_ValueType {
	if m != nil {
		return m.ValueType
	}
	return nil
}

func (m *ConfigurationDefinition) GetValue() string {
	if x, ok := m.GetValueType().(*ConfigurationDefinition_Value); ok {
		return x.Value
	}
	return ""
}

func (m *ConfigurationDefinition) GetEnumValue() string {
	if x, ok := m.GetValueType().(*ConfigurationDefinition_EnumValue); ok {
		return x.EnumValue
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigurationDefinition) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigurationDefinition_Value)(nil),
		(*ConfigurationDefinition_EnumValue)(nil),
	}
}

var E_ConfigurationDefinition = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*ConfigurationDefinition)(nil),
	Field:         77002,
	Name:          "autonomic.ext.telemetry.configurationDefinition",
	Tag:           "bytes,77002,opt,name=configurationDefinition",
	Filename:      "autonomic/ext/telemetry/well_known_configuration.proto",
}

func init() {
	proto.RegisterEnum("autonomic.ext.telemetry.WellKnownConfiguration", WellKnownConfiguration_name, WellKnownConfiguration_value)
	proto.RegisterType((*ConfigurationDefinition)(nil), "autonomic.ext.telemetry.ConfigurationDefinition")
	proto.RegisterExtension(E_ConfigurationDefinition)
}

func init() {
	proto.RegisterFile("autonomic/ext/telemetry/well_known_configuration.proto", fileDescriptor_ecb21a1d47d8bfbb)
}

var fileDescriptor_ecb21a1d47d8bfbb = []byte{
	// 989 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x4d, 0x6f, 0xe3, 0xc4,
	0x1b, 0x5f, 0x77, 0x5f, 0xfe, 0xff, 0x9d, 0x05, 0x54, 0x59, 0xa2, 0x2d, 0x46, 0x82, 0xd9, 0x95,
	0x22, 0x56, 0x15, 0x75, 0x10, 0x88, 0x3d, 0xec, 0xcd, 0x4d, 0x9c, 0xd6, 0xda, 0xd4, 0x8e, 0x9c,
	0x49, 0x4b, 0x57, 0x42, 0xd6, 0xc4, 0x7e, 0x92, 0x8c, 0xd6, 0x9e, 0x89, 0x66, 0xc6, 0x4d, 0x73,
	0x40, 0xe2, 0xce, 0x61, 0x91, 0xe0, 0xb2, 0x37, 0xb4, 0x77, 0x2e, 0x7c, 0x06, 0x4e, 0x28, 0xa7,
	0xdc, 0xe0, 0x93, 0x70, 0x44, 0xe3, 0xb4, 0x49, 0x5b, 0x1a, 0x89, 0xbd, 0xd9, 0xcf, 0xeb, 0xef,
	0x79, 0x99, 0xdf, 0x83, 0x9e, 0xd1, 0x52, 0x0b, 0x2e, 0x0a, 0x96, 0xd6, 0xe1, 0x5c, 0xd7, 0x35,
	0xe4, 0x50, 0x80, 0x96, 0xd3, 0xfa, 0x04, 0xf2, 0x3c, 0x79, 0xc5, 0xc5, 0x84, 0x27, 0xa9, 0xe0,
	0x03, 0x36, 0x2c, 0x25, 0xd5, 0x4c, 0x70, 0x77, 0x2c, 0x85, 0x16, 0xf6, 0xf6, 0xd2, 0xcf, 0x85,
	0x73, 0xed, 0x2e, 0xfd, 0x1c, 0x3c, 0x14, 0x62, 0x98, 0x43, 0xbd, 0x32, 0xeb, 0x97, 0x83, 0x7a,
	0x06, 0x2a, 0x95, 0x6c, 0xac, 0x85, 0x5c, 0xb8, 0x3e, 0xf9, 0xd9, 0x42, 0xdb, 0x8d, 0xab, 0x21,
	0x9b, 0x30, 0x60, 0x9c, 0x99, 0x2f, 0x1b, 0xa3, 0x47, 0x97, 0xf6, 0x4c, 0xf0, 0x1d, 0x0b, 0x5b,
	0x4f, 0x1f, 0xc6, 0x57, 0x45, 0xb6, 0x8d, 0xee, 0x95, 0x9c, 0xe9, 0x9d, 0x8d, 0x4a, 0x55, 0x7d,
	0xdb, 0x5b, 0xe8, 0xfe, 0x19, 0xcd, 0x4b, 0xd8, 0xb9, 0x6b, 0x84, 0x87, 0x77, 0xe2, 0xc5, 0xaf,
	0xfd, 0x09, 0x7a, 0x08, 0xbc, 0x2c, 0x8e, 0x2b, 0xdd, 0xbd, 0x0b, 0xdd, 0x4a, 0xb4, 0xff, 0x08,
	0x3d, 0xac, 0x0c, 0xc9, 0x74, 0x0c, 0xbb, 0xbf, 0x20, 0xb4, 0x75, 0x02, 0x79, 0xfe, 0xc2, 0xd4,
	0x7c, 0x0d, 0x9f, 0xfd, 0x11, 0xfa, 0xb0, 0x17, 0xbe, 0x08, 0xa3, 0x93, 0x30, 0x69, 0x44, 0x61,
	0x2b, 0x38, 0xe8, 0xc5, 0x1e, 0x09, 0xa2, 0x70, 0xf3, 0x8e, 0xfd, 0x97, 0x85, 0x1e, 0xc7, 0xfe,
	0x51, 0x44, 0xfc, 0xa4, 0x4b, 0xbc, 0x98, 0x24, 0x71, 0x2f, 0x4c, 0x9a, 0x17, 0xfa, 0xa4, 0xeb,
	0x13, 0x12, 0x84, 0x07, 0x9b, 0x96, 0xf3, 0x9b, 0x35, 0x9f, 0xd5, 0x7e, 0xb5, 0xd0, 0x1b, 0x2b,
	0xe0, 0x19, 0x4b, 0xa9, 0x06, 0x85, 0x47, 0x62, 0x82, 0x0b, 0xca, 0xa7, 0x58, 0x41, 0x2a, 0x78,
	0xa6, 0xb0, 0x1e, 0x01, 0x2e, 0x15, 0x48, 0x3c, 0xa2, 0x0a, 0x2b, 0xd0, 0x58, 0x0b, 0x4c, 0xf3,
	0x5c, 0x4c, 0x2a, 0x4d, 0x26, 0xd9, 0x19, 0x48, 0x23, 0x1b, 0x82, 0xc6, 0x8c, 0x6b, 0x51, 0x89,
	0x53, 0x2a, 0x31, 0x1d, 0x68, 0x90, 0x98, 0x62, 0x09, 0x85, 0xd0, 0x80, 0x95, 0xa6, 0x52, 0xe3,
	0x54, 0x14, 0x05, 0xe5, 0x19, 0x66, 0x0a, 0x33, 0xa5, 0x4a, 0xc8, 0x3e, 0xc7, 0x7d, 0x18, 0x08,
	0x09, 0x95, 0x1b, 0xf0, 0x21, 0xe3, 0x80, 0xd5, 0xa8, 0xd4, 0x0a, 0x67, 0x62, 0xc2, 0x5d, 0xdb,
	0x52, 0xce, 0x7b, 0xcd, 0xa8, 0xb7, 0xdf, 0xf6, 0x93, 0x63, 0xaf, 0xdd, 0xf3, 0xed, 0x9f, 0x2c,
	0xb4, 0x75, 0xec, 0x1f, 0x06, 0x8d, 0xb6, 0x6f, 0x0a, 0x27, 0x71, 0xd4, 0x4e, 0x3a, 0x51, 0x3b,
	0x68, 0x9c, 0x6e, 0x6e, 0x38, 0x93, 0xf9, 0xac, 0xa6, 0xd0, 0xe9, 0xaa, 0x1c, 0x13, 0x55, 0x4f,
	0xc7, 0x80, 0xc5, 0x00, 0xa7, 0x82, 0x6b, 0x29, 0x72, 0x4c, 0x57, 0xf5, 0x08, 0x8e, 0xcb, 0x71,
	0x46, 0x35, 0xe3, 0x43, 0x2c, 0x24, 0x96, 0xa0, 0x40, 0x57, 0x3f, 0x67, 0x30, 0x62, 0x69, 0x0e,
	0xf8, 0xda, 0x9a, 0x29, 0xd7, 0x59, 0x93, 0xda, 0xfe, 0xdd, 0x42, 0x7b, 0xad, 0x28, 0x3e, 0xf1,
	0xe2, 0x66, 0xd2, 0x88, 0xda, 0xed, 0xa0, 0x6b, 0x5a, 0x7d, 0xe2, 0xc5, 0x61, 0x10, 0x1e, 0x24,
	0x5d, 0x3f, 0xec, 0x06, 0x24, 0x38, 0x0e, 0xc8, 0xe9, 0xb2, 0xfd, 0x77, 0x9d, 0x1f, 0x4d, 0xfb,
	0x7f, 0xb0, 0xd0, 0xcb, 0xeb, 0x70, 0x07, 0x42, 0x4e, 0xa8, 0xcc, 0x70, 0x2a, 0xf2, 0x9c, 0x29,
	0x26, 0x38, 0x9e, 0x50, 0xc9, 0x0d, 0x28, 0x2e, 0x34, 0x1b, 0x18, 0x4b, 0x23, 0x54, 0xc0, 0x15,
	0xd3, 0xec, 0x8c, 0x69, 0x33, 0xab, 0x0a, 0xf5, 0x62, 0x3e, 0xfd, 0xe9, 0x72, 0x66, 0xee, 0x93,
	0x77, 0x03, 0x65, 0x7f, 0x87, 0x76, 0xbf, 0xf1, 0x8f, 0x93, 0x7d, 0x8f, 0x10, 0x3f, 0x3e, 0x4d,
	0x88, 0x17, 0x1f, 0xf8, 0xc4, 0x2c, 0x11, 0xf1, 0x93, 0xa8, 0x95, 0x34, 0x0e, 0x8d, 0x60, 0x59,
	0xc2, 0x3d, 0xe7, 0x68, 0x3e, 0xab, 0x05, 0xe8, 0xd9, 0xaa, 0x80, 0xcb, 0xbe, 0x89, 0x09, 0x07,
	0xa9, 0x3e, 0x33, 0x53, 0xd7, 0x8b, 0xe6, 0x8f, 0xa8, 0x1c, 0x02, 0x1e, 0x4b, 0x18, 0x80, 0x04,
	0x9e, 0x82, 0x72, 0x6d, 0xab, 0x76, 0x63, 0xb6, 0xe7, 0x08, 0xdf, 0x92, 0x3e, 0xf6, 0xc2, 0x2b,
	0x49, 0xef, 0x3b, 0xf1, 0x7c, 0x56, 0x0b, 0xd1, 0xf3, 0xf5, 0x49, 0x33, 0x50, 0x4c, 0x42, 0x86,
	0x25, 0xe5, 0xc3, 0x2a, 0x79, 0x9f, 0x6a, 0x0d, 0x72, 0x7a, 0x01, 0xc2, 0xb5, 0x37, 0x5e, 0x15,
	0x37, 0x32, 0x7f, 0x6f, 0xa1, 0x5d, 0xaf, 0x47, 0xa2, 0x23, 0x8f, 0x04, 0x8d, 0xa4, 0x1b, 0xb5,
	0xc8, 0x89, 0x17, 0xfb, 0x49, 0xaf, 0xd3, 0x34, 0xa5, 0x77, 0x1b, 0x87, 0x7e, 0xb3, 0xd7, 0x5e,
	0x81, 0x78, 0xe0, 0x74, 0xe6, 0xb3, 0x5a, 0xfb, 0x2a, 0x08, 0xd3, 0x73, 0xc3, 0x3f, 0x05, 0xd5,
	0x2c, 0xc5, 0x4a, 0x0c, 0xf4, 0x84, 0x4a, 0xc0, 0x2a, 0x1d, 0x41, 0x56, 0xe6, 0xf0, 0xaf, 0xd1,
	0x38, 0x1f, 0x2c, 0xa3, 0x2e, 0x20, 0xbc, 0xb6, 0xd0, 0xd3, 0xf5, 0x10, 0xa2, 0x0e, 0x49, 0x82,
	0xd5, 0xe3, 0xfd, 0x9f, 0x43, 0xe7, 0xb3, 0xda, 0xb7, 0xa8, 0xbd, 0x02, 0x30, 0x19, 0x81, 0x1e,
	0x99, 0xb7, 0x78, 0x3b, 0x90, 0x6a, 0xcf, 0x8d, 0x19, 0x98, 0xc7, 0x56, 0x4a, 0x0e, 0x99, 0x59,
	0xff, 0x6b, 0xdb, 0xf2, 0x7e, 0xd4, 0x6a, 0x25, 0x86, 0x22, 0x88, 0x47, 0x7a, 0x5d, 0xfb, 0xad,
	0x85, 0xbe, 0x5e, 0x8f, 0x28, 0x8c, 0x48, 0xd0, 0x0a, 0x1a, 0x0b, 0x52, 0xb9, 0x01, 0xef, 0xff,
	0xce, 0x70, 0x3e, 0xab, 0xa5, 0x28, 0xfe, 0xcf, 0xf0, 0xae, 0xee, 0xf6, 0xbb, 0x80, 0x7c, 0xfe,
	0xda, 0x42, 0xdb, 0xe9, 0x1a, 0xe6, 0x7e, 0xec, 0x2e, 0x88, 0xdf, 0xbd, 0x24, 0x7e, 0xd7, 0xbf,
	0xe4, 0xd9, 0xa8, 0x62, 0x6e, 0xb5, 0xf3, 0xc7, 0x9f, 0x86, 0x83, 0x1f, 0x7d, 0xf9, 0x85, 0xbb,
	0xe6, 0x78, 0xb8, 0x6b, 0xce, 0x42, 0xbc, 0x2e, 0xeb, 0xfe, 0x1b, 0x0b, 0x7d, 0x9a, 0x8a, 0xe2,
	0x46, 0xc0, 0x6b, 0xd6, 0xfb, 0x1f, 0xdf, 0xce, 0xea, 0x1d, 0x83, 0xb3, 0x63, 0xbd, 0x0c, 0x87,
	0x4c, 0x8f, 0xca, 0xbe, 0x9b, 0x8a, 0xa2, 0xbe, 0x0c, 0xb3, 0x47, 0x99, 0xb9, 0x87, 0x20, 0x39,
	0xcd, 0xf7, 0xaa, 0x8a, 0x54, 0x5d, 0xc9, 0xb4, 0x5e, 0x50, 0xc6, 0x17, 0xa7, 0xad, 0xbe, 0xe6,
	0x70, 0xfe, 0x6d, 0x59, 0x6f, 0x37, 0xee, 0x7a, 0x3d, 0xd2, 0x7f, 0x50, 0xd9, 0x7d, 0xf5, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x3a, 0xa2, 0x9b, 0xe9, 0x63, 0x07, 0x00, 0x00,
}
