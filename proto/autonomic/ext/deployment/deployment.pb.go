/*-
 * ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
 * Autonomic Proprietary 1.0
 * ——————————————————————————————————————————————————————————————————————————————
 * Copyright (C) 2020 Autonomic, LLC - All rights reserved
 * ——————————————————————————————————————————————————————————————————————————————
 * Proprietary and confidential.
 *
 * NOTICE:  All information contained herein is, and remains the property of
 * Autonomic, LLC and its suppliers, if any.  The intellectual and technical
 * concepts contained herein are proprietary to Autonomic, LLC and its suppliers
 * and may be covered by U.S. and Foreign Patents, patents in process, and are
 * protected by trade secret or copyright law. Dissemination of this information
 * or reproduction of this material is strictly forbidden unless prior written
 * permission is obtained from Autonomic, LLC.
 *
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * ______________________________________________________________________________
 */
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomic/ext/deployment/deployment.proto

package deployment

import (
	context "context"
	fmt "fmt"
	common "xk6-fabric/proto/autonomic/ext/common"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus int32

const (
	DeleteReleaseArtifactResponse_UNKNOWN   DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus = 0
	DeleteReleaseArtifactResponse_DELETED   DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus = 1
	DeleteReleaseArtifactResponse_NOT_FOUND DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus = 2
)

var DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "DELETED",
	2: "NOT_FOUND",
}

var DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus_value = map[string]int32{
	"UNKNOWN":   0,
	"DELETED":   1,
	"NOT_FOUND": 2,
}

func (x DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus) String() string {
	return proto.EnumName(DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus_name, int32(x))
}

func (DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{8, 0}
}

type DeleteTargetBundleResponse_DeleteTargetBundleStatus int32

const (
	DeleteTargetBundleResponse_UNKNOWN   DeleteTargetBundleResponse_DeleteTargetBundleStatus = 0
	DeleteTargetBundleResponse_DELETED   DeleteTargetBundleResponse_DeleteTargetBundleStatus = 1
	DeleteTargetBundleResponse_NOT_FOUND DeleteTargetBundleResponse_DeleteTargetBundleStatus = 2
)

var DeleteTargetBundleResponse_DeleteTargetBundleStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "DELETED",
	2: "NOT_FOUND",
}

var DeleteTargetBundleResponse_DeleteTargetBundleStatus_value = map[string]int32{
	"UNKNOWN":   0,
	"DELETED":   1,
	"NOT_FOUND": 2,
}

func (x DeleteTargetBundleResponse_DeleteTargetBundleStatus) String() string {
	return proto.EnumName(DeleteTargetBundleResponse_DeleteTargetBundleStatus_name, int32(x))
}

func (DeleteTargetBundleResponse_DeleteTargetBundleStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{14, 0}
}

type DeleteReleaseResponse_DeleteReleaseStatus int32

const (
	DeleteReleaseResponse_UNKNOWN   DeleteReleaseResponse_DeleteReleaseStatus = 0
	DeleteReleaseResponse_DELETED   DeleteReleaseResponse_DeleteReleaseStatus = 1
	DeleteReleaseResponse_NOT_FOUND DeleteReleaseResponse_DeleteReleaseStatus = 2
)

var DeleteReleaseResponse_DeleteReleaseStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "DELETED",
	2: "NOT_FOUND",
}

var DeleteReleaseResponse_DeleteReleaseStatus_value = map[string]int32{
	"UNKNOWN":   0,
	"DELETED":   1,
	"NOT_FOUND": 2,
}

func (x DeleteReleaseResponse_DeleteReleaseStatus) String() string {
	return proto.EnumName(DeleteReleaseResponse_DeleteReleaseStatus_name, int32(x))
}

func (DeleteReleaseResponse_DeleteReleaseStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{20, 0}
}

// A TargetMatcher is used to filter which devices a TargetBundle will be applied to.
// TargetMatchers are logically ANDed together. A device must match all TargetMatchers
// in order to be considered a match for a TargetBundle. One example of TargetMatcher
// would be a simple string comparison: 'esn':'<vehicleEsn>'.
type TargetMatcher struct {
	// Types that are valid to be assigned to Matcher:
	//	*TargetMatcher_Field
	//	*TargetMatcher_Tag
	Matcher              isTargetMatcher_Matcher `protobuf_oneof:"matcher"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TargetMatcher) Reset()         { *m = TargetMatcher{} }
func (m *TargetMatcher) String() string { return proto.CompactTextString(m) }
func (*TargetMatcher) ProtoMessage()    {}
func (*TargetMatcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{0}
}

func (m *TargetMatcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetMatcher.Unmarshal(m, b)
}
func (m *TargetMatcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetMatcher.Marshal(b, m, deterministic)
}
func (m *TargetMatcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetMatcher.Merge(m, src)
}
func (m *TargetMatcher) XXX_Size() int {
	return xxx_messageInfo_TargetMatcher.Size(m)
}
func (m *TargetMatcher) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetMatcher.DiscardUnknown(m)
}

var xxx_messageInfo_TargetMatcher proto.InternalMessageInfo

type isTargetMatcher_Matcher interface {
	isTargetMatcher_Matcher()
}

type TargetMatcher_Field struct {
	Field *TargetMatcher_FieldMatcher `protobuf:"bytes,1,opt,name=field,proto3,oneof"`
}

type TargetMatcher_Tag struct {
	Tag *TargetMatcher_TagMatcher `protobuf:"bytes,2,opt,name=tag,proto3,oneof"`
}

func (*TargetMatcher_Field) isTargetMatcher_Matcher() {}

func (*TargetMatcher_Tag) isTargetMatcher_Matcher() {}

func (m *TargetMatcher) GetMatcher() isTargetMatcher_Matcher {
	if m != nil {
		return m.Matcher
	}
	return nil
}

func (m *TargetMatcher) GetField() *TargetMatcher_FieldMatcher {
	if x, ok := m.GetMatcher().(*TargetMatcher_Field); ok {
		return x.Field
	}
	return nil
}

func (m *TargetMatcher) GetTag() *TargetMatcher_TagMatcher {
	if x, ok := m.GetMatcher().(*TargetMatcher_Tag); ok {
		return x.Tag
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TargetMatcher) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TargetMatcher_Field)(nil),
		(*TargetMatcher_Tag)(nil),
	}
}

type TargetMatcher_FieldMatcher struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TargetMatcher_FieldMatcher) Reset()         { *m = TargetMatcher_FieldMatcher{} }
func (m *TargetMatcher_FieldMatcher) String() string { return proto.CompactTextString(m) }
func (*TargetMatcher_FieldMatcher) ProtoMessage()    {}
func (*TargetMatcher_FieldMatcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{0, 0}
}

func (m *TargetMatcher_FieldMatcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetMatcher_FieldMatcher.Unmarshal(m, b)
}
func (m *TargetMatcher_FieldMatcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetMatcher_FieldMatcher.Marshal(b, m, deterministic)
}
func (m *TargetMatcher_FieldMatcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetMatcher_FieldMatcher.Merge(m, src)
}
func (m *TargetMatcher_FieldMatcher) XXX_Size() int {
	return xxx_messageInfo_TargetMatcher_FieldMatcher.Size(m)
}
func (m *TargetMatcher_FieldMatcher) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetMatcher_FieldMatcher.DiscardUnknown(m)
}

var xxx_messageInfo_TargetMatcher_FieldMatcher proto.InternalMessageInfo

func (m *TargetMatcher_FieldMatcher) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetMatcher_FieldMatcher) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TargetMatcher_TagMatcher struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TargetMatcher_TagMatcher) Reset()         { *m = TargetMatcher_TagMatcher{} }
func (m *TargetMatcher_TagMatcher) String() string { return proto.CompactTextString(m) }
func (*TargetMatcher_TagMatcher) ProtoMessage()    {}
func (*TargetMatcher_TagMatcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{0, 1}
}

func (m *TargetMatcher_TagMatcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetMatcher_TagMatcher.Unmarshal(m, b)
}
func (m *TargetMatcher_TagMatcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetMatcher_TagMatcher.Marshal(b, m, deterministic)
}
func (m *TargetMatcher_TagMatcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetMatcher_TagMatcher.Merge(m, src)
}
func (m *TargetMatcher_TagMatcher) XXX_Size() int {
	return xxx_messageInfo_TargetMatcher_TagMatcher.Size(m)
}
func (m *TargetMatcher_TagMatcher) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetMatcher_TagMatcher.DiscardUnknown(m)
}

var xxx_messageInfo_TargetMatcher_TagMatcher proto.InternalMessageInfo

func (m *TargetMatcher_TagMatcher) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetMatcher_TagMatcher) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A ReleaseArtifact represents the complete set of metadata used to acquire a binary component of a
// TargetBundle.
type ReleaseArtifact struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId             string               `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Etag                 []byte               `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	Name                 string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Author               *common.Author       `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	Uri                  string               `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	ByteLength           uint64               `protobuf:"varint,8,opt,name=byte_length,json=byteLength,proto3" json:"byte_length,omitempty"`
	Checksum             []byte               `protobuf:"bytes,9,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Type                 string               `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Tags                 map[string]string    `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created              *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReleaseArtifact) Reset()         { *m = ReleaseArtifact{} }
func (m *ReleaseArtifact) String() string { return proto.CompactTextString(m) }
func (*ReleaseArtifact) ProtoMessage()    {}
func (*ReleaseArtifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{1}
}

func (m *ReleaseArtifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseArtifact.Unmarshal(m, b)
}
func (m *ReleaseArtifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseArtifact.Marshal(b, m, deterministic)
}
func (m *ReleaseArtifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseArtifact.Merge(m, src)
}
func (m *ReleaseArtifact) XXX_Size() int {
	return xxx_messageInfo_ReleaseArtifact.Size(m)
}
func (m *ReleaseArtifact) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseArtifact.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseArtifact proto.InternalMessageInfo

func (m *ReleaseArtifact) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReleaseArtifact) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *ReleaseArtifact) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

func (m *ReleaseArtifact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReleaseArtifact) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ReleaseArtifact) GetAuthor() *common.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *ReleaseArtifact) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ReleaseArtifact) GetByteLength() uint64 {
	if m != nil {
		return m.ByteLength
	}
	return 0
}

func (m *ReleaseArtifact) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *ReleaseArtifact) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ReleaseArtifact) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ReleaseArtifact) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

// A TargetBundle represents a set of artifacts logically grouped in order to transition a set of devices
// to a target state.
// Precondition: All of the devices identified as a match in a TargetBundle must be in a state where
// the TargetBundle can be applied successfully.
// Postcondition: All of the devices to which the TargetBundle was successfully applied are in the same
// target state.
type TargetBundle struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId             string               `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Etag                 []byte               `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	Name                 string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Author               *common.Author       `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	Artifacts            []*ReleaseArtifact   `protobuf:"bytes,7,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Matchers             []*TargetMatcher     `protobuf:"bytes,8,rep,name=matchers,proto3" json:"matchers,omitempty"`
	Tags                 map[string]string    `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created              *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TargetBundle) Reset()         { *m = TargetBundle{} }
func (m *TargetBundle) String() string { return proto.CompactTextString(m) }
func (*TargetBundle) ProtoMessage()    {}
func (*TargetBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{2}
}

func (m *TargetBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetBundle.Unmarshal(m, b)
}
func (m *TargetBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetBundle.Marshal(b, m, deterministic)
}
func (m *TargetBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetBundle.Merge(m, src)
}
func (m *TargetBundle) XXX_Size() int {
	return xxx_messageInfo_TargetBundle.Size(m)
}
func (m *TargetBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetBundle.DiscardUnknown(m)
}

var xxx_messageInfo_TargetBundle proto.InternalMessageInfo

func (m *TargetBundle) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetBundle) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TargetBundle) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

func (m *TargetBundle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TargetBundle) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TargetBundle) GetAuthor() *common.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *TargetBundle) GetArtifacts() []*ReleaseArtifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *TargetBundle) GetMatchers() []*TargetMatcher {
	if m != nil {
		return m.Matchers
	}
	return nil
}

func (m *TargetBundle) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *TargetBundle) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

// A Release encapsulates one or more TargetBundles. Each TargetBundle represents a
// unique set of instructions to bring a subset of devices to a desired state. While the
// instructions across TargetBundles will differ, two TargetBundles will only reside in
// the same Release if they share the same goal state of the device.
type Release struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId             string               `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Etag                 []byte               `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	Name                 string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Author               *common.Author       `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	Tags                 map[string]string    `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Bundle               []*TargetBundle      `protobuf:"bytes,8,rep,name=bundle,proto3" json:"bundle,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{3}
}

func (m *Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release.Unmarshal(m, b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release.Marshal(b, m, deterministic)
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return xxx_messageInfo_Release.Size(m)
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Release) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *Release) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

func (m *Release) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Release) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Release) GetAuthor() *common.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Release) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Release) GetBundle() []*TargetBundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

func (m *Release) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

// Deploy
// Entity that tracks the delivery of a release to
// a fleet of vehicles.
type Deploy struct {
	Id                   []byte               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId             []byte               `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Etag                 []byte               `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	Name                 string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CallbackUri          string               `protobuf:"bytes,6,opt,name=callback_uri,json=callbackUri,proto3" json:"callback_uri,omitempty"`
	ReleaseId            []byte               `protobuf:"bytes,7,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Author               *common.Author       `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	Tags                 map[string]string    `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created              *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	Expiration           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=expiration,proto3" json:"expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Deploy) Reset()         { *m = Deploy{} }
func (m *Deploy) String() string { return proto.CompactTextString(m) }
func (*Deploy) ProtoMessage()    {}
func (*Deploy) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{4}
}

func (m *Deploy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deploy.Unmarshal(m, b)
}
func (m *Deploy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deploy.Marshal(b, m, deterministic)
}
func (m *Deploy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deploy.Merge(m, src)
}
func (m *Deploy) XXX_Size() int {
	return xxx_messageInfo_Deploy.Size(m)
}
func (m *Deploy) XXX_DiscardUnknown() {
	xxx_messageInfo_Deploy.DiscardUnknown(m)
}

var xxx_messageInfo_Deploy proto.InternalMessageInfo

func (m *Deploy) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Deploy) GetTenantId() []byte {
	if m != nil {
		return m.TenantId
	}
	return nil
}

func (m *Deploy) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

func (m *Deploy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Deploy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Deploy) GetCallbackUri() string {
	if m != nil {
		return m.CallbackUri
	}
	return ""
}

func (m *Deploy) GetReleaseId() []byte {
	if m != nil {
		return m.ReleaseId
	}
	return nil
}

func (m *Deploy) GetAuthor() *common.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Deploy) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Deploy) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Deploy) GetExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

type CreateReleaseArtifactRequest struct {
	TenantId             string            `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Author               *common.Author    `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Uri                  string            `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	ByteLength           uint64            `protobuf:"varint,8,opt,name=byte_length,json=byteLength,proto3" json:"byte_length,omitempty"`
	Checksum             []byte            `protobuf:"bytes,9,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Type                 string            `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateReleaseArtifactRequest) Reset()         { *m = CreateReleaseArtifactRequest{} }
func (m *CreateReleaseArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseArtifactRequest) ProtoMessage()    {}
func (*CreateReleaseArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{5}
}

func (m *CreateReleaseArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseArtifactRequest.Unmarshal(m, b)
}
func (m *CreateReleaseArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseArtifactRequest.Marshal(b, m, deterministic)
}
func (m *CreateReleaseArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseArtifactRequest.Merge(m, src)
}
func (m *CreateReleaseArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseArtifactRequest.Size(m)
}
func (m *CreateReleaseArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseArtifactRequest proto.InternalMessageInfo

func (m *CreateReleaseArtifactRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *CreateReleaseArtifactRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateReleaseArtifactRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateReleaseArtifactRequest) GetAuthor() *common.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *CreateReleaseArtifactRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *CreateReleaseArtifactRequest) GetByteLength() uint64 {
	if m != nil {
		return m.ByteLength
	}
	return 0
}

func (m *CreateReleaseArtifactRequest) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *CreateReleaseArtifactRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateReleaseArtifactRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateReleaseArtifactResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Etag                 []byte   `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReleaseArtifactResponse) Reset()         { *m = CreateReleaseArtifactResponse{} }
func (m *CreateReleaseArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseArtifactResponse) ProtoMessage()    {}
func (*CreateReleaseArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{6}
}

func (m *CreateReleaseArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseArtifactResponse.Unmarshal(m, b)
}
func (m *CreateReleaseArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseArtifactResponse.Marshal(b, m, deterministic)
}
func (m *CreateReleaseArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseArtifactResponse.Merge(m, src)
}
func (m *CreateReleaseArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseArtifactResponse.Size(m)
}
func (m *CreateReleaseArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseArtifactResponse proto.InternalMessageInfo

func (m *CreateReleaseArtifactResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateReleaseArtifactResponse) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

type DeleteReleaseArtifactRequest struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Ids                  []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReleaseArtifactRequest) Reset()         { *m = DeleteReleaseArtifactRequest{} }
func (m *DeleteReleaseArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReleaseArtifactRequest) ProtoMessage()    {}
func (*DeleteReleaseArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{7}
}

func (m *DeleteReleaseArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReleaseArtifactRequest.Unmarshal(m, b)
}
func (m *DeleteReleaseArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReleaseArtifactRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReleaseArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReleaseArtifactRequest.Merge(m, src)
}
func (m *DeleteReleaseArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReleaseArtifactRequest.Size(m)
}
func (m *DeleteReleaseArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReleaseArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReleaseArtifactRequest proto.InternalMessageInfo

func (m *DeleteReleaseArtifactRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *DeleteReleaseArtifactRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type DeleteReleaseArtifactResponse struct {
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// map of artifact id (represented as string) to deletion result
	Results              map[string]DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=autonomic.ext.deployment.DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus"`
	XXX_NoUnkeyedLiteral struct{}                                                             `json:"-"`
	XXX_unrecognized     []byte                                                               `json:"-"`
	XXX_sizecache        int32                                                                `json:"-"`
}

func (m *DeleteReleaseArtifactResponse) Reset()         { *m = DeleteReleaseArtifactResponse{} }
func (m *DeleteReleaseArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteReleaseArtifactResponse) ProtoMessage()    {}
func (*DeleteReleaseArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{8}
}

func (m *DeleteReleaseArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReleaseArtifactResponse.Unmarshal(m, b)
}
func (m *DeleteReleaseArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReleaseArtifactResponse.Marshal(b, m, deterministic)
}
func (m *DeleteReleaseArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReleaseArtifactResponse.Merge(m, src)
}
func (m *DeleteReleaseArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteReleaseArtifactResponse.Size(m)
}
func (m *DeleteReleaseArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReleaseArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReleaseArtifactResponse proto.InternalMessageInfo

func (m *DeleteReleaseArtifactResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *DeleteReleaseArtifactResponse) GetResults() map[string]DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus {
	if m != nil {
		return m.Results
	}
	return nil
}

type GetReleaseArtifactsRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	TenantId             string   `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseArtifactsRequest) Reset()         { *m = GetReleaseArtifactsRequest{} }
func (m *GetReleaseArtifactsRequest) String() string { return proto.CompactTextString(m) }
func (*GetReleaseArtifactsRequest) ProtoMessage()    {}
func (*GetReleaseArtifactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{9}
}

func (m *GetReleaseArtifactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseArtifactsRequest.Unmarshal(m, b)
}
func (m *GetReleaseArtifactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseArtifactsRequest.Marshal(b, m, deterministic)
}
func (m *GetReleaseArtifactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseArtifactsRequest.Merge(m, src)
}
func (m *GetReleaseArtifactsRequest) XXX_Size() int {
	return xxx_messageInfo_GetReleaseArtifactsRequest.Size(m)
}
func (m *GetReleaseArtifactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseArtifactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseArtifactsRequest proto.InternalMessageInfo

func (m *GetReleaseArtifactsRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetReleaseArtifactsRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

type GetReleaseArtifactsResponse struct {
	Artifacts            []*ReleaseArtifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetReleaseArtifactsResponse) Reset()         { *m = GetReleaseArtifactsResponse{} }
func (m *GetReleaseArtifactsResponse) String() string { return proto.CompactTextString(m) }
func (*GetReleaseArtifactsResponse) ProtoMessage()    {}
func (*GetReleaseArtifactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{10}
}

func (m *GetReleaseArtifactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseArtifactsResponse.Unmarshal(m, b)
}
func (m *GetReleaseArtifactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseArtifactsResponse.Marshal(b, m, deterministic)
}
func (m *GetReleaseArtifactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseArtifactsResponse.Merge(m, src)
}
func (m *GetReleaseArtifactsResponse) XXX_Size() int {
	return xxx_messageInfo_GetReleaseArtifactsResponse.Size(m)
}
func (m *GetReleaseArtifactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseArtifactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseArtifactsResponse proto.InternalMessageInfo

func (m *GetReleaseArtifactsResponse) GetArtifacts() []*ReleaseArtifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

type CreateTargetBundleRequest struct {
	TenantId             string            `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Author               *common.Author    `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	ReleaseArtifactIds   []string          `protobuf:"bytes,6,rep,name=release_artifact_ids,json=releaseArtifactIds,proto3" json:"release_artifact_ids,omitempty"`
	Matchers             []*TargetMatcher  `protobuf:"bytes,7,rep,name=matchers,proto3" json:"matchers,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateTargetBundleRequest) Reset()         { *m = CreateTargetBundleRequest{} }
func (m *CreateTargetBundleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTargetBundleRequest) ProtoMessage()    {}
func (*CreateTargetBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{11}
}

func (m *CreateTargetBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTargetBundleRequest.Unmarshal(m, b)
}
func (m *CreateTargetBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTargetBundleRequest.Marshal(b, m, deterministic)
}
func (m *CreateTargetBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTargetBundleRequest.Merge(m, src)
}
func (m *CreateTargetBundleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTargetBundleRequest.Size(m)
}
func (m *CreateTargetBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTargetBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTargetBundleRequest proto.InternalMessageInfo

func (m *CreateTargetBundleRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *CreateTargetBundleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateTargetBundleRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateTargetBundleRequest) GetAuthor() *common.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *CreateTargetBundleRequest) GetReleaseArtifactIds() []string {
	if m != nil {
		return m.ReleaseArtifactIds
	}
	return nil
}

func (m *CreateTargetBundleRequest) GetMatchers() []*TargetMatcher {
	if m != nil {
		return m.Matchers
	}
	return nil
}

func (m *CreateTargetBundleRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateTargetBundleResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Etag                 []byte   `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTargetBundleResponse) Reset()         { *m = CreateTargetBundleResponse{} }
func (m *CreateTargetBundleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTargetBundleResponse) ProtoMessage()    {}
func (*CreateTargetBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{12}
}

func (m *CreateTargetBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTargetBundleResponse.Unmarshal(m, b)
}
func (m *CreateTargetBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTargetBundleResponse.Marshal(b, m, deterministic)
}
func (m *CreateTargetBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTargetBundleResponse.Merge(m, src)
}
func (m *CreateTargetBundleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTargetBundleResponse.Size(m)
}
func (m *CreateTargetBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTargetBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTargetBundleResponse proto.InternalMessageInfo

func (m *CreateTargetBundleResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateTargetBundleResponse) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

type DeleteTargetBundleRequest struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Ids                  []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTargetBundleRequest) Reset()         { *m = DeleteTargetBundleRequest{} }
func (m *DeleteTargetBundleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTargetBundleRequest) ProtoMessage()    {}
func (*DeleteTargetBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{13}
}

func (m *DeleteTargetBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTargetBundleRequest.Unmarshal(m, b)
}
func (m *DeleteTargetBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTargetBundleRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTargetBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTargetBundleRequest.Merge(m, src)
}
func (m *DeleteTargetBundleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTargetBundleRequest.Size(m)
}
func (m *DeleteTargetBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTargetBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTargetBundleRequest proto.InternalMessageInfo

func (m *DeleteTargetBundleRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *DeleteTargetBundleRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type DeleteTargetBundleResponse struct {
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// map of bundle id (represented as string) to deletion result
	Results              map[string]DeleteTargetBundleResponse_DeleteTargetBundleStatus `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=autonomic.ext.deployment.DeleteTargetBundleResponse_DeleteTargetBundleStatus"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-"`
	XXX_unrecognized     []byte                                                         `json:"-"`
	XXX_sizecache        int32                                                          `json:"-"`
}

func (m *DeleteTargetBundleResponse) Reset()         { *m = DeleteTargetBundleResponse{} }
func (m *DeleteTargetBundleResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTargetBundleResponse) ProtoMessage()    {}
func (*DeleteTargetBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{14}
}

func (m *DeleteTargetBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTargetBundleResponse.Unmarshal(m, b)
}
func (m *DeleteTargetBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTargetBundleResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTargetBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTargetBundleResponse.Merge(m, src)
}
func (m *DeleteTargetBundleResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTargetBundleResponse.Size(m)
}
func (m *DeleteTargetBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTargetBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTargetBundleResponse proto.InternalMessageInfo

func (m *DeleteTargetBundleResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *DeleteTargetBundleResponse) GetResults() map[string]DeleteTargetBundleResponse_DeleteTargetBundleStatus {
	if m != nil {
		return m.Results
	}
	return nil
}

type GetTargetBundlesRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	TenantId             string   `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTargetBundlesRequest) Reset()         { *m = GetTargetBundlesRequest{} }
func (m *GetTargetBundlesRequest) String() string { return proto.CompactTextString(m) }
func (*GetTargetBundlesRequest) ProtoMessage()    {}
func (*GetTargetBundlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{15}
}

func (m *GetTargetBundlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTargetBundlesRequest.Unmarshal(m, b)
}
func (m *GetTargetBundlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTargetBundlesRequest.Marshal(b, m, deterministic)
}
func (m *GetTargetBundlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTargetBundlesRequest.Merge(m, src)
}
func (m *GetTargetBundlesRequest) XXX_Size() int {
	return xxx_messageInfo_GetTargetBundlesRequest.Size(m)
}
func (m *GetTargetBundlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTargetBundlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTargetBundlesRequest proto.InternalMessageInfo

func (m *GetTargetBundlesRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetTargetBundlesRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

type GetTargetBundlesResponse struct {
	Bundles              []*TargetBundle `protobuf:"bytes,1,rep,name=bundles,proto3" json:"bundles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetTargetBundlesResponse) Reset()         { *m = GetTargetBundlesResponse{} }
func (m *GetTargetBundlesResponse) String() string { return proto.CompactTextString(m) }
func (*GetTargetBundlesResponse) ProtoMessage()    {}
func (*GetTargetBundlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{16}
}

func (m *GetTargetBundlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTargetBundlesResponse.Unmarshal(m, b)
}
func (m *GetTargetBundlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTargetBundlesResponse.Marshal(b, m, deterministic)
}
func (m *GetTargetBundlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTargetBundlesResponse.Merge(m, src)
}
func (m *GetTargetBundlesResponse) XXX_Size() int {
	return xxx_messageInfo_GetTargetBundlesResponse.Size(m)
}
func (m *GetTargetBundlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTargetBundlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTargetBundlesResponse proto.InternalMessageInfo

func (m *GetTargetBundlesResponse) GetBundles() []*TargetBundle {
	if m != nil {
		return m.Bundles
	}
	return nil
}

type CreateReleaseRequest struct {
	TenantId             string            `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Author               *common.Author    `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TargetBundleIds      []string          `protobuf:"bytes,6,rep,name=target_bundle_ids,json=targetBundleIds,proto3" json:"target_bundle_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateReleaseRequest) Reset()         { *m = CreateReleaseRequest{} }
func (m *CreateReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseRequest) ProtoMessage()    {}
func (*CreateReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{17}
}

func (m *CreateReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseRequest.Unmarshal(m, b)
}
func (m *CreateReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseRequest.Marshal(b, m, deterministic)
}
func (m *CreateReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseRequest.Merge(m, src)
}
func (m *CreateReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseRequest.Size(m)
}
func (m *CreateReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseRequest proto.InternalMessageInfo

func (m *CreateReleaseRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *CreateReleaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateReleaseRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateReleaseRequest) GetAuthor() *common.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *CreateReleaseRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CreateReleaseRequest) GetTargetBundleIds() []string {
	if m != nil {
		return m.TargetBundleIds
	}
	return nil
}

type CreateReleaseResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Etag                 []byte   `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReleaseResponse) Reset()         { *m = CreateReleaseResponse{} }
func (m *CreateReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseResponse) ProtoMessage()    {}
func (*CreateReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{18}
}

func (m *CreateReleaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseResponse.Unmarshal(m, b)
}
func (m *CreateReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseResponse.Marshal(b, m, deterministic)
}
func (m *CreateReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseResponse.Merge(m, src)
}
func (m *CreateReleaseResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseResponse.Size(m)
}
func (m *CreateReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseResponse proto.InternalMessageInfo

func (m *CreateReleaseResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateReleaseResponse) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

type DeleteReleaseRequest struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Ids                  []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReleaseRequest) Reset()         { *m = DeleteReleaseRequest{} }
func (m *DeleteReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReleaseRequest) ProtoMessage()    {}
func (*DeleteReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{19}
}

func (m *DeleteReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReleaseRequest.Unmarshal(m, b)
}
func (m *DeleteReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReleaseRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReleaseRequest.Merge(m, src)
}
func (m *DeleteReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReleaseRequest.Size(m)
}
func (m *DeleteReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReleaseRequest proto.InternalMessageInfo

func (m *DeleteReleaseRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *DeleteReleaseRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type DeleteReleaseResponse struct {
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// map of release id (represented as string) to deletion result
	Results              map[string]DeleteReleaseResponse_DeleteReleaseStatus `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=autonomic.ext.deployment.DeleteReleaseResponse_DeleteReleaseStatus"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *DeleteReleaseResponse) Reset()         { *m = DeleteReleaseResponse{} }
func (m *DeleteReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteReleaseResponse) ProtoMessage()    {}
func (*DeleteReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{20}
}

func (m *DeleteReleaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReleaseResponse.Unmarshal(m, b)
}
func (m *DeleteReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReleaseResponse.Marshal(b, m, deterministic)
}
func (m *DeleteReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReleaseResponse.Merge(m, src)
}
func (m *DeleteReleaseResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteReleaseResponse.Size(m)
}
func (m *DeleteReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReleaseResponse proto.InternalMessageInfo

func (m *DeleteReleaseResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *DeleteReleaseResponse) GetResults() map[string]DeleteReleaseResponse_DeleteReleaseStatus {
	if m != nil {
		return m.Results
	}
	return nil
}

type GetReleasesRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	TenantId             string   `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleasesRequest) Reset()         { *m = GetReleasesRequest{} }
func (m *GetReleasesRequest) String() string { return proto.CompactTextString(m) }
func (*GetReleasesRequest) ProtoMessage()    {}
func (*GetReleasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{21}
}

func (m *GetReleasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleasesRequest.Unmarshal(m, b)
}
func (m *GetReleasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleasesRequest.Marshal(b, m, deterministic)
}
func (m *GetReleasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleasesRequest.Merge(m, src)
}
func (m *GetReleasesRequest) XXX_Size() int {
	return xxx_messageInfo_GetReleasesRequest.Size(m)
}
func (m *GetReleasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleasesRequest proto.InternalMessageInfo

func (m *GetReleasesRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetReleasesRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

type GetReleasesResponse struct {
	Releases             []*Release `protobuf:"bytes,1,rep,name=releases,proto3" json:"releases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetReleasesResponse) Reset()         { *m = GetReleasesResponse{} }
func (m *GetReleasesResponse) String() string { return proto.CompactTextString(m) }
func (*GetReleasesResponse) ProtoMessage()    {}
func (*GetReleasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{22}
}

func (m *GetReleasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleasesResponse.Unmarshal(m, b)
}
func (m *GetReleasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleasesResponse.Marshal(b, m, deterministic)
}
func (m *GetReleasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleasesResponse.Merge(m, src)
}
func (m *GetReleasesResponse) XXX_Size() int {
	return xxx_messageInfo_GetReleasesResponse.Size(m)
}
func (m *GetReleasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleasesResponse proto.InternalMessageInfo

func (m *GetReleasesResponse) GetReleases() []*Release {
	if m != nil {
		return m.Releases
	}
	return nil
}

type DeployReleaseRequest struct {
	TenantId             string            `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ReleaseId            string            `protobuf:"bytes,4,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Author               *common.Author    `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	CallbackUri          string            `protobuf:"bytes,6,opt,name=callback_uri,json=callbackUri,proto3" json:"callback_uri,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeployReleaseRequest) Reset()         { *m = DeployReleaseRequest{} }
func (m *DeployReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*DeployReleaseRequest) ProtoMessage()    {}
func (*DeployReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{23}
}

func (m *DeployReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployReleaseRequest.Unmarshal(m, b)
}
func (m *DeployReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployReleaseRequest.Marshal(b, m, deterministic)
}
func (m *DeployReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployReleaseRequest.Merge(m, src)
}
func (m *DeployReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_DeployReleaseRequest.Size(m)
}
func (m *DeployReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployReleaseRequest proto.InternalMessageInfo

func (m *DeployReleaseRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *DeployReleaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeployReleaseRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DeployReleaseRequest) GetReleaseId() string {
	if m != nil {
		return m.ReleaseId
	}
	return ""
}

func (m *DeployReleaseRequest) GetAuthor() *common.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *DeployReleaseRequest) GetCallbackUri() string {
	if m != nil {
		return m.CallbackUri
	}
	return ""
}

func (m *DeployReleaseRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type DeployReleaseResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Etag                 []byte   `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployReleaseResponse) Reset()         { *m = DeployReleaseResponse{} }
func (m *DeployReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*DeployReleaseResponse) ProtoMessage()    {}
func (*DeployReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{24}
}

func (m *DeployReleaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployReleaseResponse.Unmarshal(m, b)
}
func (m *DeployReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployReleaseResponse.Marshal(b, m, deterministic)
}
func (m *DeployReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployReleaseResponse.Merge(m, src)
}
func (m *DeployReleaseResponse) XXX_Size() int {
	return xxx_messageInfo_DeployReleaseResponse.Size(m)
}
func (m *DeployReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeployReleaseResponse proto.InternalMessageInfo

func (m *DeployReleaseResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeployReleaseResponse) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

type GetDeploysRequest struct {
	Ids                  [][]byte `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	TenantId             []byte   `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeploysRequest) Reset()         { *m = GetDeploysRequest{} }
func (m *GetDeploysRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeploysRequest) ProtoMessage()    {}
func (*GetDeploysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{25}
}

func (m *GetDeploysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeploysRequest.Unmarshal(m, b)
}
func (m *GetDeploysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeploysRequest.Marshal(b, m, deterministic)
}
func (m *GetDeploysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeploysRequest.Merge(m, src)
}
func (m *GetDeploysRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeploysRequest.Size(m)
}
func (m *GetDeploysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeploysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeploysRequest proto.InternalMessageInfo

func (m *GetDeploysRequest) GetIds() [][]byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetDeploysRequest) GetTenantId() []byte {
	if m != nil {
		return m.TenantId
	}
	return nil
}

type GetDeploysResponse struct {
	Deploys              []*Deploy `protobuf:"bytes,1,rep,name=deploys,proto3" json:"deploys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetDeploysResponse) Reset()         { *m = GetDeploysResponse{} }
func (m *GetDeploysResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeploysResponse) ProtoMessage()    {}
func (*GetDeploysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{26}
}

func (m *GetDeploysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeploysResponse.Unmarshal(m, b)
}
func (m *GetDeploysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeploysResponse.Marshal(b, m, deterministic)
}
func (m *GetDeploysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeploysResponse.Merge(m, src)
}
func (m *GetDeploysResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeploysResponse.Size(m)
}
func (m *GetDeploysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeploysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeploysResponse proto.InternalMessageInfo

func (m *GetDeploysResponse) GetDeploys() []*Deploy {
	if m != nil {
		return m.Deploys
	}
	return nil
}

type GetDeployStatusRequest struct {
	TenantId             []byte   `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	DeployId             []byte   `protobuf:"bytes,2,opt,name=deploy_id,json=deployId,proto3" json:"deploy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeployStatusRequest) Reset()         { *m = GetDeployStatusRequest{} }
func (m *GetDeployStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeployStatusRequest) ProtoMessage()    {}
func (*GetDeployStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{27}
}

func (m *GetDeployStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeployStatusRequest.Unmarshal(m, b)
}
func (m *GetDeployStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeployStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetDeployStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeployStatusRequest.Merge(m, src)
}
func (m *GetDeployStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeployStatusRequest.Size(m)
}
func (m *GetDeployStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeployStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeployStatusRequest proto.InternalMessageInfo

func (m *GetDeployStatusRequest) GetTenantId() []byte {
	if m != nil {
		return m.TenantId
	}
	return nil
}

func (m *GetDeployStatusRequest) GetDeployId() []byte {
	if m != nil {
		return m.DeployId
	}
	return nil
}

type GetDeployStatusResponse struct {
	Deploy *Deploy `protobuf:"bytes,1,opt,name=deploy,proto3" json:"deploy,omitempty"`
	Status string  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// A map of string states with the number of vehicles in that state
	// not all states will necessarily be populated
	VehicleStatus        map[string]string `protobuf:"bytes,3,rep,name=vehicle_status,json=vehicleStatus,proto3" json:"vehicle_status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetDeployStatusResponse) Reset()         { *m = GetDeployStatusResponse{} }
func (m *GetDeployStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeployStatusResponse) ProtoMessage()    {}
func (*GetDeployStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99d02982f475c2a8, []int{28}
}

func (m *GetDeployStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeployStatusResponse.Unmarshal(m, b)
}
func (m *GetDeployStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeployStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetDeployStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeployStatusResponse.Merge(m, src)
}
func (m *GetDeployStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeployStatusResponse.Size(m)
}
func (m *GetDeployStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeployStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeployStatusResponse proto.InternalMessageInfo

func (m *GetDeployStatusResponse) GetDeploy() *Deploy {
	if m != nil {
		return m.Deploy
	}
	return nil
}

func (m *GetDeployStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetDeployStatusResponse) GetVehicleStatus() map[string]string {
	if m != nil {
		return m.VehicleStatus
	}
	return nil
}

func init() {
	proto.RegisterEnum("autonomic.ext.deployment.DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus", DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus_name, DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus_value)
	proto.RegisterEnum("autonomic.ext.deployment.DeleteTargetBundleResponse_DeleteTargetBundleStatus", DeleteTargetBundleResponse_DeleteTargetBundleStatus_name, DeleteTargetBundleResponse_DeleteTargetBundleStatus_value)
	proto.RegisterEnum("autonomic.ext.deployment.DeleteReleaseResponse_DeleteReleaseStatus", DeleteReleaseResponse_DeleteReleaseStatus_name, DeleteReleaseResponse_DeleteReleaseStatus_value)
	proto.RegisterType((*TargetMatcher)(nil), "autonomic.ext.deployment.TargetMatcher")
	proto.RegisterType((*TargetMatcher_FieldMatcher)(nil), "autonomic.ext.deployment.TargetMatcher.FieldMatcher")
	proto.RegisterType((*TargetMatcher_TagMatcher)(nil), "autonomic.ext.deployment.TargetMatcher.TagMatcher")
	proto.RegisterType((*ReleaseArtifact)(nil), "autonomic.ext.deployment.ReleaseArtifact")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.ReleaseArtifact.TagsEntry")
	proto.RegisterType((*TargetBundle)(nil), "autonomic.ext.deployment.TargetBundle")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.TargetBundle.TagsEntry")
	proto.RegisterType((*Release)(nil), "autonomic.ext.deployment.Release")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.Release.TagsEntry")
	proto.RegisterType((*Deploy)(nil), "autonomic.ext.deployment.Deploy")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.Deploy.TagsEntry")
	proto.RegisterType((*CreateReleaseArtifactRequest)(nil), "autonomic.ext.deployment.CreateReleaseArtifactRequest")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.CreateReleaseArtifactRequest.TagsEntry")
	proto.RegisterType((*CreateReleaseArtifactResponse)(nil), "autonomic.ext.deployment.CreateReleaseArtifactResponse")
	proto.RegisterType((*DeleteReleaseArtifactRequest)(nil), "autonomic.ext.deployment.DeleteReleaseArtifactRequest")
	proto.RegisterType((*DeleteReleaseArtifactResponse)(nil), "autonomic.ext.deployment.DeleteReleaseArtifactResponse")
	proto.RegisterMapType((map[string]DeleteReleaseArtifactResponse_DeleteReleaseArtifactStatus)(nil), "autonomic.ext.deployment.DeleteReleaseArtifactResponse.ResultsEntry")
	proto.RegisterType((*GetReleaseArtifactsRequest)(nil), "autonomic.ext.deployment.GetReleaseArtifactsRequest")
	proto.RegisterType((*GetReleaseArtifactsResponse)(nil), "autonomic.ext.deployment.GetReleaseArtifactsResponse")
	proto.RegisterType((*CreateTargetBundleRequest)(nil), "autonomic.ext.deployment.CreateTargetBundleRequest")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.CreateTargetBundleRequest.TagsEntry")
	proto.RegisterType((*CreateTargetBundleResponse)(nil), "autonomic.ext.deployment.CreateTargetBundleResponse")
	proto.RegisterType((*DeleteTargetBundleRequest)(nil), "autonomic.ext.deployment.DeleteTargetBundleRequest")
	proto.RegisterType((*DeleteTargetBundleResponse)(nil), "autonomic.ext.deployment.DeleteTargetBundleResponse")
	proto.RegisterMapType((map[string]DeleteTargetBundleResponse_DeleteTargetBundleStatus)(nil), "autonomic.ext.deployment.DeleteTargetBundleResponse.ResultsEntry")
	proto.RegisterType((*GetTargetBundlesRequest)(nil), "autonomic.ext.deployment.GetTargetBundlesRequest")
	proto.RegisterType((*GetTargetBundlesResponse)(nil), "autonomic.ext.deployment.GetTargetBundlesResponse")
	proto.RegisterType((*CreateReleaseRequest)(nil), "autonomic.ext.deployment.CreateReleaseRequest")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.CreateReleaseRequest.TagsEntry")
	proto.RegisterType((*CreateReleaseResponse)(nil), "autonomic.ext.deployment.CreateReleaseResponse")
	proto.RegisterType((*DeleteReleaseRequest)(nil), "autonomic.ext.deployment.DeleteReleaseRequest")
	proto.RegisterType((*DeleteReleaseResponse)(nil), "autonomic.ext.deployment.DeleteReleaseResponse")
	proto.RegisterMapType((map[string]DeleteReleaseResponse_DeleteReleaseStatus)(nil), "autonomic.ext.deployment.DeleteReleaseResponse.ResultsEntry")
	proto.RegisterType((*GetReleasesRequest)(nil), "autonomic.ext.deployment.GetReleasesRequest")
	proto.RegisterType((*GetReleasesResponse)(nil), "autonomic.ext.deployment.GetReleasesResponse")
	proto.RegisterType((*DeployReleaseRequest)(nil), "autonomic.ext.deployment.DeployReleaseRequest")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.DeployReleaseRequest.TagsEntry")
	proto.RegisterType((*DeployReleaseResponse)(nil), "autonomic.ext.deployment.DeployReleaseResponse")
	proto.RegisterType((*GetDeploysRequest)(nil), "autonomic.ext.deployment.GetDeploysRequest")
	proto.RegisterType((*GetDeploysResponse)(nil), "autonomic.ext.deployment.GetDeploysResponse")
	proto.RegisterType((*GetDeployStatusRequest)(nil), "autonomic.ext.deployment.GetDeployStatusRequest")
	proto.RegisterType((*GetDeployStatusResponse)(nil), "autonomic.ext.deployment.GetDeployStatusResponse")
	proto.RegisterMapType((map[string]string)(nil), "autonomic.ext.deployment.GetDeployStatusResponse.VehicleStatusEntry")
}

func init() {
	proto.RegisterFile("autonomic/ext/deployment/deployment.proto", fileDescriptor_99d02982f475c2a8)
}

var fileDescriptor_99d02982f475c2a8 = []byte{
	// 1654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcd, 0x6f, 0xdb, 0x46,
	0x16, 0x17, 0x29, 0x5b, 0xb2, 0x9e, 0xe4, 0xd8, 0x99, 0x38, 0x59, 0x86, 0x4e, 0x10, 0x87, 0x0b,
	0xec, 0x3a, 0x5f, 0x52, 0xe2, 0x78, 0x13, 0x23, 0xd9, 0x64, 0xfd, 0x21, 0xdb, 0x31, 0xe2, 0xd8,
	0x59, 0x46, 0xce, 0x62, 0x77, 0x8b, 0x1a, 0xb4, 0x38, 0x96, 0x09, 0x4b, 0xa2, 0x4b, 0x8e, 0x02,
	0x1b, 0x3d, 0x14, 0x05, 0xda, 0x43, 0xdb, 0x43, 0xef, 0x3d, 0x15, 0xb9, 0xb7, 0xff, 0x4a, 0xcf,
	0xbd, 0xb5, 0xc7, 0x9c, 0x7a, 0xcd, 0xb1, 0xe0, 0xcc, 0x90, 0x22, 0x25, 0x92, 0x22, 0x95, 0x0f,
	0x24, 0x37, 0x6a, 0x38, 0xef, 0xf7, 0xde, 0xbc, 0xdf, 0xfb, 0x1a, 0x0a, 0xae, 0x68, 0x1d, 0x62,
	0xb6, 0xcd, 0x96, 0x51, 0xaf, 0xe0, 0x63, 0x52, 0xd1, 0xf1, 0x51, 0xd3, 0x3c, 0x69, 0xe1, 0xb6,
	0xff, 0xb1, 0x7c, 0x64, 0x99, 0xc4, 0x44, 0x92, 0xb7, 0xb5, 0x8c, 0x8f, 0x49, 0xb9, 0xfb, 0x5e,
	0xbe, 0xd4, 0x30, 0xcd, 0x46, 0x13, 0x57, 0xe8, 0xbe, 0xbd, 0xce, 0x7e, 0x85, 0x18, 0x2d, 0x6c,
	0x13, 0xad, 0x75, 0xc4, 0x44, 0xe5, 0xcb, 0x41, 0x2d, 0x75, 0xb3, 0xd5, 0x32, 0xdb, 0x15, 0xdc,
	0x26, 0x06, 0x39, 0x61, 0x5b, 0x94, 0x97, 0x22, 0x8c, 0xd7, 0x34, 0xab, 0x81, 0xc9, 0x13, 0x8d,
	0xd4, 0x0f, 0xb0, 0x85, 0x36, 0x61, 0x74, 0xdf, 0xc0, 0x4d, 0x5d, 0x12, 0x66, 0x84, 0xd9, 0xe2,
	0xdc, 0x7c, 0x39, 0x4a, 0x7f, 0x39, 0x20, 0x57, 0x5e, 0x73, 0x84, 0xf8, 0x8f, 0x47, 0x19, 0x95,
	0x81, 0xa0, 0x35, 0xc8, 0x12, 0xad, 0x21, 0x89, 0x14, 0x6b, 0x2e, 0x29, 0x56, 0x4d, 0x6b, 0x74,
	0x91, 0x1c, 0x00, 0x79, 0x01, 0x4a, 0x7e, 0x05, 0x08, 0xc1, 0x48, 0x5b, 0x6b, 0x61, 0x6a, 0x64,
	0x41, 0xa5, 0xcf, 0x68, 0x0a, 0x46, 0x5f, 0x68, 0xcd, 0x0e, 0xa6, 0xda, 0x0a, 0x2a, 0xfb, 0x21,
	0xdf, 0x01, 0xe8, 0xc2, 0x25, 0x97, 0x5b, 0x2e, 0x40, 0xbe, 0xc5, 0x84, 0x94, 0xdf, 0xb2, 0x30,
	0xa1, 0xe2, 0x26, 0xd6, 0x6c, 0xbc, 0x64, 0x11, 0x63, 0x5f, 0xab, 0x13, 0x74, 0x0a, 0x44, 0x43,
	0xe7, 0x30, 0xa2, 0xa1, 0xa3, 0x69, 0x28, 0x10, 0xdc, 0xd6, 0xda, 0x64, 0xd7, 0xd0, 0x39, 0xd0,
	0x18, 0x5b, 0xd8, 0xd0, 0x1d, 0xad, 0xd8, 0x71, 0x43, 0x76, 0x46, 0x98, 0x2d, 0xa9, 0xf4, 0xd9,
	0xb3, 0x64, 0xc4, 0x67, 0xc9, 0x0c, 0x14, 0x75, 0x6c, 0xd7, 0x2d, 0xe3, 0x88, 0x18, 0x66, 0x5b,
	0x1a, 0xa5, 0xaf, 0xfc, 0x4b, 0xe8, 0x3e, 0xe4, 0xb4, 0x0e, 0x39, 0x30, 0x2d, 0x29, 0x47, 0x5d,
	0xfa, 0xd7, 0x1e, 0x97, 0x32, 0x8e, 0xcb, 0x9c, 0xe3, 0x25, 0xba, 0x55, 0xe5, 0x22, 0x68, 0x12,
	0xb2, 0x1d, 0xcb, 0x90, 0xf2, 0x14, 0xd6, 0x79, 0x44, 0x97, 0xa0, 0xb8, 0x77, 0x42, 0xf0, 0x6e,
	0x13, 0xb7, 0x1b, 0xe4, 0x40, 0x1a, 0x9b, 0x11, 0x66, 0x47, 0x54, 0x70, 0x96, 0x36, 0xe9, 0x0a,
	0x92, 0x61, 0xac, 0x7e, 0x80, 0xeb, 0x87, 0x76, 0xa7, 0x25, 0x15, 0xa8, 0xf5, 0xde, 0x6f, 0xe7,
	0x04, 0xe4, 0xe4, 0x08, 0x4b, 0xc0, 0x4e, 0xe0, 0x3c, 0xa3, 0x75, 0x18, 0x21, 0x5a, 0xc3, 0x96,
	0x8a, 0x33, 0xd9, 0xd9, 0xe2, 0xdc, 0xed, 0x68, 0xc2, 0x7b, 0xfc, 0xe9, 0x50, 0x6e, 0xaf, 0xb6,
	0x89, 0x75, 0xa2, 0x52, 0x00, 0x34, 0x0f, 0xf9, 0xba, 0x85, 0x35, 0x82, 0x75, 0xa9, 0x44, 0x4f,
	0x2a, 0x97, 0x59, 0xb8, 0x97, 0xdd, 0x70, 0x2f, 0xd7, 0xdc, 0x70, 0x57, 0xdd, 0xad, 0xf2, 0x5d,
	0x28, 0x78, 0x40, 0xce, 0x71, 0x0f, 0xf1, 0x09, 0xe7, 0xc8, 0x79, 0x0c, 0x67, 0xfa, 0x9e, 0xb8,
	0x20, 0x28, 0x5f, 0x8f, 0x40, 0x89, 0xc5, 0xe0, 0x72, 0xa7, 0xad, 0x37, 0xf1, 0x47, 0xc9, 0xef,
	0x3a, 0x14, 0x34, 0xee, 0x4f, 0x5b, 0xca, 0x53, 0x06, 0xae, 0x24, 0x66, 0x40, 0xed, 0xca, 0xa2,
	0x15, 0x18, 0xe3, 0xb1, 0x6f, 0x4b, 0x63, 0x14, 0xe7, 0xef, 0x09, 0x53, 0x57, 0xf5, 0x04, 0x51,
	0x95, 0x87, 0x42, 0x81, 0x02, 0xdc, 0x1c, 0x04, 0xc0, 0xfc, 0x1e, 0x17, 0x07, 0xf0, 0x1e, 0xe2,
	0xe0, 0xa7, 0x2c, 0xe4, 0xb9, 0x63, 0x3e, 0xca, 0x10, 0xf8, 0x17, 0x77, 0x3a, 0x63, 0xff, 0xda,
	0x40, 0xf6, 0xfb, 0xfc, 0xfd, 0x10, 0x72, 0x7b, 0x94, 0x09, 0x4e, 0xfc, 0xdf, 0x92, 0xf1, 0xa6,
	0x72, 0x29, 0x3f, 0x5f, 0x85, 0xf7, 0xc0, 0xd7, 0xab, 0x2c, 0xe4, 0xaa, 0xd4, 0x24, 0x1f, 0x5d,
	0xa5, 0x70, 0xba, 0x4a, 0xef, 0x84, 0xae, 0xcb, 0x50, 0xaa, 0x6b, 0xcd, 0xe6, 0x9e, 0x56, 0x3f,
	0xdc, 0x75, 0xaa, 0x6b, 0x8e, 0x6d, 0x71, 0xd7, 0x76, 0x2c, 0x03, 0x5d, 0x04, 0xb0, 0x98, 0xbb,
	0x1d, 0x53, 0xf2, 0x54, 0x65, 0x81, 0xaf, 0x6c, 0xe8, 0x3e, 0xc2, 0xc7, 0xd2, 0x13, 0xfe, 0x30,
	0x90, 0x65, 0x57, 0xa3, 0xd9, 0x62, 0x5e, 0x7a, 0x3b, 0xf9, 0x85, 0xee, 0x01, 0xe0, 0xe3, 0x23,
	0xc3, 0xd2, 0xa8, 0x57, 0x8a, 0x03, 0x05, 0x7d, 0xbb, 0x87, 0xe7, 0xfa, 0xc7, 0x2c, 0x5c, 0x58,
	0xa1, 0x06, 0xf4, 0x96, 0x2e, 0xfc, 0x59, 0x07, 0xdb, 0x24, 0xc8, 0xb8, 0xd0, 0x9f, 0xa0, 0x94,
	0x5d, 0x31, 0x9a, 0xdd, 0x6c, 0x5c, 0x32, 0x8e, 0x7c, 0x90, 0xfd, 0xb6, 0x16, 0xe8, 0xb7, 0x8b,
	0xd1, 0xf4, 0xc7, 0x39, 0xae, 0x37, 0x28, 0x86, 0xa7, 0x68, 0x05, 0x2e, 0x46, 0x28, 0xb2, 0x8f,
	0xcc, 0x76, 0x48, 0x4d, 0x75, 0xf3, 0x50, 0xec, 0xe6, 0xa1, 0xb2, 0x0d, 0x17, 0xaa, 0xb8, 0x89,
	0x23, 0x69, 0xa6, 0xe9, 0x44, 0x1f, 0xbb, 0x3c, 0x17, 0xf8, 0xca, 0x86, 0xee, 0xd8, 0x6b, 0xe8,
	0xb6, 0x24, 0xce, 0x64, 0x1d, 0x7b, 0x0d, 0xdd, 0x56, 0x5e, 0x8b, 0x70, 0x31, 0x02, 0x91, 0x9b,
	0x35, 0x00, 0xf2, 0x53, 0xc8, 0x5b, 0xd8, 0xee, 0x34, 0x09, 0x83, 0x2d, 0xce, 0x55, 0xe3, 0xf2,
	0x2c, 0x46, 0x51, 0x59, 0x65, 0x30, 0xcc, 0xd9, 0x2e, 0xa8, 0xfc, 0xbd, 0x00, 0x25, 0xff, 0x9b,
	0x10, 0x9f, 0x1b, 0x7e, 0x9f, 0x9f, 0x9a, 0x7b, 0x36, 0xac, 0x01, 0xa1, 0x6f, 0x9f, 0x11, 0x8d,
	0x74, 0x6c, 0x3f, 0x91, 0x6b, 0x30, 0x1d, 0xb3, 0x13, 0x15, 0x21, 0xbf, 0xb3, 0xf5, 0x78, 0x6b,
	0xfb, 0x3f, 0x5b, 0x93, 0x19, 0xe7, 0x47, 0x75, 0x75, 0x73, 0xb5, 0xb6, 0x5a, 0x9d, 0x14, 0xd0,
	0x38, 0x14, 0xb6, 0xb6, 0x6b, 0xbb, 0x6b, 0xdb, 0x3b, 0x5b, 0xd5, 0x49, 0x51, 0x79, 0x0c, 0xf2,
	0x3a, 0x26, 0x3d, 0x20, 0xb6, 0xcb, 0x24, 0xa7, 0x4a, 0xf0, 0xa8, 0x8a, 0xed, 0xb1, 0xca, 0x3e,
	0x4c, 0x87, 0x82, 0x71, 0x12, 0x03, 0xe3, 0x8f, 0x30, 0xfc, 0xf8, 0xa3, 0xfc, 0x9c, 0x85, 0xf3,
	0x2c, 0x8c, 0x03, 0x2d, 0xee, 0x03, 0xad, 0x32, 0x37, 0x61, 0xca, 0xed, 0x2e, 0xee, 0x11, 0x76,
	0x1d, 0xaf, 0xe6, 0xa8, 0x57, 0x91, 0x15, 0x3c, 0xe7, 0x86, 0x1e, 0x1c, 0xef, 0xf2, 0xc3, 0x8e,
	0x77, 0xff, 0xe6, 0x95, 0x87, 0x8d, 0x09, 0x0f, 0x06, 0x55, 0x9e, 0x10, 0x4f, 0xbe, 0xbd, 0xb2,
	0xb3, 0x08, 0x72, 0x98, 0x96, 0x14, 0x35, 0x67, 0x13, 0xce, 0xb3, 0x78, 0x0f, 0x63, 0x3c, 0x75,
	0xc1, 0x79, 0x25, 0x82, 0x1c, 0x06, 0x97, 0xac, 0xda, 0xfc, 0xbf, 0xb7, 0xda, 0x2c, 0x0d, 0x4a,
	0xf6, 0x30, 0x2d, 0x11, 0xa5, 0xe6, 0x9b, 0xc1, 0xa5, 0xa6, 0x1e, 0x2c, 0x35, 0x4f, 0x86, 0xd2,
	0xde, 0xff, 0xaa, 0xbf, 0xc8, 0xac, 0x80, 0x14, 0xb5, 0x2d, 0x79, 0x85, 0x79, 0x04, 0x7f, 0x59,
	0xc7, 0xc4, 0x8f, 0x30, 0x6c, 0x79, 0xf9, 0x04, 0xa4, 0x7e, 0x24, 0x4e, 0xd9, 0x22, 0xe4, 0xd9,
	0x80, 0xeb, 0x56, 0x96, 0xa4, 0x73, 0xb1, 0x2b, 0xa6, 0xfc, 0x2a, 0xc2, 0x54, 0xa0, 0x37, 0x7e,
	0xa8, 0xf5, 0x64, 0x93, 0x27, 0xf6, 0x28, 0x3d, 0xe7, 0x42, 0xc2, 0x91, 0x22, 0x22, 0xa7, 0xd1,
	0x55, 0x38, 0x4d, 0xa8, 0x3f, 0x76, 0x99, 0x23, 0x7c, 0xa5, 0x69, 0x82, 0xf8, 0x1c, 0xb5, 0xa1,
	0xbf, 0x41, 0xfe, 0xdf, 0x87, 0xb3, 0x3d, 0xc6, 0xa4, 0x48, 0xfd, 0x75, 0x98, 0x0a, 0xb4, 0xba,
	0xa1, 0xb3, 0xfe, 0x17, 0x11, 0xce, 0xf6, 0x20, 0x25, 0x4b, 0xf8, 0xe7, 0xbd, 0x09, 0xff, 0xcf,
	0x84, 0xdd, 0x7d, 0x40, 0xae, 0x7f, 0x31, 0x30, 0xd5, 0xff, 0x1b, 0x4c, 0xf5, 0x95, 0xb4, 0x7a,
	0x03, 0xab, 0xfd, 0x09, 0xfe, 0x10, 0xce, 0x84, 0xec, 0x48, 0x9e, 0xdb, 0x2b, 0x80, 0xba, 0x0d,
	0x7f, 0xd8, 0xb4, 0xae, 0xc1, 0x99, 0x00, 0x08, 0xe7, 0xe4, 0x01, 0x8c, 0xf1, 0xd6, 0xe8, 0xa6,
	0xf4, 0xe5, 0x81, 0xc3, 0x82, 0xea, 0x89, 0x28, 0x7f, 0x88, 0x4e, 0xd8, 0x38, 0x1b, 0xde, 0x7d,
	0x3a, 0x07, 0xef, 0x8f, 0x23, 0x6e, 0xf8, 0xf4, 0xdf, 0x1f, 0x47, 0xd3, 0x67, 0x7b, 0x82, 0xeb,
	0xeb, 0x66, 0xe0, 0x9b, 0xc2, 0xc2, 0xa0, 0x2b, 0x66, 0x7c, 0x41, 0x78, 0xa3, 0x24, 0xef, 0x51,
	0x90, 0x22, 0xc9, 0x97, 0xe1, 0xf4, 0x3a, 0x26, 0x4c, 0x3e, 0x2c, 0x90, 0x4a, 0x11, 0x81, 0xe4,
	0xfb, 0x66, 0xa0, 0x3c, 0xa5, 0xd1, 0xe8, 0x61, 0x70, 0xed, 0xf7, 0x20, 0xcf, 0x5c, 0xe0, 0x86,
	0xd1, 0xcc, 0x40, 0x07, 0xb9, 0x02, 0x8a, 0x0a, 0xe7, 0x3c, 0x44, 0x9e, 0x3d, 0x51, 0x51, 0xe4,
	0xff, 0x78, 0x31, 0x0d, 0x05, 0x86, 0xe0, 0xb3, 0x92, 0x2d, 0x6c, 0xe8, 0xca, 0x0f, 0x22, 0x6d,
	0x88, 0x41, 0x50, 0x6e, 0xeb, 0x02, 0xe4, 0xd8, 0x3e, 0xfe, 0x71, 0x7f, 0xb0, 0xa9, 0x7c, 0x3f,
	0x3a, 0x07, 0x39, 0x9b, 0x62, 0x71, 0x5e, 0xf8, 0x2f, 0x74, 0x08, 0xa7, 0x5e, 0xe0, 0x03, 0xa3,
	0xde, 0xc4, 0xbb, 0xfc, 0x7d, 0x76, 0xd0, 0x05, 0x29, 0xc2, 0xb8, 0xf2, 0x73, 0x86, 0xc3, 0x56,
	0x59, 0xc4, 0x8c, 0xbf, 0xf0, 0xaf, 0xc9, 0x8b, 0x80, 0xfa, 0x37, 0xa5, 0x89, 0xa1, 0xb9, 0xdf,
	0x8b, 0x00, 0x55, 0xcf, 0x14, 0xf4, 0xad, 0xd0, 0xd3, 0x38, 0xbc, 0xcf, 0xfb, 0x77, 0x86, 0xbb,
	0x49, 0xcb, 0x77, 0x53, 0xcb, 0xb1, 0xd3, 0x2b, 0x19, 0x6a, 0x4c, 0xe8, 0x9d, 0x2b, 0xce, 0x98,
	0xb8, 0x8b, 0x72, 0x9c, 0x31, 0xb1, 0x97, 0x44, 0x25, 0x83, 0xbe, 0x12, 0xfc, 0x55, 0xd3, 0xbb,
	0x6b, 0xa1, 0xf9, 0x58, 0x5e, 0x23, 0xee, 0x79, 0xf2, 0x3f, 0x52, 0x4a, 0x79, 0x66, 0x7c, 0x29,
	0x00, 0xea, 0x9f, 0xec, 0xd1, 0xed, 0x21, 0x6e, 0x1b, 0xf2, 0x7c, 0x3a, 0xa1, 0x80, 0x0d, 0xfd,
	0x63, 0x6a, 0x9c, 0x0d, 0x91, 0x37, 0x89, 0x38, 0x1b, 0xa2, 0x67, 0x69, 0x25, 0x83, 0x3e, 0x87,
	0xc9, 0xde, 0xd1, 0x14, 0xdd, 0x8a, 0x75, 0x6a, 0xd8, 0x40, 0x2c, 0xcf, 0xa5, 0x11, 0xf1, 0x94,
	0x5b, 0x30, 0x1e, 0x88, 0x5d, 0x54, 0x4e, 0x37, 0x13, 0xca, 0x95, 0xc4, 0xfb, 0xfd, 0x3a, 0x03,
	0x21, 0x1a, 0xa7, 0x33, 0x6c, 0x7a, 0x8b, 0xd3, 0x19, 0x3a, 0xca, 0x28, 0x19, 0xd4, 0x84, 0xa2,
	0x6f, 0x50, 0x40, 0xd7, 0x93, 0x04, 0xad, 0xe7, 0xda, 0x1b, 0x09, 0x77, 0x07, 0x4f, 0xe8, 0x6b,
	0x67, 0xf1, 0x27, 0xec, 0x6f, 0xac, 0xf1, 0x27, 0x0c, 0xe9, 0x93, 0x4a, 0x06, 0x19, 0x00, 0xdd,
	0x0e, 0x86, 0xae, 0x25, 0xa8, 0xd1, 0xde, 0xf9, 0xae, 0x27, 0xdb, 0xec, 0xa9, 0x3a, 0x86, 0x89,
	0x9e, 0x42, 0x8f, 0x6e, 0xa6, 0xe8, 0x09, 0x4c, 0xe9, 0xad, 0xd4, 0x5d, 0x44, 0xc9, 0x2c, 0x7f,
	0x27, 0xc0, 0x85, 0xba, 0xd9, 0x8a, 0x14, 0x5d, 0x9e, 0xe8, 0x76, 0x80, 0xa7, 0x96, 0x49, 0xcc,
	0xa7, 0xc2, 0xff, 0xb6, 0x1b, 0x06, 0x39, 0xe8, 0xec, 0x39, 0xa3, 0x52, 0xc5, 0x93, 0xbb, 0xa1,
	0x19, 0x15, 0x7c, 0x4c, 0xb0, 0xd5, 0xd6, 0x9a, 0x37, 0xe8, 0x47, 0x6d, 0xbb, 0x62, 0x5b, 0xf5,
	0x4a, 0x4b, 0x33, 0xda, 0xec, 0x4f, 0xf7, 0x4a, 0xd4, 0xdf, 0xf8, 0xaf, 0x05, 0xe1, 0xa5, 0x98,
	0x5d, 0xda, 0xa9, 0xed, 0xe5, 0xe8, 0xc6, 0xdb, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x38, 0x13,
	0x3f, 0x88, 0xf2, 0x1f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeploymentClient is the client API for Deployment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeploymentClient interface {
	// Creates a ReleaseArtifact
	CreateReleaseArtifact(ctx context.Context, in *CreateReleaseArtifactRequest, opts ...grpc.CallOption) (*CreateReleaseArtifactResponse, error)
	// Deletes a ReleaseArtifact by UUID
	DeleteReleaseArtifact(ctx context.Context, in *DeleteReleaseArtifactRequest, opts ...grpc.CallOption) (*DeleteReleaseArtifactResponse, error)
	// Return one or more ReleaseArtifacts by UUID
	GetReleaseArtifacts(ctx context.Context, in *GetReleaseArtifactsRequest, opts ...grpc.CallOption) (*GetReleaseArtifactsResponse, error)
	// Creates a TargetBundle
	CreateTargetBundle(ctx context.Context, in *CreateTargetBundleRequest, opts ...grpc.CallOption) (*CreateTargetBundleResponse, error)
	// Delete a Release Manifest by UUID
	DeleteTargetBundle(ctx context.Context, in *DeleteTargetBundleRequest, opts ...grpc.CallOption) (*DeleteTargetBundleResponse, error)
	// Return one or more TargetBundles by UUID
	GetTargetBundles(ctx context.Context, in *GetTargetBundlesRequest, opts ...grpc.CallOption) (*GetTargetBundlesResponse, error)
	// Create a Release
	CreateRelease(ctx context.Context, in *CreateReleaseRequest, opts ...grpc.CallOption) (*CreateReleaseResponse, error)
	// Delete a Release by UUID
	DeleteRelease(ctx context.Context, in *DeleteReleaseRequest, opts ...grpc.CallOption) (*DeleteReleaseResponse, error)
	// Get a list of Releases
	GetReleases(ctx context.Context, in *GetReleasesRequest, opts ...grpc.CallOption) (*GetReleasesResponse, error)
	// Initiate a Deployment for a given Release to the appropriate devices
	DeployRelease(ctx context.Context, in *DeployReleaseRequest, opts ...grpc.CallOption) (*DeployReleaseResponse, error)
	// Return one ore more Deploy entities based on UUID
	GetDeploys(ctx context.Context, in *GetDeploysRequest, opts ...grpc.CallOption) (*GetDeploysResponse, error)
	// Returns status of a deployment and all information about vehicle deployment status
	GetDeployStatus(ctx context.Context, in *GetDeployStatusRequest, opts ...grpc.CallOption) (*GetDeployStatusResponse, error)
}

type deploymentClient struct {
	cc grpc.ClientConnInterface
}

func NewDeploymentClient(cc grpc.ClientConnInterface) DeploymentClient {
	return &deploymentClient{cc}
}

func (c *deploymentClient) CreateReleaseArtifact(ctx context.Context, in *CreateReleaseArtifactRequest, opts ...grpc.CallOption) (*CreateReleaseArtifactResponse, error) {
	out := new(CreateReleaseArtifactResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/CreateReleaseArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) DeleteReleaseArtifact(ctx context.Context, in *DeleteReleaseArtifactRequest, opts ...grpc.CallOption) (*DeleteReleaseArtifactResponse, error) {
	out := new(DeleteReleaseArtifactResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/DeleteReleaseArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) GetReleaseArtifacts(ctx context.Context, in *GetReleaseArtifactsRequest, opts ...grpc.CallOption) (*GetReleaseArtifactsResponse, error) {
	out := new(GetReleaseArtifactsResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/GetReleaseArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) CreateTargetBundle(ctx context.Context, in *CreateTargetBundleRequest, opts ...grpc.CallOption) (*CreateTargetBundleResponse, error) {
	out := new(CreateTargetBundleResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/CreateTargetBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) DeleteTargetBundle(ctx context.Context, in *DeleteTargetBundleRequest, opts ...grpc.CallOption) (*DeleteTargetBundleResponse, error) {
	out := new(DeleteTargetBundleResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/DeleteTargetBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) GetTargetBundles(ctx context.Context, in *GetTargetBundlesRequest, opts ...grpc.CallOption) (*GetTargetBundlesResponse, error) {
	out := new(GetTargetBundlesResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/GetTargetBundles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) CreateRelease(ctx context.Context, in *CreateReleaseRequest, opts ...grpc.CallOption) (*CreateReleaseResponse, error) {
	out := new(CreateReleaseResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/CreateRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) DeleteRelease(ctx context.Context, in *DeleteReleaseRequest, opts ...grpc.CallOption) (*DeleteReleaseResponse, error) {
	out := new(DeleteReleaseResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/DeleteRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) GetReleases(ctx context.Context, in *GetReleasesRequest, opts ...grpc.CallOption) (*GetReleasesResponse, error) {
	out := new(GetReleasesResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/GetReleases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) DeployRelease(ctx context.Context, in *DeployReleaseRequest, opts ...grpc.CallOption) (*DeployReleaseResponse, error) {
	out := new(DeployReleaseResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/DeployRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) GetDeploys(ctx context.Context, in *GetDeploysRequest, opts ...grpc.CallOption) (*GetDeploysResponse, error) {
	out := new(GetDeploysResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/GetDeploys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) GetDeployStatus(ctx context.Context, in *GetDeployStatusRequest, opts ...grpc.CallOption) (*GetDeployStatusResponse, error) {
	out := new(GetDeployStatusResponse)
	err := c.cc.Invoke(ctx, "/autonomic.ext.deployment.Deployment/GetDeployStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeploymentServer is the server API for Deployment service.
type DeploymentServer interface {
	// Creates a ReleaseArtifact
	CreateReleaseArtifact(context.Context, *CreateReleaseArtifactRequest) (*CreateReleaseArtifactResponse, error)
	// Deletes a ReleaseArtifact by UUID
	DeleteReleaseArtifact(context.Context, *DeleteReleaseArtifactRequest) (*DeleteReleaseArtifactResponse, error)
	// Return one or more ReleaseArtifacts by UUID
	GetReleaseArtifacts(context.Context, *GetReleaseArtifactsRequest) (*GetReleaseArtifactsResponse, error)
	// Creates a TargetBundle
	CreateTargetBundle(context.Context, *CreateTargetBundleRequest) (*CreateTargetBundleResponse, error)
	// Delete a Release Manifest by UUID
	DeleteTargetBundle(context.Context, *DeleteTargetBundleRequest) (*DeleteTargetBundleResponse, error)
	// Return one or more TargetBundles by UUID
	GetTargetBundles(context.Context, *GetTargetBundlesRequest) (*GetTargetBundlesResponse, error)
	// Create a Release
	CreateRelease(context.Context, *CreateReleaseRequest) (*CreateReleaseResponse, error)
	// Delete a Release by UUID
	DeleteRelease(context.Context, *DeleteReleaseRequest) (*DeleteReleaseResponse, error)
	// Get a list of Releases
	GetReleases(context.Context, *GetReleasesRequest) (*GetReleasesResponse, error)
	// Initiate a Deployment for a given Release to the appropriate devices
	DeployRelease(context.Context, *DeployReleaseRequest) (*DeployReleaseResponse, error)
	// Return one ore more Deploy entities based on UUID
	GetDeploys(context.Context, *GetDeploysRequest) (*GetDeploysResponse, error)
	// Returns status of a deployment and all information about vehicle deployment status
	GetDeployStatus(context.Context, *GetDeployStatusRequest) (*GetDeployStatusResponse, error)
}

// UnimplementedDeploymentServer can be embedded to have forward compatible implementations.
type UnimplementedDeploymentServer struct {
}

func (*UnimplementedDeploymentServer) CreateReleaseArtifact(ctx context.Context, req *CreateReleaseArtifactRequest) (*CreateReleaseArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReleaseArtifact not implemented")
}
func (*UnimplementedDeploymentServer) DeleteReleaseArtifact(ctx context.Context, req *DeleteReleaseArtifactRequest) (*DeleteReleaseArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteReleaseArtifact not implemented")
}
func (*UnimplementedDeploymentServer) GetReleaseArtifacts(ctx context.Context, req *GetReleaseArtifactsRequest) (*GetReleaseArtifactsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleaseArtifacts not implemented")
}
func (*UnimplementedDeploymentServer) CreateTargetBundle(ctx context.Context, req *CreateTargetBundleRequest) (*CreateTargetBundleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTargetBundle not implemented")
}
func (*UnimplementedDeploymentServer) DeleteTargetBundle(ctx context.Context, req *DeleteTargetBundleRequest) (*DeleteTargetBundleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTargetBundle not implemented")
}
func (*UnimplementedDeploymentServer) GetTargetBundles(ctx context.Context, req *GetTargetBundlesRequest) (*GetTargetBundlesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTargetBundles not implemented")
}
func (*UnimplementedDeploymentServer) CreateRelease(ctx context.Context, req *CreateReleaseRequest) (*CreateReleaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRelease not implemented")
}
func (*UnimplementedDeploymentServer) DeleteRelease(ctx context.Context, req *DeleteReleaseRequest) (*DeleteReleaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRelease not implemented")
}
func (*UnimplementedDeploymentServer) GetReleases(ctx context.Context, req *GetReleasesRequest) (*GetReleasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleases not implemented")
}
func (*UnimplementedDeploymentServer) DeployRelease(ctx context.Context, req *DeployReleaseRequest) (*DeployReleaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployRelease not implemented")
}
func (*UnimplementedDeploymentServer) GetDeploys(ctx context.Context, req *GetDeploysRequest) (*GetDeploysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeploys not implemented")
}
func (*UnimplementedDeploymentServer) GetDeployStatus(ctx context.Context, req *GetDeployStatusRequest) (*GetDeployStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeployStatus not implemented")
}

func RegisterDeploymentServer(s *grpc.Server, srv DeploymentServer) {
	s.RegisterService(&_Deployment_serviceDesc, srv)
}

func _Deployment_CreateReleaseArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReleaseArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).CreateReleaseArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/CreateReleaseArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).CreateReleaseArtifact(ctx, req.(*CreateReleaseArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_DeleteReleaseArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReleaseArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).DeleteReleaseArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/DeleteReleaseArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).DeleteReleaseArtifact(ctx, req.(*DeleteReleaseArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_GetReleaseArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseArtifactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).GetReleaseArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/GetReleaseArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).GetReleaseArtifacts(ctx, req.(*GetReleaseArtifactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_CreateTargetBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTargetBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).CreateTargetBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/CreateTargetBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).CreateTargetBundle(ctx, req.(*CreateTargetBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_DeleteTargetBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTargetBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).DeleteTargetBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/DeleteTargetBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).DeleteTargetBundle(ctx, req.(*DeleteTargetBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_GetTargetBundles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTargetBundlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).GetTargetBundles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/GetTargetBundles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).GetTargetBundles(ctx, req.(*GetTargetBundlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_CreateRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).CreateRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/CreateRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).CreateRelease(ctx, req.(*CreateReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_DeleteRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).DeleteRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/DeleteRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).DeleteRelease(ctx, req.(*DeleteReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_GetReleases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).GetReleases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/GetReleases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).GetReleases(ctx, req.(*GetReleasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_DeployRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).DeployRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/DeployRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).DeployRelease(ctx, req.(*DeployReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_GetDeploys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).GetDeploys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/GetDeploys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).GetDeploys(ctx, req.(*GetDeploysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_GetDeployStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeployStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).GetDeployStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autonomic.ext.deployment.Deployment/GetDeployStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).GetDeployStatus(ctx, req.(*GetDeployStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deployment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "autonomic.ext.deployment.Deployment",
	HandlerType: (*DeploymentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateReleaseArtifact",
			Handler:    _Deployment_CreateReleaseArtifact_Handler,
		},
		{
			MethodName: "DeleteReleaseArtifact",
			Handler:    _Deployment_DeleteReleaseArtifact_Handler,
		},
		{
			MethodName: "GetReleaseArtifacts",
			Handler:    _Deployment_GetReleaseArtifacts_Handler,
		},
		{
			MethodName: "CreateTargetBundle",
			Handler:    _Deployment_CreateTargetBundle_Handler,
		},
		{
			MethodName: "DeleteTargetBundle",
			Handler:    _Deployment_DeleteTargetBundle_Handler,
		},
		{
			MethodName: "GetTargetBundles",
			Handler:    _Deployment_GetTargetBundles_Handler,
		},
		{
			MethodName: "CreateRelease",
			Handler:    _Deployment_CreateRelease_Handler,
		},
		{
			MethodName: "DeleteRelease",
			Handler:    _Deployment_DeleteRelease_Handler,
		},
		{
			MethodName: "GetReleases",
			Handler:    _Deployment_GetReleases_Handler,
		},
		{
			MethodName: "DeployRelease",
			Handler:    _Deployment_DeployRelease_Handler,
		},
		{
			MethodName: "GetDeploys",
			Handler:    _Deployment_GetDeploys_Handler,
		},
		{
			MethodName: "GetDeployStatus",
			Handler:    _Deployment_GetDeployStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "autonomic/ext/deployment/deployment.proto",
}
